(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("vue"));
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["vue-tailwind"] = factory(require("vue"));
	else
		root["vue-tailwind"] = factory(root["Vue"]);
})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "00ee":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "00fd":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "0366":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "03dd":
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__("eac5"),
    nativeKeys = __webpack_require__("57a5");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),

/***/ "0481":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var flattenIntoArray = __webpack_require__("a2bf");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var toInteger = __webpack_require__("a691");
var arraySpeciesCreate = __webpack_require__("65f0");

// `Array.prototype.flat` method
// https://github.com/tc39/proposal-flatMap
$({ target: 'Array', proto: true }, {
  flat: function flat(/* depthArg = 1 */) {
    var depthArg = arguments.length ? arguments[0] : undefined;
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});


/***/ }),

/***/ "057f":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyNames = __webpack_require__("241c").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "0621":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69"),
    isArguments = __webpack_require__("d370"),
    isArray = __webpack_require__("6747");

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),

/***/ "0644":
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__("3818");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;


/***/ }),

/***/ "06cf":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createPropertyDescriptor = __webpack_require__("5c6c");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var has = __webpack_require__("5135");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "07c7":
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ "087d":
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),

/***/ "08cc":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("1a8c");

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),

/***/ "099a":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),

/***/ "0b07":
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__("34ac"),
    getValue = __webpack_require__("3698");

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ "0cfb":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var createElement = __webpack_require__("cc12");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "0d24":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__("2b3e"),
    stubFalse = __webpack_require__("07c7");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("62e4")(module)))

/***/ }),

/***/ "0f0f":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    keysIn = __webpack_require__("9934");

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),

/***/ "100e":
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__("cd9d"),
    overRest = __webpack_require__("2286"),
    setToString = __webpack_require__("c1c9");

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),

/***/ "1041":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    getSymbolsIn = __webpack_require__("a029");

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),

/***/ "1148":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.repeat` method implementation
// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
module.exports = ''.repeat || function repeat(count) {
  var str = String(requireObjectCoercible(this));
  var result = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};


/***/ }),

/***/ "1276":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var isRegExp = __webpack_require__("44e7");
var anObject = __webpack_require__("825a");
var requireObjectCoercible = __webpack_require__("1d80");
var speciesConstructor = __webpack_require__("4840");
var advanceStringIndex = __webpack_require__("8aa5");
var toLength = __webpack_require__("50c4");
var callRegExpExec = __webpack_require__("14c3");
var regexpExec = __webpack_require__("9263");
var fails = __webpack_require__("d039");

var arrayPush = [].push;
var min = Math.min;
var MAX_UINT32 = 0xFFFFFFFF;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });

// @@split logic
fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] == 'c' ||
    'test'.split(/(?:)/, -1).length != 4 ||
    'ab'.split(/(?:ab)*/).length != 2 ||
    '.'.split(/(.?)(.?)/).length != 4 ||
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return nativeSplit.call(string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output.length > lim ? output.slice(0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
}, !SUPPORTS_Y);


/***/ }),

/***/ "1290":
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),

/***/ "1310":
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "1368":
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__("da03");

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ "14c3":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var regexpExec = __webpack_require__("9263");

// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "159a":
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__("32b3"),
    castPath = __webpack_require__("e2e4"),
    isIndex = __webpack_require__("c098"),
    isObject = __webpack_require__("1a8c"),
    toKey = __webpack_require__("f4d6");

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;


/***/ }),

/***/ "159b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var forEach = __webpack_require__("17c2");
var createNonEnumerableProperty = __webpack_require__("9112");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "15f3":
/***/ (function(module, exports, __webpack_require__) {

var basePickBy = __webpack_require__("89d9"),
    hasIn = __webpack_require__("8604");

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}

module.exports = basePick;


/***/ }),

/***/ "17c2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__("b727").forEach;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('forEach');
var USES_TO_LENGTH = arrayMethodUsesToLength('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "1838":
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__("c05f"),
    get = __webpack_require__("9b02"),
    hasIn = __webpack_require__("8604"),
    isKey = __webpack_require__("f608"),
    isStrictComparable = __webpack_require__("08cc"),
    matchesStrictComparable = __webpack_require__("20ec"),
    toKey = __webpack_require__("f4d6");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),

/***/ "18d8":
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__("234d");

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),

/***/ "19aa":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "1a2d":
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__("42a2"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),

/***/ "1a8c":
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "1bac":
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__("7d1f"),
    getSymbolsIn = __webpack_require__("a029"),
    keysIn = __webpack_require__("9934");

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),

/***/ "1be4":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1c0b":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "1c3c":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69"),
    Uint8Array = __webpack_require__("2474"),
    eq = __webpack_require__("9638"),
    equalArrays = __webpack_require__("a2be"),
    mapToArray = __webpack_require__("edfa"),
    setToArray = __webpack_require__("ac41");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),

/***/ "1c7e":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "1cba":
/***/ (function(module, exports, __webpack_require__) {

var baseRange = __webpack_require__("4796"),
    isIterateeCall = __webpack_require__("9aff"),
    toFinite = __webpack_require__("6428");

/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
      end = step = undefined;
    }
    // Ensure the sign of `-0` is preserved.
    start = toFinite(start);
    if (end === undefined) {
      end = start;
      start = 0;
    } else {
      end = toFinite(end);
    }
    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
    return baseRange(start, end, step, fromRight);
  };
}

module.exports = createRange;


/***/ }),

/***/ "1cdc":
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__("342f");

module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "1cec":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),

/***/ "1d80":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "1dde":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "1efc":
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),

/***/ "1fc8":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),

/***/ "20ec":
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),

/***/ "2266":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var bind = __webpack_require__("0366");
var getIteratorMethod = __webpack_require__("35a1");
var callWithSafeIterationClosing = __webpack_require__("9bdd");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {
  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);
  var iterator, iterFn, index, length, result, next, step;

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = AS_ENTRIES
          ? boundFunction(anObject(step = iterable[index])[0], step[1])
          : boundFunction(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};

iterate.stop = function (result) {
  return new Result(true, result);
};


/***/ }),

/***/ "2286":
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__("85e3");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),

/***/ "234d":
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__("e380");

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),

/***/ "23cb":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "23e7":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var setGlobal = __webpack_require__("ce4e");
var copyConstructorProperties = __webpack_require__("e893");
var isForced = __webpack_require__("94ca");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "241c":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "242e":
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__("72af"),
    keys = __webpack_require__("ec69");

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),

/***/ "2474":
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__("2b3e");

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),

/***/ "2478":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),

/***/ "2524":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),

/***/ "2532":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var notARegExp = __webpack_require__("5a34");
var requireObjectCoercible = __webpack_require__("1d80");
var correctIsRegExpLogic = __webpack_require__("ab13");

// `String.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~String(requireObjectCoercible(this))
      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "253c":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ "2593":
/***/ (function(module, exports, __webpack_require__) {

var basePick = __webpack_require__("15f3"),
    flatRest = __webpack_require__("c6cf");

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = flatRest(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});

module.exports = pick;


/***/ }),

/***/ "25f0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefine = __webpack_require__("6eeb");
var anObject = __webpack_require__("825a");
var fails = __webpack_require__("d039");
var flags = __webpack_require__("ad6d");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = String(R.source);
    var rf = R.flags;
    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "2626":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__("d066");
var definePropertyModule = __webpack_require__("9bf2");
var wellKnownSymbol = __webpack_require__("b622");
var DESCRIPTORS = __webpack_require__("83ab");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "26e8":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),

/***/ "28c9":
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),

/***/ "29f3":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "2b03":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),

/***/ "2b3e":
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__("585a");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "2cf4":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");
var bind = __webpack_require__("0366");
var html = __webpack_require__("1be4");
var createElement = __webpack_require__("cc12");
var IS_IOS = __webpack_require__("1cdc");

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (classof(process) == 'process') {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    typeof postMessage == 'function' &&
    !global.importScripts &&
    !fails(post) &&
    location.protocol !== 'file:'
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "2d00":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var userAgent = __webpack_require__("342f");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "2d7c":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),

/***/ "2dcb":
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__("91e9");

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),

/***/ "2ec1":
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__("100e"),
    isIterateeCall = __webpack_require__("9aff");

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),

/***/ "2fcc":
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),

/***/ "30c9":
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__("9520"),
    isLength = __webpack_require__("b218");

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ "32b3":
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__("872a"),
    eq = __webpack_require__("9638");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),

/***/ "32f4":
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__("2d7c"),
    stubArray = __webpack_require__("d327");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),

/***/ "32fa":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4160");
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("b64b");
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("d3b7");
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("e6cf");
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("159b");
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _Users_alfonso_Projects_vue_tailwind_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("53ca");
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("9ab4");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("9b02");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _types_Dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("8896");
/* harmony import */ var _components_TDialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("f876");











var parseDialogOptions = function parseDialogOptions(type, settings, titleOrDialogOptions, text, icon) {
  var props = _components_TDialog__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"].options.props;

  var propsData = Object(tslib__WEBPACK_IMPORTED_MODULE_6__[/* __assign */ "a"])({
    type: type
  }, settings);

  var target = 'body';

  if (titleOrDialogOptions) {
    if (Object(_Users_alfonso_Projects_vue_tailwind_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])(titleOrDialogOptions) === 'object') {
      Object.keys(props).forEach(function (propName) {
        if (propName in titleOrDialogOptions) {
          var defaultValue = lodash_get__WEBPACK_IMPORTED_MODULE_7___default()(props, propName + ".default");
          propsData[propName] = lodash_get__WEBPACK_IMPORTED_MODULE_7___default()(titleOrDialogOptions, propName, defaultValue);
        }
      });

      if (titleOrDialogOptions.target) {
        target = titleOrDialogOptions.target;
      }
    } else if (typeof titleOrDialogOptions === 'string') {
      propsData.title = titleOrDialogOptions;

      if (typeof text !== 'undefined') {
        propsData.text = text;
      }

      if (typeof icon !== 'undefined') {
        propsData.icon = icon;
      }
    }
  }

  return {
    propsData: propsData,
    target: target
  };
};

var buildDialog = function buildDialog(target, propsData) {
  var domTarget = document.querySelector(target);

  if (!domTarget) {
    throw new Error('Target not found!');
  }

  var instance = new _components_TDialog__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"]({
    propsData: propsData
  });
  instance.$mount();
  domTarget.appendChild(instance.$el);
  instance.show();
  return new Promise(function (resolve, reject) {
    instance.resolve = resolve;
    instance.reject = reject;
  });
};

var configureDialogGlobals = function configureDialogGlobals(Vue, settings) {
  if (!Vue.prototype.$dialog) {
    // eslint-disable-next-line no-param-reassign
    Vue.prototype.$dialog = new Vue({
      methods: {
        alert: function alert(titleOrDialogOptions, text, icon) {
          var _a = parseDialogOptions(_types_Dialog__WEBPACK_IMPORTED_MODULE_8__[/* DialogType */ "a"].Alert, settings, titleOrDialogOptions, text, icon),
              propsData = _a.propsData,
              target = _a.target;

          return buildDialog(target, propsData);
        },
        confirm: function confirm(titleOrDialogOptions, text, icon) {
          var _a = parseDialogOptions(_types_Dialog__WEBPACK_IMPORTED_MODULE_8__[/* DialogType */ "a"].Confirm, settings, titleOrDialogOptions, text, icon),
              propsData = _a.propsData,
              target = _a.target;

          return buildDialog(target, propsData);
        },
        prompt: function prompt(titleOrDialogOptions, text, icon) {
          var _a = parseDialogOptions(_types_Dialog__WEBPACK_IMPORTED_MODULE_8__[/* DialogType */ "a"].Prompt, settings, titleOrDialogOptions, text, icon),
              propsData = _a.propsData,
              target = _a.target;

          return buildDialog(target, propsData);
        },
        show: function show(name, params) {
          var _this = this;

          if (params === void 0) {
            params = undefined;
          }

          return new Promise(function (resolve, reject) {
            _this.$emit("show-" + name, resolve, reject, params);
          });
        },
        hide: function hide(name) {
          this.$emit("hide-" + name);
        }
      }
    });
  }

  if (!Vue.prototype.$alert) {
    // eslint-disable-next-line no-param-reassign
    Vue.prototype.$alert = Vue.prototype.$dialog.alert; // eslint-disable-next-line no-param-reassign

    Vue.prototype.$confirm = Vue.prototype.$dialog.confirm; // eslint-disable-next-line no-param-reassign

    Vue.prototype.$prompt = Vue.prototype.$dialog.prompt;
  }
};

/* harmony default export */ __webpack_exports__["a"] = (configureDialogGlobals);

/***/ }),

/***/ "342f":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "34ac":
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__("9520"),
    isMasked = __webpack_require__("1368"),
    isObject = __webpack_require__("1a8c"),
    toSource = __webpack_require__("dc57");

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ "35a1":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("f5df");
var Iterators = __webpack_require__("3f8c");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "3698":
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ "3729":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69"),
    getRawTag = __webpack_require__("00fd"),
    objectToString = __webpack_require__("29f3");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "375a":
/***/ (function(module, exports, __webpack_require__) {

var createCompounder = __webpack_require__("b20a");

/**
 * Converts `string` to
 * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the kebab cased string.
 * @example
 *
 * _.kebabCase('Foo Bar');
 * // => 'foo-bar'
 *
 * _.kebabCase('fooBar');
 * // => 'foo-bar'
 *
 * _.kebabCase('__FOO_BAR__');
 * // => 'foo-bar'
 */
var kebabCase = createCompounder(function(result, word, index) {
  return result + (index ? '-' : '') + word.toLowerCase();
});

module.exports = kebabCase;


/***/ }),

/***/ "37e8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var anObject = __webpack_require__("825a");
var objectKeys = __webpack_require__("df75");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "3818":
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__("7e64"),
    arrayEach = __webpack_require__("8057"),
    assignValue = __webpack_require__("32b3"),
    baseAssign = __webpack_require__("5b01"),
    baseAssignIn = __webpack_require__("0f0f"),
    cloneBuffer = __webpack_require__("e5383"),
    copyArray = __webpack_require__("4359"),
    copySymbols = __webpack_require__("54eb"),
    copySymbolsIn = __webpack_require__("1041"),
    getAllKeys = __webpack_require__("a994"),
    getAllKeysIn = __webpack_require__("1bac"),
    getTag = __webpack_require__("42a2"),
    initCloneArray = __webpack_require__("c87c"),
    initCloneByTag = __webpack_require__("c2b6"),
    initCloneObject = __webpack_require__("fa21"),
    isArray = __webpack_require__("6747"),
    isBuffer = __webpack_require__("0d24"),
    isMap = __webpack_require__("cc45"),
    isObject = __webpack_require__("1a8c"),
    isSet = __webpack_require__("d7ee"),
    keys = __webpack_require__("ec69"),
    keysIn = __webpack_require__("9934");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),

/***/ "39ff":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),

/***/ "3b4a":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07");

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),

/***/ "3bb4":
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__("08cc"),
    keys = __webpack_require__("ec69");

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),

/***/ "3bbe":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "3ca3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "3f8c":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "4069":
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__("44d2");

addToUnscopables('flat');


/***/ }),

/***/ "408a":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `thisNumberValue` abstract operation
// https://tc39.github.io/ecma262/#sec-thisnumbervalue
module.exports = function (value) {
  if (typeof value != 'number' && classof(value) != 'Number') {
    throw TypeError('Incorrect invocation');
  }
  return +value;
};


/***/ }),

/***/ "4160":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var forEach = __webpack_require__("17c2");

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "41c3":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("1a8c"),
    isPrototype = __webpack_require__("eac5"),
    nativeKeysIn = __webpack_require__("ec8c");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),

/***/ "4245":
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__("1290");

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),

/***/ "42454":
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__("f909"),
    createAssigner = __webpack_require__("2ec1");

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),

/***/ "4284":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),

/***/ "428f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global;


/***/ }),

/***/ "42a2":
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__("b5a7"),
    Map = __webpack_require__("79bc"),
    Promise = __webpack_require__("1cec"),
    Set = __webpack_require__("c869"),
    WeakMap = __webpack_require__("39ff"),
    baseGetTag = __webpack_require__("3729"),
    toSource = __webpack_require__("dc57");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),

/***/ "4359":
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),

/***/ "44ad":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "44d2":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var create = __webpack_require__("7c73");
var definePropertyModule = __webpack_require__("9bf2");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "44de":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "44e7":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var classof = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "45fc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $some = __webpack_require__("b727").some;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('some');
var USES_TO_LENGTH = arrayMethodUsesToLength('some');

// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4796":
/***/ (function(module, exports) {

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */
function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }
  return result;
}

module.exports = baseRange;


/***/ }),

/***/ "47f5":
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__("2b03"),
    baseIsNaN = __webpack_require__("d9a8"),
    strictIndexOf = __webpack_require__("099a");

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),

/***/ "4840":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aFunction = __webpack_require__("1c0b");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "48a0":
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__("242e"),
    createBaseEach = __webpack_require__("950a");

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),

/***/ "4930":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "498a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $trim = __webpack_require__("58a8").trim;
var forcedStringTrimMethod = __webpack_require__("c8d2");

// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),

/***/ "49f4":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),

/***/ "4caa":
/***/ (function(module, exports, __webpack_require__) {

var deburrLetter = __webpack_require__("a919"),
    toString = __webpack_require__("76dd");

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

/** Used to compose unicode capture groups. */
var rsCombo = '[' + rsComboRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = toString(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
}

module.exports = deburr;


/***/ }),

/***/ "4d63":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var inheritIfRequired = __webpack_require__("7156");
var defineProperty = __webpack_require__("9bf2").f;
var getOwnPropertyNames = __webpack_require__("241c").f;
var isRegExp = __webpack_require__("44e7");
var getFlags = __webpack_require__("ad6d");
var stickyHelpers = __webpack_require__("9f7f");
var redefine = __webpack_require__("6eeb");
var fails = __webpack_require__("d039");
var setInternalState = __webpack_require__("69f3").set;
var setSpecies = __webpack_require__("2626");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');
var NativeRegExp = global.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

var FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {
  re2[MATCH] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
})));

// `RegExp` constructor
// https://tc39.github.io/ecma262/#sec-regexp-constructor
if (FORCED) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = this instanceof RegExpWrapper;
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var sticky;

    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {
      return pattern;
    }

    if (CORRECT_NEW) {
      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;
    } else if (pattern instanceof RegExpWrapper) {
      if (flagsAreUndefined) flags = getFlags.call(pattern);
      pattern = pattern.source;
    }

    if (UNSUPPORTED_Y) {
      sticky = !!flags && flags.indexOf('y') > -1;
      if (sticky) flags = flags.replace(/y/g, '');
    }

    var result = inheritIfRequired(
      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),
      thisIsRegExp ? this : RegExpPrototype,
      RegExpWrapper
    );

    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });

    return result;
  };
  var proxy = function (key) {
    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
      configurable: true,
      get: function () { return NativeRegExp[key]; },
      set: function (it) { NativeRegExp[key] = it; }
    });
  };
  var keys = getOwnPropertyNames(NativeRegExp);
  var index = 0;
  while (keys.length > index) proxy(keys[index++]);
  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  redefine(global, 'RegExp', RegExpWrapper);
}

// https://tc39.github.io/ecma262/#sec-get-regexp-@@species
setSpecies('RegExp');


/***/ }),

/***/ "4d64":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var toLength = __webpack_require__("50c4");
var toAbsoluteIndex = __webpack_require__("23cb");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "4d8c":
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__("5c69");

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;


/***/ }),

/***/ "4de4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $filter = __webpack_require__("b727").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
// Edge 14- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__("0366");
var toObject = __webpack_require__("7b0b");
var callWithSafeIterationClosing = __webpack_require__("9bdd");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var getIteratorMethod = __webpack_require__("35a1");

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "4f50":
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__("b760"),
    cloneBuffer = __webpack_require__("e5383"),
    cloneTypedArray = __webpack_require__("c8fe"),
    copyArray = __webpack_require__("4359"),
    initCloneObject = __webpack_require__("fa21"),
    isArguments = __webpack_require__("d370"),
    isArray = __webpack_require__("6747"),
    isArrayLikeObject = __webpack_require__("dcbe"),
    isBuffer = __webpack_require__("0d24"),
    isFunction = __webpack_require__("9520"),
    isObject = __webpack_require__("1a8c"),
    isPlainObject = __webpack_require__("60ed"),
    isTypedArray = __webpack_require__("73ac"),
    safeGet = __webpack_require__("8adb"),
    toPlainObject = __webpack_require__("8de2");

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;


/***/ }),

/***/ "4fad":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var $entries = __webpack_require__("6f53").entries;

// `Object.entries` method
// https://tc39.github.io/ecma262/#sec-object.entries
$({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});


/***/ }),

/***/ "50c4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "50d8":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),

/***/ "5135":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "5319":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__("d784");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");
var advanceStringIndex = __webpack_require__("8aa5");
var regExpExec = __webpack_require__("14c3");

var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {
  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
      return replacer !== undefined
        ? replacer.call(searchValue, O, replaceValue)
        : nativeReplace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      if (
        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||
        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
      ) {
        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
        if (res.done) return res.value;
      }

      var rx = anObject(regexp);
      var S = String(this);

      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        results.push(result);
        if (!global) break;

        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

  // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return nativeReplace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "53ca":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _typeof; });
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("a4d3");
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("e01a");
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("d28b");
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("e260");
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("d3b7");
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("3ca3");
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("ddb0");
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_6__);







function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

/***/ }),

/***/ "54eb":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    getSymbols = __webpack_require__("32f4");

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),

/***/ "55a3":
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),

/***/ "5692":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("c430");
var store = __webpack_require__("c6cd");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.6.5',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "56ef":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var anObject = __webpack_require__("825a");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "57a5":
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__("91e9");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ "585a":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "5899":
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "58a8":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");
var whitespaces = __webpack_require__("5899");

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "5a34":
/***/ (function(module, exports, __webpack_require__) {

var isRegExp = __webpack_require__("44e7");

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "5a3a":
/***/ (function(module, exports, __webpack_require__) {

var createRange = __webpack_require__("1cba");

/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */
var range = createRange();

module.exports = range;


/***/ }),

/***/ "5b01":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    keys = __webpack_require__("ec69");

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),

/***/ "5c69":
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__("087d"),
    isFlattenable = __webpack_require__("0621");

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),

/***/ "5c6c":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "5d89":
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__("f8af");

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),

/***/ "5e2e":
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__("28c9"),
    listCacheDelete = __webpack_require__("69d5"),
    listCacheGet = __webpack_require__("b4c0"),
    listCacheHas = __webpack_require__("fba5"),
    listCacheSet = __webpack_require__("67ca");

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),

/***/ "5edf":
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),

/***/ "5f36":
/***/ (function(module, exports, __webpack_require__) {

var isArrayLikeObject = __webpack_require__("dcbe");

/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return isArrayLikeObject(value) ? value : [];
}

module.exports = castArrayLikeObject;


/***/ }),

/***/ "6044":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07");

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),

/***/ "60da":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var objectKeys = __webpack_require__("df75");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var toObject = __webpack_require__("7b0b");
var IndexedObject = __webpack_require__("44ad");

var nativeAssign = Object.assign;
var defineProperty = Object.defineProperty;

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
module.exports = !nativeAssign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
    }
  } return T;
} : nativeAssign;


/***/ }),

/***/ "60ed":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    getPrototype = __webpack_require__("2dcb"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),

/***/ "62e4":
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "63ea":
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__("c05f");

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;


/***/ }),

/***/ "6428":
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__("b4b0");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;


/***/ }),

/***/ "642a":
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__("966f"),
    getMatchData = __webpack_require__("3bb4"),
    matchesStrictComparable = __webpack_require__("20ec");

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),

/***/ "6547":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "656b":
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__("e2e4"),
    toKey = __webpack_require__("f4d6");

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),

/***/ "65f0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "6747":
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "67ca":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),

/***/ "69d5":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),

/***/ "69f3":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");
var createNonEnumerableProperty = __webpack_require__("9112");
var objectHas = __webpack_require__("5135");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = new WeakMap();
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "6ac0":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;


/***/ }),

/***/ "6eeb":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var setGlobal = __webpack_require__("ce4e");
var inspectSource = __webpack_require__("8925");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "6f53":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var objectKeys = __webpack_require__("df75");
var toIndexedObject = __webpack_require__("fc6a");
var propertyIsEnumerable = __webpack_require__("d1e7").f;

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {
        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.github.io/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.github.io/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),

/***/ "6f6c":
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),

/***/ "6fcd":
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__("50d8"),
    isArguments = __webpack_require__("d370"),
    isArray = __webpack_require__("6747"),
    isBuffer = __webpack_require__("0d24"),
    isIndex = __webpack_require__("c098"),
    isTypedArray = __webpack_require__("73ac");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),

/***/ "7156":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var setPrototypeOf = __webpack_require__("d2bb");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    typeof (NewTarget = dummy.constructor) == 'function' &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "72af":
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__("99cd");

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),

/***/ "72f0":
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),

/***/ "73ac":
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__("743f"),
    baseUnary = __webpack_require__("b047"),
    nodeUtil = __webpack_require__("99d3");

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ "7418":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "743f":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    isLength = __webpack_require__("b218"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ "746f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var has = __webpack_require__("5135");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineProperty = __webpack_require__("9bf2").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "7530":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("1a8c");

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),

/***/ "7559":
/***/ (function(module, exports) {

/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

module.exports = asciiWords;


/***/ }),

/***/ "76dd":
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__("ce86");

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),

/***/ "7839":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "7948":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),

/***/ "7994":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "TInput", function() { return /* reexport */ inputs_TInput; });
__webpack_require__.d(__webpack_exports__, "TTextarea", function() { return /* reexport */ inputs_TTextarea; });
__webpack_require__.d(__webpack_exports__, "TSelect", function() { return /* reexport */ inputs_TSelect; });
__webpack_require__.d(__webpack_exports__, "TRadio", function() { return /* reexport */ inputs_TRadio; });
__webpack_require__.d(__webpack_exports__, "TCheckbox", function() { return /* reexport */ inputs_TCheckbox; });
__webpack_require__.d(__webpack_exports__, "TButton", function() { return /* reexport */ inputs_TButton; });
__webpack_require__.d(__webpack_exports__, "TInputGroup", function() { return /* reexport */ components_TInputGroup; });
__webpack_require__.d(__webpack_exports__, "TCard", function() { return /* reexport */ components_TCard; });
__webpack_require__.d(__webpack_exports__, "TAlert", function() { return /* reexport */ components_TAlert; });
__webpack_require__.d(__webpack_exports__, "TModal", function() { return /* reexport */ components_TModal; });
__webpack_require__.d(__webpack_exports__, "TDropdown", function() { return /* reexport */ components_TDropdown; });
__webpack_require__.d(__webpack_exports__, "TRichSelect", function() { return /* reexport */ components_TRichSelect; });
__webpack_require__.d(__webpack_exports__, "TPagination", function() { return /* reexport */ components_TPagination; });
__webpack_require__.d(__webpack_exports__, "TTag", function() { return /* reexport */ components_TTag; });
__webpack_require__.d(__webpack_exports__, "TRadioGroup", function() { return /* reexport */ components_TRadioGroup; });
__webpack_require__.d(__webpack_exports__, "TCheckboxGroup", function() { return /* reexport */ components_TCheckboxGroup; });
__webpack_require__.d(__webpack_exports__, "TTable", function() { return /* reexport */ components_TTable; });
__webpack_require__.d(__webpack_exports__, "TDatepicker", function() { return /* reexport */ components_TDatepicker; });
__webpack_require__.d(__webpack_exports__, "TToggle", function() { return /* reexport */ components_TToggle; });
__webpack_require__.d(__webpack_exports__, "TDialog", function() { return /* reexport */ TDialog["a" /* default */]; });

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.index-of.js
var es_array_index_of = __webpack_require__("c975");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.splice.js
var es_array_splice = __webpack_require__("a434");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js
var es_number_constructor = __webpack_require__("a9e3");

// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("9ab4");

// EXTERNAL MODULE: ./src/base/Component.ts
var Component = __webpack_require__("a737");

// CONCATENATED MODULE: ./src/base/HtmlInput.ts


var HtmlInput = Component["a" /* default */].extend({
  props: {
    id: {
      type: String,
      default: undefined
    },
    name: {
      type: String,
      default: undefined
    },
    disabled: {
      type: Boolean,
      default: undefined
    },
    readonly: {
      type: Boolean,
      default: undefined
    },
    autofocus: {
      type: Boolean,
      default: undefined
    },
    required: {
      type: Boolean,
      default: undefined
    },
    tabindex: {
      type: [String, Number],
      default: undefined
    }
  }
});
/* harmony default export */ var base_HtmlInput = (HtmlInput);
// EXTERNAL MODULE: ./src/types/Key.ts
var Key = __webpack_require__("95bf");

// CONCATENATED MODULE: ./src/inputs/TCheckbox.ts







var TCheckbox = base_HtmlInput.extend({
  name: 'TCheckbox',
  props: {
    value: {
      type: [String, Object, Number, Boolean, Array],
      default: true
    },
    uncheckedValue: {
      type: [String, Object, Number, Boolean, Array],
      default: false
    },
    indeterminate: {
      type: [Boolean, String],
      default: undefined
    },
    checked: {
      type: [Boolean, String],
      default: undefined
    },
    model: {
      // v-model
      type: [String, Object, Number, Boolean, Array],
      default: undefined
    },
    classes: {
      type: [String, Array, Object],
      default: 'form-checkbox'
    },
    wrapped: {
      type: Boolean,
      default: false
    },
    wrapperTag: {
      type: String,
      default: 'label'
    },
    inputWrapperTag: {
      type: String,
      default: 'span'
    },
    labelTag: {
      type: String,
      default: 'span'
    },
    label: {
      type: [String, Number],
      default: undefined
    }
  },
  data: function data() {
    return {
      localValue: this.model
    };
  },
  model: {
    prop: 'model',
    event: 'input'
  },
  render: function render(createElement) {
    var renderFun = this.render; // eslint-disable-next-line max-len

    var createWrappedFunc = this.renderWrapped;

    if (this.wrapped) {
      return createWrappedFunc(createElement);
    }

    return renderFun(createElement);
  },
  computed: {
    isChecked: {
      get: function get() {
        if (this.model === undefined) {
          return this.checked;
        }

        if (Array.isArray(this.model)) {
          return this.model.indexOf(this.value) >= 0;
        }

        return this.model === this.value;
      },
      set: function set(checked) {
        this.localValue = checked;
      }
    }
  },
  watch: {
    isChecked: function isChecked(_isChecked) {
      var input = this.getInput();

      if (input.checked !== _isChecked) {
        input.checked = _isChecked;
      }
    },
    indeterminate: function indeterminate(_indeterminate) {
      this.setIndeterminate(_indeterminate);
    },
    checked: function checked(_checked) {
      this.setChecked(_checked);
    }
  },
  methods: {
    getInput: function getInput() {
      return this.$refs.input;
    },
    renderWrapped: function renderWrapped(createElement) {
      var _this = this;

      var childElements = [];
      var input = this.render(createElement);
      var inputWrapperClass = this.getElementCssClass('inputWrapper');
      var checkedInputWrapperClass = this.getElementCssClass('inputWrapperChecked', this.getElementCssClass('inputWrapper'));
      childElements.push(createElement(this.inputWrapperTag, {
        ref: 'inputWrapper',
        class: this.isChecked ? checkedInputWrapperClass : inputWrapperClass
      }, [input]));
      var labelClass = this.getElementCssClass('label');
      var checkedLabelClass = this.getElementCssClass('labelChecked', this.getElementCssClass('label'));
      var label;

      if (this.$scopedSlots.default !== undefined) {
        label = this.$scopedSlots.default({
          isChecked: this.isChecked,
          value: this.isChecked ? this.value : this.uncheckedValue,
          label: this.label
        });
      } else {
        label = typeof this.label === 'number' ? String(this.label) : this.label;
      }

      childElements.push(createElement(this.labelTag, {
        ref: 'label',
        class: this.isChecked ? checkedLabelClass : labelClass
      }, label));
      var wrapperClass = this.getElementCssClass('wrapper');
      var checkedWrapperClass = this.getElementCssClass('wrapperChecked', this.getElementCssClass('wrapper'));
      return createElement(this.wrapperTag, {
        ref: 'wrapper',
        class: this.isChecked ? checkedWrapperClass : wrapperClass,
        attrs: {
          for: this.id,
          tabindex: this.tabindex,
          autofocus: this.autofocus
        },
        on: {
          keydown: function keydown(e) {
            if (e.keyCode === Key["a" /* default */].SPACE) {
              _this.wrapperSpaceHandler(e);
            }
          }
        }
      }, childElements);
    },
    render: function render(createElement) {
      return createElement('input', {
        class: this.wrapped ? this.getElementCssClass('input') : this.componentClass,
        ref: 'input',
        attrs: {
          checked: this.isChecked,
          value: this.value,
          id: this.id,
          type: 'checkbox',
          name: this.name,
          disabled: this.disabled,
          readonly: this.readonly,
          required: this.required,
          autofocus: !this.wrapped ? this.autofocus : undefined,
          tabindex: this.wrapped && this.tabindex !== undefined ? -1 : this.tabindex
        },
        on: {
          blur: this.blurHandler,
          focus: this.focusHandler,
          change: this.changeHandler
        }
      });
    },
    wrapperSpaceHandler: function wrapperSpaceHandler(e) {
      e.preventDefault();
      this.click();
    },
    setIndeterminate: function setIndeterminate(indeterminate) {
      var input = this.getInput();
      input.indeterminate = indeterminate; // Emit update event to prop

      this.$emit('update:indeterminate', indeterminate);
    },
    setChecked: function setChecked(checked) {
      var input = this.getInput(); // this.localValue = checked;

      input.checked = !checked;
      input.click(); // Emit update event to prop

      this.$emit('update:checked', checked);
    },
    changeHandler: function changeHandler() {
      var input = this.getInput();
      var isChecked = input.checked;
      var localValue;

      if (Array.isArray(this.model)) {
        localValue = Object(tslib_es6["d" /* __spreadArrays */])(this.model);
        var index = localValue.indexOf(this.value);

        if (isChecked && index < 0) {
          localValue.push(this.value);
        } else if (!isChecked && index >= 0) {
          localValue.splice(index, 1);
        }
      } else {
        localValue = isChecked ? this.value : this.uncheckedValue;
      }

      this.$emit('input', localValue);
      this.$emit('change', localValue);
      this.$emit('update:indeterminate', false);
      this.$emit('update:checked', isChecked);
    },
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    },
    blur: function blur() {
      this.getInput().blur();
    },
    click: function click() {
      this.getInput().click();
    },
    focus: function focus(options) {
      this.getInput().focus(options);
    }
  }
});
/* harmony default export */ var inputs_TCheckbox = (TCheckbox);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find-index.js
var es_array_find_index = __webpack_require__("c740");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
var es_array_for_each = __webpack_require__("4160");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("a630");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("caad");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("2532");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("159b");

// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js
var isEqual = __webpack_require__("63ea");
var isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);

// CONCATENATED MODULE: ./src/inputs/TRadio.ts














var TRadio_checkIfTagShouldBeChecked = function checkIfTagShouldBeChecked(model, checked, value) {
  return model === undefined ? !!checked : isEqual_default()(model, value);
};

var TRadio = base_HtmlInput.extend({
  name: 'TRadio',
  props: {
    value: {
      type: [String, Object, Number, Boolean],
      default: 'on'
    },
    checked: {
      type: [Boolean, String],
      default: false
    },
    model: {
      // v-model
      type: [String, Object, Number, Boolean],
      default: undefined
    },
    classes: {
      type: [String, Array, Object],
      default: 'form-radio'
    },
    wrapped: {
      type: Boolean,
      default: false
    },
    wrapperTag: {
      type: String,
      default: 'label'
    },
    inputWrapperTag: {
      type: String,
      default: 'span'
    },
    labelTag: {
      type: String,
      default: 'span'
    },
    label: {
      type: [String, Number],
      default: undefined
    }
  },
  data: function data() {
    // const defaultValue = (this.model === undefined ? null : this.model);
    return {
      localValue: this.checked ? this.value : null
    };
  },
  model: {
    prop: 'model',
    event: 'input'
  },
  render: function render(createElement) {
    var renderFun = this.render; // eslint-disable-next-line max-len

    var createWrappedFunc = this.renderWrapped;

    if (this.wrapped) {
      return createWrappedFunc(createElement);
    }

    return renderFun(createElement);
  },
  watch: {
    model: function model(_model) {
      if (isEqual_default()(_model, this.localValue)) {
        return;
      }

      this.localValue = _model;
    },
    checked: function checked(_checked) {
      var localValue = _checked ? this.value : null;

      if (!isEqual_default()(localValue, this.localValue)) {
        this.localValue = localValue;
      }
    },
    localValue: function localValue(_localValue) {
      if (isEqual_default()(this.model, _localValue)) {
        return;
      }

      this.$emit('input', _localValue);
      this.$emit('change', _localValue);
    },
    isChecked: function isChecked(_isChecked) {
      var input = this.$refs.input;

      if (input && input.checked !== _isChecked) {
        input.checked = _isChecked;
      }
    }
  },
  computed: {
    isChecked: function isChecked() {
      return TRadio_checkIfTagShouldBeChecked(this.model, this.checked, this.value);
    }
  },
  methods: {
    renderWrapped: function renderWrapped(createElement) {
      var _this = this;

      var childElements = [];
      var input = this.render(createElement);
      var inputWrapperClass = this.getElementCssClass('inputWrapper');
      var checkedInputWrapperClass = this.getElementCssClass('inputWrapperChecked', this.getElementCssClass('inputWrapper'));
      childElements.push(createElement(this.inputWrapperTag, {
        ref: 'inputWrapper',
        class: this.isChecked ? checkedInputWrapperClass : inputWrapperClass
      }, [input]));
      var labelClass = this.getElementCssClass('label');
      var checkedLabelClass = this.getElementCssClass('labelChecked', this.getElementCssClass('label'));
      var label;

      if (this.$scopedSlots.default !== undefined) {
        label = this.$scopedSlots.default({
          isChecked: this.isChecked,
          value: this.localValue,
          label: this.label
        });
      } else {
        label = typeof this.label === 'number' ? String(this.label) : this.label;
      }

      childElements.push(createElement(this.labelTag, {
        ref: 'label',
        class: this.isChecked ? checkedLabelClass : labelClass
      }, label));
      var wrapperClass = this.getElementCssClass('wrapper');
      var checkedWrapperClass = this.getElementCssClass('wrapperChecked', this.getElementCssClass('wrapper'));
      return createElement(this.wrapperTag, {
        ref: 'wrapper',
        class: this.isChecked ? checkedWrapperClass : wrapperClass,
        attrs: {
          for: this.id,
          tabindex: this.tabindex,
          autofocus: this.autofocus
        },
        on: {
          keydown: function keydown(e) {
            if ([Key["a" /* default */].DOWN, Key["a" /* default */].RIGHT].includes(e.keyCode)) {
              _this.selectNextRadio(e);
            } else if ([Key["a" /* default */].UP, Key["a" /* default */].LEFT].includes(e.keyCode)) {
              _this.selectPrevRadio(e);
            } else if (e.keyCode === Key["a" /* default */].SPACE) {
              _this.wrapperSpaceHandler(e);
            }
          }
        }
      }, childElements);
    },
    render: function render(createElement) {
      return createElement('input', {
        class: this.wrapped ? this.getElementCssClass('input') : this.componentClass,
        ref: 'input',
        attrs: {
          value: this.value,
          id: this.id,
          type: 'radio',
          checked: TRadio_checkIfTagShouldBeChecked(this.model, this.checked, this.value),
          name: this.name,
          disabled: this.disabled,
          readonly: this.readonly,
          required: this.required,
          autofocus: !this.wrapped ? this.autofocus : undefined,
          tabindex: this.wrapped && this.tabindex !== undefined ? -1 : this.tabindex
        },
        on: {
          blur: this.blurHandler,
          focus: this.focusHandler,
          input: this.inputHandler
        }
      });
    },
    inputHandler: function inputHandler(e) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        var target;
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          target = e.target; // Only update the local value when the element is checked

          if (target.checked) {
            this.localValue = this.value;
            this.sendInputEventToTheNotCheckedInputs();
          }

          return [2
          /*return*/
          ];
        });
      });
    },

    /**
     * We need to trigger the input event in all the inputs that are not checked
     * so we can update the `elementChecked` local property that is used to
     * change the classes of the wrapper div according to the state
     */
    sendInputEventToTheNotCheckedInputs: function sendInputEventToTheNotCheckedInputs() {
      var notCheckedEls = document.querySelectorAll("input[name=" + this.name + "]:not(:checked)");
      notCheckedEls.forEach(function (el) {
        el.dispatchEvent(new Event('input'));
      });
    },
    selectPrevRadio: function selectPrevRadio(e) {
      var _this = this;

      e.preventDefault();
      var currentEl = this.$refs.input;
      var els = Array.from(document.querySelectorAll("input[name=" + this.name + "]"));
      var currentElementIndex = els.findIndex(function (radioInput) {
        return radioInput === _this.$refs.input;
      });
      var prevElement = els[currentElementIndex - 1] || els[els.length - 1];

      if (prevElement !== currentEl && prevElement) {
        var wrapper = prevElement.parentNode ? prevElement.parentNode.parentNode : undefined;

        if (wrapper && wrapper.tabIndex >= 0) {
          wrapper.focus();
        } else {
          prevElement.focus();
        }
      }
    },
    selectNextRadio: function selectNextRadio(e) {
      var _this = this;

      e.preventDefault();
      var currentEl = this.$refs.input;
      var els = Array.from(document.querySelectorAll("input[name=" + this.name + "]"));
      var currentElementIndex = els.findIndex(function (radioInput) {
        return radioInput === _this.$refs.input;
      });
      var nextElement = els[currentElementIndex + 1] || els[0];

      if (nextElement !== currentEl && nextElement) {
        var wrapper = nextElement.parentNode ? nextElement.parentNode.parentNode : undefined;

        if (wrapper && wrapper.tabIndex >= 0) {
          wrapper.focus();
        } else {
          nextElement.focus();
        }
      }
    },
    wrapperSpaceHandler: function wrapperSpaceHandler(e) {
      e.preventDefault();
      this.localValue = this.value;
    },
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    },
    blur: function blur() {
      this.$refs.input.blur();
    },
    click: function click() {
      this.$refs.input.click();
    },
    focus: function focus(options) {
      this.$refs.input.focus(options);
    }
  }
});
/* harmony default export */ var inputs_TRadio = (TRadio);
// CONCATENATED MODULE: ./src/base/TextInput.ts


var TextInput = base_HtmlInput.extend({
  props: {
    value: {
      type: [String, Number],
      default: undefined
    },
    autocomplete: {
      type: String,
      default: undefined
    },
    maxlength: {
      type: [String, Number],
      default: undefined
    },
    minlength: {
      type: [String, Number],
      default: undefined
    },
    multiple: {
      type: Boolean,
      default: undefined
    },
    pattern: {
      type: String,
      default: undefined
    },
    placeholder: {
      type: String,
      default: undefined
    },
    classes: {
      type: [String, Array, Object],
      default: 'border bg-white'
    }
  },
  data: function data() {
    return {
      localValue: this.value,
      valueWhenFocus: null
    };
  },
  watch: {
    localValue: function localValue(_localValue) {
      this.$emit('input', _localValue);
    },
    value: function value(_value) {
      this.localValue = _value;
    }
  },
  methods: {
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);

      if (this.localValue !== this.valueWhenFocus) {
        this.$emit('change', this.localValue);
      }
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
      this.valueWhenFocus = this.localValue;
    },
    keyupHandler: function keyupHandler(e) {
      this.$emit('keyup', e);
    },
    keydownHandler: function keydownHandler(e) {
      this.$emit('keydown', e);
    },
    blur: function blur() {
      this.$el.blur();
    },
    click: function click() {
      this.$el.click();
    },
    focus: function focus(options) {
      this.$el.focus(options);
    },
    select: function select() {
      this.$el.select();
    },
    setSelectionRange: function setSelectionRange(start, end, direction) {
      this.$el.setSelectionRange(start, end, direction);
    },
    setRangeText: function setRangeText(replacement) {
      this.$el.setRangeText(replacement);
    }
  }
});
/* harmony default export */ var base_TextInput = (TextInput);
// CONCATENATED MODULE: ./src/inputs/TTextarea.ts


var TTextarea = base_TextInput.extend({
  name: 'TTextarea',
  props: {
    rows: {
      type: String,
      default: undefined
    },
    cols: {
      type: String,
      default: undefined
    },
    wrap: {
      type: String,
      default: 'soft'
    },
    classes: {
      type: [String, Array, Object],
      default: 'form-textarea'
    }
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  methods: {
    render: function render(createElement) {
      return createElement('textarea', {
        class: this.componentClass,
        ref: 'input',
        attrs: {
          id: this.id,
          name: this.name,
          disabled: this.disabled,
          readonly: this.readonly,
          autocomplete: this.autocomplete,
          autofocus: this.autofocus,
          required: this.required,
          placeholder: this.placeholder,
          pattern: this.pattern,
          multiple: this.multiple,
          minlength: this.minlength,
          maxlength: this.maxlength,
          wrap: this.wrap,
          rows: this.rows,
          cols: this.cols
        },
        on: {
          blur: this.blurHandler,
          focus: this.focusHandler,
          keyup: this.keyupHandler,
          keydown: this.keydownHandler,
          input: this.inputHandler
        }
      }, this.value ? String(this.value) : '');
    },
    inputHandler: function inputHandler(e) {
      var target = e.target;
      this.$emit('input', target.value);
    }
  }
});
/* harmony default export */ var inputs_TTextarea = (TTextarea);
// CONCATENATED MODULE: ./src/inputs/TInput.ts



var TInput = base_TextInput.extend({
  name: 'TInput',
  props: {
    type: {
      type: String,
      default: 'text'
    },
    max: {
      type: [String, Number],
      default: undefined
    },
    min: {
      type: [String, Number],
      default: undefined
    },
    classes: {
      type: [String, Array, Object],
      default: 'form-input'
    }
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  methods: {
    render: function render(createElement) {
      return createElement('input', {
        class: this.componentClass,
        ref: 'input',
        domProps: {
          value: this.localValue
        },
        attrs: {
          id: this.id,
          name: this.name,
          disabled: this.disabled,
          readonly: this.readonly,
          autocomplete: this.autocomplete,
          autofocus: this.autofocus,
          type: this.type,
          required: this.required,
          placeholder: this.placeholder,
          pattern: this.pattern,
          multiple: this.multiple,
          minlength: this.minlength,
          min: this.min,
          maxlength: this.maxlength,
          max: this.max
        },
        on: {
          blur: this.blurHandler,
          focus: this.focusHandler,
          keyup: this.keyupHandler,
          keydown: this.keydownHandler,
          input: this.inputHandler
        }
      });
    },
    inputHandler: function inputHandler(e) {
      var target = e.target;
      this.$emit('input', target.value);
    }
  }
});
/* harmony default export */ var inputs_TInput = (TInput);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("99af");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("d81d");

// EXTERNAL MODULE: ./src/utils/inputOptions.ts
var inputOptions = __webpack_require__("90b2");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.flat.js
var es_array_flat = __webpack_require__("0481");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.unscopables.flat.js
var es_array_unscopables_flat = __webpack_require__("4069");

// CONCATENATED MODULE: ./src/base/InputWithOptions.ts






var InputWithOptions = base_HtmlInput.extend({
  props: {
    value: {
      type: [String, Object, Number, Boolean],
      default: null
    },
    valueAttribute: {
      type: String,
      default: undefined
    },
    textAttribute: {
      type: String,
      default: undefined
    },
    options: {
      type: [Array, Object],
      default: undefined
    }
  },
  data: function data() {
    return {
      localValue: this.value
    };
  },
  computed: {
    normalizedOptions: function normalizedOptions() {
      return this.normalizeOptions(this.options);
    },
    flattenedOptions: function flattenedOptions() {
      return this.normalizedOptions.map(function (option) {
        if (option.children) {
          return option.children;
        }

        return option;
      }).flat();
    }
  },
  methods: {
    normalizeOptions: function normalizeOptions(options) {
      return Object(inputOptions["b" /* normalizeOptions */])(options, this.textAttribute, this.valueAttribute);
    }
  }
});
/* harmony default export */ var base_InputWithOptions = (InputWithOptions);
// CONCATENATED MODULE: ./src/base/MultipleInput.ts


var MultipleInput = base_InputWithOptions.extend({
  props: {
    value: {
      type: [Array, String, Number],
      default: null
    },
    multiple: {
      type: Boolean,
      default: undefined
    }
  }
});
/* harmony default export */ var base_MultipleInput = (MultipleInput);
// CONCATENATED MODULE: ./src/inputs/TSelect.ts










var TSelect = base_MultipleInput.extend({
  name: 'TSelect',
  props: {
    placeholder: {
      type: String,
      default: undefined
    },
    wrapped: {
      type: Boolean,
      default: false
    },
    classes: {
      type: [String, Array, Object],
      default: 'form-select'
    }
  },
  data: function data() {
    return {
      localValue: this.value
    };
  },
  computed: {
    normalizedOptionsWithPlaceholder: function normalizedOptionsWithPlaceholder() {
      if (this.placeholder === undefined) {
        return this.normalizedOptions;
      }

      var normalizedOptions = this.normalizedOptions;
      var placeholder = [{
        value: null,
        text: this.placeholder
      }];
      return placeholder.concat(normalizedOptions);
    }
  },
  watch: {
    localValue: function localValue(_localValue) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              this.$emit('input', _localValue);
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              this.$emit('change', _localValue);
              return [2
              /*return*/
              ];
          }
        });
      });
    },
    value: function value(_value) {
      this.localValue = _value;
    }
  },
  render: function render(createElement) {
    var createSelectFunc = this.createSelect; // eslint-disable-next-line max-len

    var createSelectWrapperFunc = this.createSelectWrapper;

    if (this.wrapped) {
      return createSelectWrapperFunc(createElement);
    }

    return createSelectFunc(createElement);
  },
  methods: {
    createSelectWrapper: function createSelectWrapper(createElement) {
      var children = [this.createSelect(createElement)];

      if (!this.multiple) {
        if (this.$scopedSlots.arrowWrapper) {
          var arrowWrapper = this.$scopedSlots.arrowWrapper({
            className: this.getElementCssClass('arrowWrapper'),
            variant: this.variant,
            value: this.localValue
          });
          children.push(arrowWrapper);
        } else {
          children.push(this.createArrow(createElement));
        }
      }

      return createElement('div', {
        ref: 'selectWrapper',
        class: this.getElementCssClass('wrapper')
      }, children);
    },
    createArrow: function createArrow(createElement) {
      var subElements = [];

      if (this.$scopedSlots.arrow) {
        subElements.push(this.$scopedSlots.arrow({
          className: this.getElementCssClass('arrow'),
          variant: this.variant,
          value: this.localValue
        }));
      } else {
        subElements.push(createElement('svg', {
          attrs: {
            fill: 'currentColor',
            xmlns: 'http://www.w3.org/2000/svg',
            viewBox: '0 0 20 20'
          },
          class: this.getElementCssClass('arrow')
        }, [createElement('path', {
          attrs: {
            'clip-rule': 'evenodd',
            'fill-rule': 'evenodd',
            d: 'M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z'
          }
        })]));
      }

      return createElement('span', {
        ref: 'arrow',
        class: this.getElementCssClass('arrowWrapper')
      }, subElements);
    },
    createSelect: function createSelect(createElement) {
      return createElement('select', {
        ref: 'select',
        attrs: {
          id: this.id,
          autofocus: this.autofocus,
          disabled: this.disabled,
          name: this.name,
          required: this.required,
          multiple: this.multiple
        },
        class: this.wrapped ? this.getElementCssClass('input') : this.getElementCssClass(),
        on: {
          blur: this.blurHandler,
          focus: this.focusHandler,
          change: this.changeHandler
        }
      }, this.createOptions(createElement, this.value));
    },
    createOptions: function createOptions(createElement, value) {
      var _this = this;

      var options = this.normalizedOptionsWithPlaceholder;
      return options.map(function (option) {
        if (option.children) {
          return _this.createOptgroup(createElement, option, value);
        }

        return _this.createOption(createElement, option, value);
      });
    },
    createOptgroup: function createOptgroup(createElement, option, value) {
      var _this = this;

      var _a;

      return createElement('optgroup', {
        domProps: {
          label: Object(inputOptions["a" /* guessOptionText */])(option, this.textAttribute)
        }
      }, (_a = option.children) === null || _a === void 0 ? void 0 : _a.map(function (opt) {
        return _this.createOption(createElement, opt, value);
      }));
    },
    createOption: function createOption(createElement, option, value) {
      var isSelected = Array.isArray(value) ? value.includes(option.value) : value === option.value;
      return createElement('option', {
        domProps: {
          value: option.value,
          selected: isSelected,
          disabled: option.disabled
        }
      }, option.text);
    },
    changeHandler: function changeHandler(e) {
      var target = e.target;
      var value;

      if (this.multiple) {
        value = Array.from(target.selectedOptions).map(function (o) {
          return o.value;
        });
      } else {
        value = target.value;
      }

      this.localValue = value;
    },
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    },
    blur: function blur() {
      this.$refs.select.blur();
    },
    focus: function focus(options) {
      this.$refs.select.focus(options);
    }
  }
});
/* harmony default export */ var inputs_TSelect = (TSelect);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
var es_regexp_exec = __webpack_require__("ac1f");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__("5319");

// CONCATENATED MODULE: ./src/inputs/TButton.ts






var TButton = base_HtmlInput.extend({
  name: 'TButton',
  props: {
    value: {
      type: [String, Number],
      default: null
    },
    text: {
      type: String,
      default: undefined
    },
    tagName: {
      type: String,
      default: 'button',
      validator: function validator(value) {
        return ['button', 'a'].indexOf(value) !== -1;
      }
    },
    type: {
      type: String,
      default: undefined
    },
    href: {
      type: String,
      default: null
    },
    to: {
      type: [String, Object],
      default: undefined
    },
    append: {
      type: Boolean,
      default: false
    },
    activeClass: {
      type: String,
      default: 'router-link-active'
    },
    exact: {
      type: Boolean,
      default: false
    },
    exactActiveClass: {
      type: String,
      default: 'router-link-exact-active'
    },
    event: {
      type: [String, Array],
      default: 'click'
    },
    data: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    method: {
      type: String,
      default: 'get'
    },
    replace: {
      type: Boolean,
      default: false
    },
    preserveScroll: {
      type: Boolean,
      default: false
    },
    preserveState: {
      type: Boolean,
      default: false
    },
    only: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    native: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    isInertiaLinkComponentAvailable: function isInertiaLinkComponentAvailable() {
      return !!(this.$options.components && this.$options.components.InertiaLink);
    },
    isRouterLinkComponentAvailable: function isRouterLinkComponentAvailable() {
      return !!(this.$options.components && (this.$options.components.RouterLink || this.$options.components.NuxtLink));
    },

    /**
     * If we have the `to` defined and the routerLink or Nuxt link component is
     * available we can use it to create a router link
     *
     * @return {Boolean}
     */
    isARouterLink: function isARouterLink() {
      return this.to !== undefined && this.isRouterLinkComponentAvailable && !this.native;
    },

    /**
     * If we have the `href` defined and the InertiaLink component is available
     * we can use it to create an inertia link
     *
     * @return {Boolean}
     */
    isAnIntertiaLink: function isAnIntertiaLink() {
      return this.href !== null && this.tagName === 'a' && this.isInertiaLinkComponentAvailable && !this.native;
    },

    /**
     * The component to render according to the props
     * @return {String}
     */
    componentToRender: function componentToRender() {
      var _a;

      if (this.isARouterLink && this.$options.components) {
        return this.$options.components.NuxtLink || this.$options.components.RouterLink;
      }

      if (this.isAnIntertiaLink) {
        return (_a = this.$options.components) === null || _a === void 0 ? void 0 : _a.InertiaLink;
      }

      if (this.href) {
        return 'a';
      }

      return this.tagName;
    }
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  methods: {
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    },
    clickHandler: function clickHandler(e) {
      this.$emit('click', e);
    },
    keydownHandler: function keydownHandler(e) {
      this.$emit('keydown', e);
    },
    mousedownHandler: function mousedownHandler(e) {
      this.$emit('mousedown', e);
    },
    blur: function blur() {
      this.$el.blur();
    },
    focus: function focus() {
      this.$el.focus();
    },
    inertiaLinkAttributes: function inertiaLinkAttributes() {
      return {
        data: this.data,
        href: this.href,
        method: this.method,
        replace: this.replace,
        preserveScroll: this.preserveScroll,
        preserveState: this.preserveState,
        only: this.only,
        id: this.id,
        value: this.value,
        autofocus: this.autofocus,
        disabled: this.disabled,
        name: this.name,
        type: this.type
      };
    },
    routerLinkAttributes: function routerLinkAttributes() {
      return {
        to: this.to,
        replace: this.replace,
        append: this.append,
        tag: this.tagName,
        activeClass: this.activeClass,
        exact: this.exact,
        event: this.event,
        exactActiveClass: this.exactActiveClass,
        id: this.id,
        value: this.value,
        autofocus: this.autofocus,
        disabled: this.disabled,
        name: this.name,
        type: this.type
      };
    },

    /**
     * Attrs according to the button type
     * @return {Object}
     */
    getAttributes: function getAttributes() {
      if (this.isAnIntertiaLink) {
        return this.inertiaLinkAttributes();
      }

      if (this.isARouterLink) {
        return this.routerLinkAttributes();
      }

      return {
        id: this.id,
        value: this.value,
        autofocus: this.autofocus,
        disabled: this.disabled,
        name: this.name,
        href: this.href,
        type: this.type
      };
    },
    render: function render(createElement) {
      return createElement(this.componentToRender, {
        attrs: this.getAttributes(),
        class: this.componentClass,
        on: {
          click: this.clickHandler,
          focus: this.focusHandler,
          blur: this.blurHandler,
          keydown: this.keydownHandler,
          mousedown: this.mousedownHandler
        }
      }, this.text === undefined ? this.$slots.default : this.text);
    }
  }
});
/* harmony default export */ var inputs_TButton = (TButton);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("4de4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js
var es_array_find = __webpack_require__("7db0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.some.js
var es_array_some = __webpack_require__("45fc");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.js
var es_promise = __webpack_require__("e6cf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.trim.js
var es_string_trim = __webpack_require__("498a");

// EXTERNAL MODULE: ./node_modules/lodash/cloneDeep.js
var cloneDeep = __webpack_require__("0644");
var cloneDeep_default = /*#__PURE__*/__webpack_require__.n(cloneDeep);

// CONCATENATED MODULE: ./src/renderers/TRichSelectRenderer.ts








var TRichSelectRenderer_TRichSelectRenderer =
/** @class */
function () {
  function TRichSelectRenderer(createElement, component) {
    this.createElement = createElement;
    this.component = component;
  }

  TRichSelectRenderer.prototype.render = function () {
    return this.createWrapper();
  };
  /**
   * Div that wraps the whole component
   */


  TRichSelectRenderer.prototype.createWrapper = function () {
    return this.createElement('div', {
      ref: 'wrapper',
      class: this.component.getElementCssClass('wrapper')
    }, [this.createSelectButtonWrapper(), this.createDropdown()]);
  };
  /**
   * Div that wraps the button that is used as a select box
   */


  TRichSelectRenderer.prototype.createSelectButtonWrapper = function () {
    var subElements = [this.createSelectButton()];

    if (this.component.clearable && this.component.selectedOption && !this.component.disabled) {
      subElements.push(this.createSelectButtonClearButton());
    }

    return this.createElement('div', {
      ref: 'buttonWrapper',
      class: this.component.getElementCssClass('buttonWrapper')
    }, subElements);
  };
  /**
   * The button that is used a select box
   */


  TRichSelectRenderer.prototype.createSelectButton = function () {
    var _this = this;

    var subElements = [];

    if (this.component.selectedOption) {
      if (this.component.$scopedSlots.label) {
        subElements.push(this.component.$scopedSlots.label({
          query: this.component.query,
          option: this.component.selectedOption,
          className: this.component.getElementCssClass('selectButtonLabel')
        }));
      } else {
        subElements.push(this.createSelectButtonLabel());
      }
    } else {
      subElements.push(this.createSelectButtonPlaceholder());
    }

    if (!(this.component.clearable && this.component.selectedOption) && !this.component.disabled) {
      subElements.push(this.createSelectButtonIcon());
    }

    return this.createElement('button', {
      ref: 'selectButton',
      attrs: {
        type: 'button',
        value: this.component.localValue,
        id: this.component.id,
        autofocus: this.component.autofocus,
        disabled: this.component.disabled,
        name: this.component.name
      },
      class: this.component.getElementCssClass('selectButton'),
      on: {
        click: this.component.clickHandler,
        focus: this.component.focusHandler,
        keydown: function keydown(e) {
          if (e.keyCode === Key["a" /* default */].DOWN) {
            _this.component.arrowDownHandler(e);
          } else if (e.keyCode === Key["a" /* default */].UP) {
            _this.component.arrowUpHandler(e);
          } else if (e.keyCode === Key["a" /* default */].ENTER) {
            _this.component.enterHandler(e);
          } else if (e.keyCode === Key["a" /* default */].ESC) {
            _this.component.escapeHandler(e);
          }
        },
        blur: this.component.blurHandler,
        mousedown: function mousedown(e) {
          e.preventDefault();
        }
      }
    }, subElements);
  };

  TRichSelectRenderer.prototype.createSelectButtonLabel = function () {
    return this.createElement('span', {
      ref: 'selectButtonLabel',
      class: this.component.getElementCssClass('selectButtonLabel')
    }, this.component.selectedOption ? this.component.selectedOption.text : '');
  };

  TRichSelectRenderer.prototype.createSelectButtonPlaceholder = function () {
    var domProps = {};

    if (!this.component.placeholder) {
      domProps.innerHTML = '&nbsp;';
    }

    return this.createElement('span', {
      ref: 'selectButtonPlaceholder',
      class: this.component.getElementCssClass('selectButtonPlaceholder'),
      domProps: domProps
    }, this.component.placeholder || undefined);
  };

  TRichSelectRenderer.prototype.createSelectButtonIcon = function () {
    return this.createElement('svg', {
      ref: 'selectButtonIcon',
      attrs: {
        fill: 'currentColor',
        xmlns: 'http://www.w3.org/2000/svg',
        viewBox: '0 0 20 20'
      },
      class: this.component.getElementCssClass('selectButtonIcon')
    }, [this.createElement('path', {
      attrs: {
        'clip-rule': 'evenodd',
        'fill-rule': 'evenodd',
        d: 'M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z'
      }
    })]);
  };

  TRichSelectRenderer.prototype.createSelectButtonClearButton = function () {
    return this.createElement('button', {
      ref: 'selectButtonClearButton',
      class: this.component.getElementCssClass('selectButtonClearButton'),
      attrs: {
        type: 'button',
        tabindex: -1
      },
      on: {
        click: this.component.clearButtonClickHandler
      }
    }, [this.createElement('svg', {
      attrs: {
        fill: 'currentColor',
        xmlns: 'http://www.w3.org/2000/svg',
        viewBox: '0 0 20 20'
      },
      class: this.component.getElementCssClass('selectButtonClearIcon')
    }, [this.createElement('polygon', {
      attrs: {
        points: '10 8.58578644 2.92893219 1.51471863 1.51471863 2.92893219 8.58578644 10 1.51471863 17.0710678 2.92893219 18.4852814 10 11.4142136 17.0710678 18.4852814 18.4852814 17.0710678 11.4142136 10 18.4852814 2.92893219 17.0710678 1.51471863 10 8.58578644'
      }
    })])]);
  };
  /**
   * Div that wraps the search box
   */


  TRichSelectRenderer.prototype.createSearchBoxWrapper = function () {
    return this.createElement('div', {
      ref: 'searchWrapper',
      class: this.component.getElementCssClass('searchWrapper')
    }, [this.createSearchBox()]);
  };
  /**
   * Filter search box
   */


  TRichSelectRenderer.prototype.createSearchBox = function () {
    var _this = this;

    return this.createElement('input', {
      ref: 'searchBox',
      class: this.component.getElementCssClass('searchBox'),
      domProps: {
        value: this.component.query
      },
      attrs: {
        placeholder: this.component.searchBoxPlaceholder
      },
      on: {
        keydown: function keydown(e) {
          if (e.keyCode === Key["a" /* default */].DOWN) {
            _this.component.arrowDownHandler(e);
          } else if (e.keyCode === Key["a" /* default */].UP) {
            _this.component.arrowUpHandler(e);
          } else if (e.keyCode === Key["a" /* default */].ENTER) {
            _this.component.enterHandler(e);
          } else if (e.keyCode === Key["a" /* default */].ESC) {
            _this.component.escapeHandler(e);
          }
        },
        blur: this.component.blurHandler,
        input: this.component.searchInputHandler
      }
    });
  };

  TRichSelectRenderer.prototype.getMinimumInputLengthText = function () {
    if (typeof this.component.minimumInputLengthText === 'function') {
      return this.component.minimumInputLengthText(this.component.minimumInputLength, this.component.query);
    }

    return this.component.minimumInputLengthText;
  };
  /**
   * The div used as dropdown with the options and the search box
   */


  TRichSelectRenderer.prototype.createDropdown = function () {
    var subElements = [];

    if (this.component.shouldShowSearchbox) {
      subElements.push(this.createSearchBoxWrapper());
    }

    if (this.component.$scopedSlots.dropdownUp) {
      subElements.push(this.component.$scopedSlots.dropdownUp({
        query: this.component.query,
        selectedOption: this.component.selectedOption,
        options: this.component.filteredOptions
      }));
    }

    if (this.component.searching && !this.component.nextPage) {
      if (this.component.$scopedSlots.searchingText) {
        subElements.push(this.component.$scopedSlots.searchingText({
          text: this.component.searchingText,
          query: this.component.query,
          className: this.component.getElementCssClass('dropdownFeedback')
        }));
      } else {
        subElements.push(this.createDropdownFeedback(this.component.searchingText));
      }
    } else if (this.component.minimumInputLength !== undefined && this.component.query.length < this.component.minimumInputLength) {
      var minInputLengthText = this.getMinimumInputLengthText();
      subElements.push(this.createDropdownFeedback(minInputLengthText));
    } else if (!this.component.filteredOptions.length) {
      if (this.component.$scopedSlots.noResults) {
        subElements.push(this.component.$scopedSlots.noResults({
          text: this.component.noResultsText,
          query: this.component.query,
          className: this.component.getElementCssClass('dropdownFeedback')
        }));
      } else {
        subElements.push(this.createDropdownFeedback(this.component.noResultsText));
      }
    }

    if (this.component.filteredOptions.length) {
      subElements.push(this.createOptionsList(this.component.filteredOptions));
    }

    if (this.component.searching && this.component.nextPage) {
      if (this.component.$scopedSlots.loadingMoreResultsText) {
        subElements.push(this.component.$scopedSlots.loadingMoreResultsText({
          text: this.component.loadingMoreResultsText,
          nextPage: this.component.nextPage,
          query: this.component.query,
          className: this.component.getElementCssClass('loadingMoreResults')
        }));
      } else {
        subElements.push(this.createLoadingMoreResults(this.component.loadingMoreResultsText));
      }
    }

    if (this.component.$scopedSlots.dropdownDown) {
      subElements.push(this.component.$scopedSlots.dropdownDown({
        query: this.component.query,
        selectedOption: this.component.selectedOption,
        options: this.component.filteredOptions
      }));
    }

    return this.createElement('transition', {
      props: {
        enterClass: this.component.getElementCssClass('enterClass'),
        enterActiveClass: this.component.getElementCssClass('enterActiveClass'),
        enterToClass: this.component.getElementCssClass('enterToClass'),
        leaveClass: this.component.getElementCssClass('leaveClass'),
        leaveActiveClass: this.component.getElementCssClass('leaveActiveClass'),
        leaveToClass: this.component.getElementCssClass('leaveToClass')
      }
    }, this.component.show ? [this.createElement('div', {
      ref: 'dropdown',
      class: this.component.getElementCssClass('dropdown')
    }, subElements)] : undefined);
  };
  /**
   * Options list wrapper
   */


  TRichSelectRenderer.prototype.createOptionsList = function (options) {
    return this.createElement('ul', {
      ref: 'optionsList',
      class: this.component.getElementCssClass('optionsList'),
      style: {
        maxHeight: this.component.normalizedHeight
      },
      on: {
        scroll: this.component.listScrollHandler
      }
    }, this.createOptions(options));
  };
  /**
   * Dropdown feedback
   * @param text
   */


  TRichSelectRenderer.prototype.createDropdownFeedback = function (text) {
    return this.createElement('div', {
      ref: 'dropdownFeedback',
      class: this.component.getElementCssClass('dropdownFeedback')
    }, text);
  };
  /**
   * Dropdown feedback
   * @param text
   */


  TRichSelectRenderer.prototype.createLoadingMoreResults = function (text) {
    return this.createElement('div', {
      ref: 'loadingMoreResults',
      class: this.component.getElementCssClass('loadingMoreResults')
    }, text);
  };
  /**
   * List of options
   */


  TRichSelectRenderer.prototype.createOptions = function (options) {
    var _this = this;

    var index = -1;
    return options.map(function (option) {
      if (option.children) {
        return Object(tslib_es6["d" /* __spreadArrays */])([option], option.children);
      }

      return option;
    }).flat().map(function (option) {
      if (option.children) {
        return _this.createOptgroup(option);
      }

      index += 1;
      return _this.createOption(option, index);
    });
  };
  /**
   * Creates an optgroup element
   * @param option
   * @param index
   */


  TRichSelectRenderer.prototype.createOptgroup = function (optgroup) {
    return this.createElement('li', {
      attrs: {
        'data-type': 'optgroup'
      },
      class: this.component.getElementCssClass('optgroup')
    }, Object(inputOptions["a" /* guessOptionText */])(optgroup, this.component.textAttribute));
  };
  /**
   * Builds an option element
   * @param option
   * @param index
   */


  TRichSelectRenderer.prototype.createOption = function (option, index) {
    var _this = this;

    var isSelected = this.component.optionHasValue(option, this.component.localValue);
    var isHighlighted = this.component.highlighted === index;
    var className;

    if (option.disabled) {
      className = this.component.getElementCssClass('disabledOption');
    } else if (isHighlighted && isSelected) {
      className = this.component.getElementCssClass('selectedHighlightedOption');
    } else if (isHighlighted) {
      className = this.component.getElementCssClass('highlightedOption');
    } else if (isSelected) {
      className = this.component.getElementCssClass('selectedOption');
    } else {
      className = this.component.getElementCssClass('option');
    }

    var subElements = [];

    if (this.component.$scopedSlots.option) {
      subElements.push(this.component.$scopedSlots.option({
        index: index,
        isHighlighted: isHighlighted,
        isSelected: isSelected,
        option: option,
        query: this.component.query,
        className: this.component.getElementCssClass('optionContent')
      }));
    } else {
      subElements.push(this.createOptionContent(option, isSelected));
    }

    return this.createElement('li', {
      ref: 'option',
      class: className,
      attrs: {
        'data-type': 'option'
      },
      on: {
        mouseover: function mouseover() {
          _this.component.highlighted = index;
        },
        mouseleave: function mouseleave() {
          _this.component.highlighted = null;
        },
        mousedown: function mousedown(e) {
          e.preventDefault();
        },
        click: function click(e) {
          e.preventDefault();

          if (option.disabled) {
            return;
          }

          _this.component.selectOption(option);
        }
      }
    }, subElements);
  };

  TRichSelectRenderer.prototype.createOptionContent = function (option, isSelected) {
    var subElements = [this.createOptionLabel(option)];

    if (isSelected) {
      subElements.push(this.createOptionSelectedIcon());
    }

    return this.createElement('div', {
      ref: 'optionContent',
      class: this.component.getElementCssClass('optionContent')
    }, subElements);
  };

  TRichSelectRenderer.prototype.createOptionLabel = function (option) {
    return this.createElement('span', {
      ref: 'optionLabel',
      class: this.component.getElementCssClass('optionLabel')
    }, option.text);
  };

  TRichSelectRenderer.prototype.createOptionSelectedIcon = function () {
    return this.createElement('svg', {
      ref: 'selectedIcon',
      attrs: {
        fill: 'currentColor',
        xmlns: 'http://www.w3.org/2000/svg',
        viewBox: '0 0 20 20'
      },
      class: this.component.getElementCssClass('selectedIcon')
    }, [this.createElement('polygon', {
      attrs: {
        points: '0 11 2 9 7 14 18 3 20 5 7 18'
      }
    })]);
  };

  return TRichSelectRenderer;
}();

/* harmony default export */ var renderers_TRichSelectRenderer = (TRichSelectRenderer_TRichSelectRenderer);
// CONCATENATED MODULE: ./src/components/TRichSelect.ts


















var TRichSelect = base_InputWithOptions.extend({
  name: 'TRichSelect',
  render: function render(createElement) {
    var createSelectFunc = this.createSelect;
    return createSelectFunc(createElement);
  },
  props: {
    delay: {
      type: Number,
      default: 250
    },
    fetchOptions: {
      type: Function,
      default: undefined
    },
    minimumResultsForSearch: {
      type: Number,
      default: undefined
    },
    minimumInputLength: {
      type: Number,
      default: undefined
    },
    minimumInputLengthText: {
      type: [Function, String],
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      default: function _default(minimumInputLength, _query) {
        return "Please enter " + minimumInputLength + " or more characters";
      }
    },
    value: {
      type: [String, Number],
      default: null
    },
    hideSearchBox: {
      type: Boolean,
      default: false
    },
    openOnFocus: {
      type: Boolean,
      default: true
    },
    closeOnSelect: {
      type: Boolean,
      default: true
    },
    selectOnClose: {
      type: Boolean,
      default: false
    },
    clearable: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String,
      default: undefined
    },
    searchBoxPlaceholder: {
      type: String,
      default: 'Search...'
    },
    noResultsText: {
      type: String,
      default: 'No results found'
    },
    searchingText: {
      type: String,
      default: 'Searching...'
    },
    loadingMoreResultsText: {
      type: String,
      default: 'Loading more results...'
    },
    maxHeight: {
      type: [String, Number],
      default: 300
    },
    fixedClasses: {
      type: Object,
      default: function _default() {
        return {
          wrapper: 'relative',
          buttonWrapper: 'inline-block relative w-full',
          selectButton: 'w-full flex text-left justify-between items-center',
          selectButtonLabel: 'block truncate',
          selectButtonPlaceholder: 'block truncate',
          selectButtonIcon: 'fill-current flex-shrink-0 ml-1 h-4 w-4',
          selectButtonClearButton: 'flex flex-shrink-0 items-center justify-center absolute right-0 top-0 m-2 h-6 w-6',
          selectButtonClearIcon: 'fill-current h-3 w-3',
          dropdown: 'absolute w-full z-10',
          dropdownFeedback: '',
          loadingMoreResults: '',
          optionsList: 'overflow-auto',
          searchWrapper: 'inline-block w-full',
          searchBox: 'inline-block w-full',
          optgroup: '',
          option: 'cursor-pointer',
          disabledOption: 'opacity-50 cursor-not-allowed',
          highlightedOption: 'cursor-pointer',
          selectedOption: 'cursor-pointer',
          selectedHighlightedOption: 'cursor-pointer',
          optionContent: '',
          optionLabel: 'truncate block',
          selectedIcon: 'fill-current h-4 w-4',
          enterClass: '',
          enterActiveClass: '',
          enterToClass: '',
          leaveClass: '',
          leaveActiveClass: '',
          leaveToClass: ''
        };
      }
    },
    classes: {
      type: Object,
      default: function _default() {
        return {
          wrapper: '',
          buttonWrapper: '',
          selectButton: 'border bg-white rounded p-2 focus:outline-none focus:shadow-outline',
          selectButtonLabel: '',
          selectButtonPlaceholder: 'text-gray-500',
          selectButtonIcon: '',
          selectButtonClearButton: 'hover:bg-gray-200 text-gray-500 rounded',
          selectButtonClearIcon: '',
          dropdown: 'rounded bg-white shadow',
          dropdownFeedback: 'text-sm text-gray-500',
          loadingMoreResults: 'text-sm text-gray-500',
          optionsList: '',
          searchWrapper: 'bg-white p-2',
          searchBox: 'p-2 bg-gray-200 text-sm rounded border focus:outline-none focus:shadow-outline',
          optgroup: 'text-gray-500 uppercase text-xs py-1 px-2 font-semibold',
          option: '',
          highlightedOption: 'bg-gray-300',
          selectedOption: 'font-semibold bg-gray-100',
          selectedHighlightedOption: 'bg-gray-300 font-semibold',
          optionContent: 'flex justify-between items-center p-2',
          optionLabel: 'truncate block',
          selectedIcon: '',
          enterClass: '',
          enterActiveClass: 'opacity-0 transition ease-out duration-100',
          enterToClass: 'opacity-100',
          leaveClass: 'transition ease-in opacity-100',
          leaveActiveClass: '',
          leaveToClass: 'opacity-0 duration-75'
        };
      }
    }
  },
  data: function data() {
    return {
      hasFocus: false,
      show: false,
      localValue: this.value,
      highlighted: null,
      query: '',
      filteredOptions: [],
      selectedOption: undefined,
      searching: false,
      delayTimeout: undefined,
      nextPage: undefined
    };
  },
  created: function created() {
    this.selectedOption = this.findOptionByValue(this.value);
  },
  updated: function updated() {
    if (typeof this.selectedOption === 'undefined' || this.selectedOption.value !== this.value && this.value !== null) {
      this.selectedOption = this.findOptionByValue(this.value);
    }
  },
  watch: {
    normalizedOptions: {
      handler: function handler() {
        this.query = '';
        this.filterOptions('');
      },
      immediate: true
    },
    query: function query(_query2) {
      this.nextPage = undefined;
      this.filterOptions(_query2);
    },
    localValue: function localValue(_localValue) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!this.selectedOption || this.selectedOption.value !== _localValue) {
                this.selectedOption = this.findOptionByValue(_localValue);
              }

              this.$emit('input', _localValue);
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              this.$emit('change', _localValue);

              if (this.closeOnSelect) {
                this.hideOptions();
              }

              return [2
              /*return*/
              ];
          }
        });
      });
    },
    value: function value(_value) {
      this.localValue = _value;
    },
    highlighted: function highlighted(_highlighted) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (_highlighted === null) {
                return [2
                /*return*/
                ];
              }

              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              this.scrollToHighlightedOption();
              return [2
              /*return*/
              ];
          }
        });
      });
    },
    show: function show(_show) {
      if (_show) {
        if (this.shouldShowSearchbox) {
          this.focusSearchBox();
        }

        if (!this.atLeastOneValidOptionExists) {
          this.highlighted = null;
          return;
        }

        this.highlighted = this.selectedOptionIndex !== undefined ? this.selectedOptionIndex : this.findNextOptionIndex();
      }
    },
    shouldShowSearchbox: function shouldShowSearchbox(_shouldShowSearchbox) {
      if (_shouldShowSearchbox && this.show) {
        this.focusSearchBox();
      }
    }
  },
  computed: {
    usesAJax: function usesAJax() {
      return !!this.fetchOptions;
    },
    shouldShowSearchbox: function shouldShowSearchbox() {
      var showSearchbox = !this.hideSearchBox;
      var hasQuery = !!this.query;
      var hasMinResultsSetting = typeof this.minimumResultsForSearch === 'undefined';
      var hasminimumResultsForSearch = hasMinResultsSetting || hasQuery || (this.usesAJax ? this.filteredflattenedOptions.length >= this.minimumResultsForSearch : this.normalizedOptions.length >= this.minimumResultsForSearch);
      return showSearchbox && hasminimumResultsForSearch;
    },
    hasMinimumInputLength: function hasMinimumInputLength() {
      return this.minimumInputLength === undefined || this.query.length >= this.minimumInputLength;
    },
    filteredflattenedOptions: function filteredflattenedOptions() {
      return this.filteredOptions.map(function (option) {
        if (option.children) {
          return option.children;
        }

        return option;
      }).flat();
    },
    atLeastOneValidOptionExists: function atLeastOneValidOptionExists() {
      return this.filteredflattenedOptions.some(function (option) {
        return !option.disabled;
      });
    },
    normalizedHeight: function normalizedHeight() {
      if (/^\d+$/.test(String(this.maxHeight))) {
        return this.maxHeight + "px";
      }

      return String(this.maxHeight);
    },
    selectedOptionIndex: function selectedOptionIndex() {
      var _this = this;

      if (!this.selectedOption) {
        return undefined;
      }

      var index = this.filteredflattenedOptions.findIndex(function (option) {
        return _this.optionHasValue(option, _this.localValue);
      });
      return index >= 0 ? index : undefined;
    },
    highlightedOption: function highlightedOption() {
      if (typeof this.highlighted === 'number') {
        return this.filteredflattenedOptions[this.highlighted];
      }

      return undefined;
    }
  },
  methods: {
    // eslint-disable-next-line max-len
    findOptionByValue: function findOptionByValue(value) {
      var _this = this;

      return this.filteredflattenedOptions.find(function (option) {
        return _this.optionHasValue(option, value);
      });
    },
    // eslint-disable-next-line max-len
    optionHasValue: function optionHasValue(option, value) {
      return Array.isArray(value) ? value.includes(option.value) : value === option.value;
    },
    createSelect: function createSelect(createElement) {
      return new renderers_TRichSelectRenderer(createElement, this).render();
    },
    filterOptions: function filterOptions(query) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        var options;

        var _this = this;

        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          if (!this.hasMinimumInputLength) {
            this.filteredOptions = [];
            return [2
            /*return*/
            ];
          }

          if (!this.fetchOptions) {
            options = cloneDeep_default()(this.normalizedOptions);
            this.filteredOptions = this.queryFilter(options);

            if (this.filteredOptions.length) {
              this.highlighted = 0;
            } else {
              this.highlighted = null;
            }

            return [2
            /*return*/
            ];
          }

          this.searching = true;

          if (this.delayTimeout) {
            clearTimeout(this.delayTimeout);
          }

          this.delayTimeout = setTimeout(function () {
            return Object(tslib_es6["b" /* __awaiter */])(_this, void 0, void 0, function () {
              var _a, results, hasMorePages, currentOptionsListLength, error_1;

              return Object(tslib_es6["c" /* __generator */])(this, function (_b) {
                switch (_b.label) {
                  case 0:
                    _b.trys.push([0, 2,, 3]);

                    return [4
                    /*yield*/
                    , this.getFilterPromise(query)];

                  case 1:
                    _a = _b.sent(), results = _a.results, hasMorePages = _a.hasMorePages;

                    if (this.nextPage) {
                      currentOptionsListLength = this.filteredOptions.length;
                      this.filteredOptions = this.filteredOptions.concat(this.normalizeOptions(results)); // Ux: When the last item is highlighted highlight the next one, make
                      // special sense when using keyboard

                      if (this.highlighted === currentOptionsListLength - 1) {
                        this.highlighted = currentOptionsListLength;
                      }
                    } else {
                      this.filteredOptions = this.normalizeOptions(results);

                      if (this.filteredOptions.length) {
                        this.highlighted = 0;
                      } else {
                        this.highlighted = null;
                      }
                    }

                    if (hasMorePages) {
                      this.nextPage = this.nextPage === undefined ? 2 : this.nextPage + 1;
                    } else {
                      this.nextPage = undefined;
                    }

                    return [3
                    /*break*/
                    , 3];

                  case 2:
                    error_1 = _b.sent();
                    this.$emit('fetch-error', error_1);
                    this.filteredOptions = [];
                    return [3
                    /*break*/
                    , 3];

                  case 3:
                    this.searching = false;
                    this.delayTimeout = undefined;
                    return [2
                    /*return*/
                    ];
                }
              });
            });
          }, this.delay);
          return [2
          /*return*/
          ];
        });
      });
    },
    getFilterPromise: function getFilterPromise(query) {
      return Promise.resolve(this.fetchOptions(query, this.nextPage));
    },
    listEndReached: function listEndReached() {
      if (!this.nextPage || this.searching) {
        return;
      }

      this.filterOptions(this.query);
    },
    queryFilter: function queryFilter(options) {
      var _this = this;

      if (!this.query) {
        return options;
      }

      return options.map(function (option) {
        if (option.children) {
          var newOption = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, option), {
            children: _this.queryFilter(option.children)
          });

          return newOption;
        }

        return option;
      }).filter(function (option) {
        var foundText = String(option.text).toUpperCase().trim().includes(_this.query.toUpperCase().trim());
        var hasChildren = option.children && option.children.length > 0;
        return hasChildren || foundText;
      });
    },
    hideOptions: function hideOptions() {
      this.show = false;

      if (this.selectOnClose && this.highlightedOption) {
        this.selectOption(this.highlightedOption, false);
      }
    },
    showOptions: function showOptions() {
      this.show = true;
    },
    toggleOptions: function toggleOptions() {
      if (this.show) {
        this.hideOptions();
      } else {
        this.showOptions();
      }
    },
    focusSearchBox: function focusSearchBox() {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        var searchBox;
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              searchBox = this.getSearchBox();
              searchBox.focus();
              searchBox.select();
              return [2
              /*return*/
              ];
          }
        });
      });
    },
    blurHandler: function blurHandler(e) {
      var shouldHideOptions = true;
      var clickedElement = e.relatedTarget;

      if (clickedElement) {
        var wrapper = this.$refs.wrapper;
        var isChild = wrapper.contains(clickedElement);

        if (isChild) {
          shouldHideOptions = false;
        }
      }

      if (clickedElement !== this.$refs.selectButton && !shouldHideOptions && this.getSearchBox()) {
        this.focusSearchBox();
        return;
      }

      if (shouldHideOptions) {
        this.hideOptions();
      }

      this.$emit('blur', e);
      this.hasFocus = false;
    },
    focusHandler: function focusHandler(e) {
      this.hasFocus = true;

      if (this.openOnFocus) {
        this.showOptions();
      }

      this.$emit('focus', e);
    },
    clickHandler: function clickHandler(e) {
      if (!this.show && !this.hasFocus) {
        this.getButton().focus();

        if (!this.openOnFocus) {
          this.showOptions();
        }
      } else {
        this.toggleOptions();
      }

      this.$emit('click', e);
    },
    findNextOptionIndex: function findNextOptionIndex(currentOptionIndex) {
      if (currentOptionIndex === void 0) {
        currentOptionIndex = null;
      }

      var endReached = currentOptionIndex !== null && currentOptionIndex + 1 >= this.filteredflattenedOptions.length;
      var nextOptionIndex;

      if (currentOptionIndex === null || endReached) {
        nextOptionIndex = 0;
      } else {
        nextOptionIndex = currentOptionIndex + 1;
      }

      var nextOption = this.filteredflattenedOptions[nextOptionIndex];

      if (!nextOption || nextOption.disabled) {
        return this.findNextOptionIndex(nextOptionIndex);
      }

      return nextOptionIndex;
    },
    findPrevOptionIndex: function findPrevOptionIndex(currentOptionIndex) {
      var beginningReached = currentOptionIndex === null || currentOptionIndex - 1 < 0;
      var prevOptionIndex;

      if (currentOptionIndex === null || beginningReached) {
        prevOptionIndex = this.filteredflattenedOptions.length - 1;
      } else {
        prevOptionIndex = currentOptionIndex - 1;
      }

      var prevOption = this.filteredflattenedOptions[prevOptionIndex];

      if (!prevOption || prevOption.disabled) {
        return this.findPrevOptionIndex(prevOptionIndex);
      }

      return prevOptionIndex;
    },
    arrowUpHandler: function arrowUpHandler(e) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          e.preventDefault();

          if (!this.show) {
            this.showOptions();
            return [2
            /*return*/
            ];
          }

          if (!this.atLeastOneValidOptionExists) {
            this.highlighted = null;
            return [2
            /*return*/
            ];
          }

          this.highlighted = this.findPrevOptionIndex(this.highlighted);
          return [2
          /*return*/
          ];
        });
      });
    },
    arrowDownHandler: function arrowDownHandler(e) {
      e.preventDefault();

      if (!this.show) {
        this.showOptions();
        return;
      }

      if (!this.atLeastOneValidOptionExists) {
        this.highlighted = null;
        return;
      }

      var nextOptionIndex = this.findNextOptionIndex(this.highlighted);
      var endReached = nextOptionIndex >= this.filteredflattenedOptions.length;

      if (endReached && this.usesAJax && this.nextPage) {
        this.listEndReached();
      } else {
        this.highlighted = nextOptionIndex;
      }
    },
    listScrollHandler: function listScrollHandler(e) {
      var el = e.target;

      if (el.scrollTop === el.scrollHeight - el.offsetHeight) {
        this.listEndReached();
      }
    },
    scrollToHighlightedOption: function scrollToHighlightedOption(behavior) {
      if (behavior === void 0) {
        behavior = 'auto';
      }

      if (this.$refs.optionsList && typeof this.highlighted === 'number') {
        var list = this.$refs.optionsList;
        var li = list.querySelectorAll('li[data-type=option]')[this.highlighted];

        if (li.scrollIntoView) {
          li.scrollIntoView({
            block: 'nearest',
            behavior: behavior
          });
        }
      }
    },
    escapeHandler: function escapeHandler(e) {
      e.preventDefault();
      this.hideOptions();
    },
    enterHandler: function enterHandler(e) {
      if (!this.show) {
        return;
      }

      if (this.highlighted !== null) {
        e.preventDefault();
        this.selectOption(this.highlightedOption);
      }
    },
    searchInputHandler: function searchInputHandler(e) {
      var target = e.target;
      this.query = target.value;
    },
    getButton: function getButton() {
      return this.$refs.selectButton;
    },
    getSearchBox: function getSearchBox() {
      return this.$refs.searchBox;
    },
    selectOption: function selectOption(option, focus) {
      if (focus === void 0) {
        focus = true;
      }

      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (this.localValue !== option.value) {
                this.localValue = option.value;
              }

              this.selectedOption = option;
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              if (focus) {
                if (!this.closeOnSelect && this.shouldShowSearchbox) {
                  this.getSearchBox().focus();
                } else {
                  this.getButton().focus();

                  if (this.closeOnSelect && this.show) {
                    this.hideOptions();
                  }
                }
              }

              return [2
              /*return*/
              ];
          }
        });
      });
    },
    clearButtonClickHandler: function clearButtonClickHandler(e) {
      e.preventDefault();
      e.stopPropagation();
      this.localValue = null;
      this.query = '';
    },
    blur: function blur() {
      var el = this.hideSearchBox ? this.$refs.selectButton : this.$refs.searchBox;
      el.blur();
    },
    focus: function focus(options) {
      var el = this.$refs.selectButton;
      el.focus(options);
    }
  }
});
/* harmony default export */ var components_TRichSelect = (TRichSelect);
// EXTERNAL MODULE: ./node_modules/lodash/intersection.js
var intersection = __webpack_require__("d173");
var intersection_default = /*#__PURE__*/__webpack_require__.n(intersection);

// CONCATENATED MODULE: ./src/components/TInputGroup.ts




var TInputGroup = Component["a" /* default */].extend({
  name: 'TInputGroup',
  props: {
    inputName: {
      type: String,
      default: undefined
    },
    label: {
      type: String,
      default: undefined
    },
    description: {
      type: String,
      default: undefined
    },
    feedback: {
      type: String,
      default: undefined
    },
    sortedElements: {
      type: Array,
      default: function _default() {
        return ['label', 'default', 'feedback', 'description'];
      },
      validator: function validator(value) {
        var expectedValues = ['default', 'description', 'feedback', 'label'];
        return value.length === intersection_default()(value, expectedValues).length;
      }
    },
    classes: {
      type: Object,
      default: undefined
    }
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  computed: {
    /**
     * Only render the elements that has a prop or a slot (always the default prop)
     * @return {Array}
     */
    elementsToRender: function elementsToRender() {
      var props = this.$props;
      var slots = this.$slots;
      return this.sortedElements.filter(function (e) {
        return e === 'default' || !!props[e] || !!slots[e];
      });
    }
  },
  methods: {
    render: function render(createElement) {
      var _this = this;

      return createElement('div', {
        ref: 'wrapper',
        class: this.getElementCssClass('wrapper')
      }, this.elementsToRender.map(function (elementName) {
        return createElement(_this.getTagName(elementName), {
          ref: elementName,
          class: _this.getElementCssClass(elementName === 'default' ? 'body' : elementName),
          attrs: {
            for: elementName === 'label' ? _this.inputName : undefined
          },
          slot: elementName
        }, _this.$slots[elementName] || _this.$props[elementName]);
      }));
    },

    /**
     * Get the tag name according to the slot name
     * @param  {String} slotName
     * @return {String}
     */
    getTagName: function getTagName(slotName) {
      switch (slotName) {
        case 'label':
          return 'label';

        default:
          return 'div';
      }
    }
  }
});
/* harmony default export */ var components_TInputGroup = (TInputGroup);
// CONCATENATED MODULE: ./src/components/TCard.ts

var TCard = Component["a" /* default */].extend({
  name: 'TCard',
  props: {
    tagName: {
      type: String,
      default: 'div'
    },
    header: {
      type: String,
      default: undefined
    },
    footer: {
      type: String,
      default: undefined
    },
    noBody: {
      type: Boolean,
      default: false
    },
    classes: {
      type: Object,
      default: undefined
    }
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  methods: {
    render: function render(createElement) {
      return createElement(this.tagName, {
        class: this.getElementCssClass('wrapper')
      }, this.renderChilds(createElement));
    },
    renderChilds: function renderChilds(createElement) {
      if (this.noBody) {
        return this.$slots.default;
      }

      var childs = [];

      if (!!this.$slots.header || this.header !== undefined) {
        childs.push(createElement('div', {
          ref: 'header',
          class: this.getElementCssClass('header')
        }, this.$slots.header || this.header));
      }

      childs.push(createElement('div', {
        ref: 'body',
        class: this.getElementCssClass('body')
      }, this.$slots.default));

      if (!!this.$slots.footer || this.footer !== undefined) {
        childs.push(createElement('div', {
          ref: 'footer',
          class: this.getElementCssClass('footer')
        }, this.$slots.footer || this.footer));
      }

      return childs;
    }
  }
});
/* harmony default export */ var components_TCard = (TCard);
// CONCATENATED MODULE: ./src/components/TAlert.ts


var TAlert = Component["a" /* default */].extend({
  name: 'TAlert',
  props: {
    tagName: {
      type: String,
      default: 'div'
    },
    bodyTagName: {
      type: String,
      default: 'div'
    },
    dismissible: {
      type: Boolean,
      default: true
    },
    show: {
      type: Boolean,
      default: false
    },
    timeout: {
      type: Number,
      default: undefined
    },
    classes: {
      type: Object,
      default: undefined
    }
  },
  data: function data() {
    return {
      localShow: this.show
    };
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  watch: {
    show: function show(_show) {
      this.localShow = _show;
    },
    localShow: function localShow(_localShow) {
      this.$emit('update:show', _localShow);

      if (this.localShow) {
        this.$emit('shown');

        if (this.timeout) {
          this.initTimeout();
        }
      } else {
        this.$emit('hidden');
      }
    }
  },
  mounted: function mounted() {
    if (this.localShow && this.timeout) {
      this.initTimeout();
    }
  },
  methods: {
    render: function render(createElement) {
      if (!this.localShow) {
        return createElement();
      }

      return createElement(this.tagName, {
        class: this.getElementCssClass('wrapper')
      }, !this.dismissible ? [createElement(this.bodyTagName, {
        ref: 'body',
        class: this.getElementCssClass('body')
      }, this.$slots.default)] : [createElement(this.bodyTagName, {
        ref: 'body',
        class: this.getElementCssClass('body')
      }, this.$slots.default), createElement('button', {
        ref: 'close',
        class: this.getElementCssClass('close'),
        attrs: {
          type: 'button'
        },
        on: {
          click: this.hide
        }
      }, this.$slots.close || [createElement('svg', {
        attrs: {
          fill: 'currentColor',
          xmlns: 'http://www.w3.org/2000/svg',
          viewBox: '0 0 20 20'
        },
        class: this.getElementCssClass('closeIcon')
      }, [createElement('path', {
        attrs: {
          'clip-rule': 'evenodd',
          'fill-rule': 'evenodd',
          d: 'M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'
        }
      })])])]);
    },
    initTimeout: function initTimeout() {
      var _this = this;

      setTimeout(function () {
        _this.hide();
      }, this.timeout);
    },
    hide: function hide() {
      this.localShow = false;
    }
  }
});
/* harmony default export */ var components_TAlert = (TAlert);
// EXTERNAL MODULE: ./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js
var bodyScrollLock_esm = __webpack_require__("e181");

// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__("8bbf");
var external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_);

// CONCATENATED MODULE: ./src/components/TModal.ts






var TModal = Component["a" /* default */].extend({
  name: 'TModal',
  props: {
    name: {
      type: String,
      default: undefined
    },
    value: {
      type: Boolean,
      default: false
    },
    header: {
      type: String,
      default: undefined
    },
    footer: {
      type: String,
      default: undefined
    },
    clickToClose: {
      type: Boolean,
      default: true
    },
    escToClose: {
      type: Boolean,
      default: true
    },
    noBody: {
      type: Boolean,
      default: false
    },
    hideCloseButton: {
      type: Boolean,
      default: false
    },
    disableBodyScroll: {
      type: Boolean,
      default: true
    },
    focusOnOpen: {
      type: Boolean,
      default: true
    },
    fixedClasses: {
      type: Object,
      default: function _default() {
        return {
          overlay: 'overflow-auto scrolling-touch left-0 top-0 bottom-0 right-0 w-full h-full fixed',
          wrapper: 'relative mx-auto',
          modal: 'overflow-hidden relative '
        };
      }
    },
    classes: {
      type: Object,
      default: function _default() {
        return {
          overlay: 'z-40 bg-black bg-opacity-50',
          wrapper: 'z-50 max-w-lg',
          modal: 'bg-white shadow',
          body: '',
          header: '',
          footer: '',
          close: 'absolute right-0 top-0',
          closeIcon: 'h-5 w-5 fill-current',
          overlayEnterClass: '',
          overlayEnterActiveClass: 'opacity-0 transition ease-out duration-100',
          overlayEnterToClass: 'opacity-100',
          overlayLeaveClass: 'transition ease-in opacity-100',
          overlayLeaveActiveClass: '',
          overlayLeaveToClass: 'opacity-0 duration-75',
          enterClass: '',
          enterActiveClass: '',
          enterToClass: '',
          leaveClass: '',
          leaveActiveClass: '',
          leaveToClass: ''
        };
      }
    }
  },
  data: function data() {
    return {
      overlayShow: this.value,
      modalShow: this.value,
      params: undefined,
      preventAction: false
    };
  },
  watch: {
    value: function value(_value) {
      if (_value) {
        this.show();
      } else {
        this.hide();
      }
    },
    overlayShow: function overlayShow(shown) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              this.$emit('input', shown);
              this.$emit('change', shown);
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              if (shown) {
                this.modalShow = true;
              } else {
                this.closed();
              }

              return [2
              /*return*/
              ];
          }
        });
      });
    },
    modalShow: function modalShow(shown) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              if (!shown) {
                this.overlayShow = false;
              } else {
                this.opened();
              }

              return [2
              /*return*/
              ];
          }
        });
      });
    }
  },
  created: function created() {
    var _this = this;

    if (!external_commonjs_vue_commonjs2_vue_root_Vue_default.a.prototype.$modal) {
      // eslint-disable-next-line no-param-reassign
      external_commonjs_vue_commonjs2_vue_root_Vue_default.a.prototype.$modal = new external_commonjs_vue_commonjs2_vue_root_Vue_default.a({
        methods: {
          show: function show(name, params) {
            if (params === void 0) {
              params = undefined;
            }

            this.$emit("show-" + name, params);
          },
          hide: function hide(name) {
            this.$emit("hide-" + name);
          }
        }
      });
    }

    if (this.name) {
      this.$modal.$on("show-" + this.name, function (params) {
        if (params === void 0) {
          params = undefined;
        }

        _this.show(params);
      });
      this.$modal.$on("hide-" + this.name, function () {
        _this.hide();
      });
    }
  },
  mounted: function mounted() {
    if (this.overlayShow) {
      this.prepareDomForModal();
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.disableBodyScroll) {
      Object(bodyScrollLock_esm["b" /* enableBodyScroll */])(this.$refs.overlay);
    }
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  methods: {
    render: function render(createElement) {
      return createElement('transition', {
        props: {
          enterClass: this.getElementCssClass('overlayEnterClass'),
          enterActiveClass: this.getElementCssClass('overlayEnterActiveClass'),
          enterToClass: this.getElementCssClass('overlayEnterToClass'),
          leaveClass: this.getElementCssClass('overlayLeaveClass'),
          leaveActiveClass: this.getElementCssClass('overlayLeaveActiveClass'),
          leaveToClass: this.getElementCssClass('overlayLeaveToClass')
        }
      }, this.overlayShow ? [createElement('div', {
        ref: 'overlay',
        attrs: {
          tabindex: 0
        },
        class: this.getElementCssClass('overlay'),
        on: {
          keyup: this.keyupHandler,
          click: this.clickHandler
        }
      }, [this.renderWrapper(createElement)])] : undefined);
    },
    renderWrapper: function renderWrapper(createElement) {
      return createElement('div', {
        ref: 'wrapper',
        class: this.getElementCssClass('wrapper')
      }, [this.renderModal(createElement)]);
    },
    renderModal: function renderModal(createElement) {
      return createElement('transition', {
        props: {
          enterClass: this.getElementCssClass('enterClass'),
          enterActiveClass: this.getElementCssClass('enterActiveClass'),
          enterToClass: this.getElementCssClass('enterToClass'),
          leaveClass: this.getElementCssClass('leaveClass'),
          leaveActiveClass: this.getElementCssClass('leaveActiveClass'),
          leaveToClass: this.getElementCssClass('leaveToClass')
        }
      }, this.modalShow ? [createElement('div', {
        ref: 'modal',
        class: this.getElementCssClass('modal')
      }, this.renderChilds(createElement))] : undefined);
    },
    renderChilds: function renderChilds(createElement) {
      if (this.noBody) {
        return this.$slots.default;
      }

      var childs = [];

      if (!this.hideCloseButton) {
        childs.push(createElement('button', {
          ref: 'close',
          class: this.getElementCssClass('close'),
          attrs: {
            type: 'button'
          },
          on: {
            click: this.hide
          }
        }, this.$slots.button || [createElement('svg', {
          attrs: {
            fill: 'currentColor',
            xmlns: 'http://www.w3.org/2000/svg',
            viewBox: '0 0 20 20'
          },
          class: this.getElementCssClass('closeIcon')
        }, [createElement('path', {
          attrs: {
            'clip-rule': 'evenodd',
            'fill-rule': 'evenodd',
            d: 'M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'
          }
        })])]));
      }

      if (!!this.$slots.header || this.header !== undefined) {
        childs.push(createElement('div', {
          ref: 'header',
          class: this.getElementCssClass('header')
        }, this.$slots.header || this.header));
      }

      childs.push(createElement('div', {
        ref: 'body',
        class: this.getElementCssClass('body')
      }, this.$slots.default));

      if (!!this.$slots.footer || this.footer !== undefined) {
        childs.push(createElement('div', {
          ref: 'footer',
          class: this.getElementCssClass('footer')
        }, this.$slots.footer || this.footer));
      }

      return childs;
    },
    clickHandler: function clickHandler(e) {
      if (e.target === this.$refs.overlay) {
        this.outsideClick();
      }
    },
    keyupHandler: function keyupHandler(e) {
      if (e.keyCode === Key["a" /* default */].ESC && this.escToClose) {
        this.hide();
      }
    },
    beforeOpen: function beforeOpen() {
      this.$emit('before-open', {
        params: this.params,
        cancel: this.cancel
      });
    },
    opened: function opened() {
      this.$emit('opened', {
        params: this.params
      });
      this.prepareDomForModal();
    },
    beforeClose: function beforeClose() {
      if (this.disableBodyScroll) {
        var mdl = this.$refs.overlay;

        if (mdl) {
          Object(bodyScrollLock_esm["b" /* enableBodyScroll */])(mdl);
        }
      }

      this.$emit('before-close', {
        cancel: this.cancel
      });
    },
    closed: function closed() {
      this.$emit('closed');
    },
    prepareDomForModal: function prepareDomForModal() {
      if (this.disableBodyScroll) {
        var mdl = this.$refs.overlay;

        if (mdl) {
          Object(bodyScrollLock_esm["a" /* disableBodyScroll */])(mdl, {
            reserveScrollBarGap: true
          });
        }
      }

      if (this.focusOnOpen) {
        var ovr = this.$refs.overlay;

        if (ovr) {
          ovr.focus();
        }
      }
    },
    hide: function hide() {
      this.beforeClose();

      if (!this.preventAction) {
        this.modalShow = false;
      } else {
        this.preventAction = false;
      }
    },
    show: function show(params) {
      if (params === void 0) {
        params = undefined;
      }

      this.params = params;
      this.beforeOpen();

      if (!this.preventAction) {
        this.overlayShow = true;
      } else {
        this.preventAction = false;
      }
    },
    cancel: function cancel() {
      this.preventAction = true;
    },
    outsideClick: function outsideClick() {
      if (this.clickToClose) {
        this.hide();
      }
    }
  }
});
/* harmony default export */ var components_TModal = (TModal);
// CONCATENATED MODULE: ./src/components/TDropdown.ts





var TDropdown = Component["a" /* default */].extend({
  name: 'TDropdown',
  props: {
    text: {
      type: String,
      default: ''
    },
    disabled: {
      type: Boolean,
      default: undefined
    },
    tagName: {
      type: String,
      default: 'div'
    },
    dropdownWrapperTagName: {
      type: String,
      default: 'div'
    },
    dropdownTagName: {
      type: String,
      default: 'div'
    },
    toggleOnFocus: {
      type: Boolean,
      default: false
    },
    toggleOnClick: {
      type: Boolean,
      default: true
    },
    toggleOnHover: {
      type: Boolean,
      default: false
    },
    hideOnLeaveTimeout: {
      type: Number,
      default: 250
    },
    show: {
      type: Boolean,
      default: false
    },
    classes: {
      type: Object,
      default: function _default() {
        return {
          button: 'p-3',
          wrapper: 'inline-flex flex-col',
          dropdownWrapper: 'relative z-10',
          dropdown: 'origin-top-right absolute right-0 w-56 rounded-md shadow-lg bg-white',
          enterClass: '',
          enterActiveClass: 'transition ease-out duration-100 transform opacity-0 scale-95',
          enterToClass: 'transform opacity-100 scale-100',
          leaveClass: 'transition ease-in transform opacity-100 scale-100',
          leaveActiveClass: '',
          leaveToClass: 'transform opacity-0 scale-95 duration-75'
        };
      }
    }
  },
  data: function data() {
    return {
      localShow: this.show,
      hasFocus: false,
      hideOnLeaveTimeoutHolder: null
    };
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  watch: {
    show: function show(_show) {
      this.localShow = _show;
    },
    localShow: function localShow(_localShow) {
      this.$emit('update:show', _localShow);

      if (_localShow) {
        this.$emit('shown');
      } else {
        this.$emit('hidden');
      }
    }
  },
  methods: {
    render: function render(createElement) {
      var defaultSlot = this.$scopedSlots.default ? this.$scopedSlots.default({
        hide: this.doHide,
        show: this.doShow,
        toggle: this.doToggle,
        blurHandler: this.blurHandler
      }) : null;
      var triggerSlot = this.$scopedSlots.trigger ? this.$scopedSlots.trigger({
        isShown: this.localShow,
        hide: this.doHide,
        hideIfFocusOutside: this.hideIfFocusOutside,
        show: this.doShow,
        toggle: this.doToggle,
        mousedownHandler: this.mousedownHandler,
        focusHandler: this.focusHandler,
        blurHandler: this.blurHandler,
        keydownHandler: this.keydownHandler,
        disabled: this.disabled
      }) : createElement('button', {
        ref: 'button',
        attrs: {
          type: 'button',
          disabled: this.disabled
        },
        class: this.getElementCssClass('button'),
        on: {
          keydown: this.keydownHandler,
          mousedown: this.mousedownHandler,
          focus: this.focusHandler,
          blur: this.blurHandler
        }
      }, this.$slots.button || this.text);
      var subElements = [triggerSlot, createElement('transition', {
        props: {
          enterClass: this.getElementCssClass('enterClass'),
          enterActiveClass: this.getElementCssClass('enterActiveClass'),
          enterToClass: this.getElementCssClass('enterToClass'),
          leaveClass: this.getElementCssClass('leaveClass'),
          leaveActiveClass: this.getElementCssClass('leaveActiveClass'),
          leaveToClass: this.getElementCssClass('leaveToClass')
        }
      }, this.localShow ? [createElement(this.dropdownWrapperTagName, {
        ref: 'dropdownWrapper',
        class: this.getElementCssClass('dropdownWrapper'),
        attrs: {
          tabindex: -1
        },
        on: {
          focus: this.focusHandler,
          blur: this.blurHandler
        }
      }, [createElement(this.dropdownTagName, {
        ref: 'dropdown',
        class: this.getElementCssClass('dropdown')
      }, defaultSlot)])] : undefined)];
      return createElement(this.tagName, {
        ref: 'wrapper',
        class: this.getElementCssClass('wrapper'),
        on: {
          mouseover: this.mouseoverHandler,
          mouseleave: this.mouseleaveHandler
        }
      }, subElements);
    },
    blurEventTargetIsChild: function blurEventTargetIsChild(e) {
      var blurredElement = e.relatedTarget;

      if (blurredElement) {
        var wrapper = this.$refs.wrapper;
        return wrapper.contains(blurredElement);
      }

      return false;
    },
    focusEventTargetIsChild: function focusEventTargetIsChild(e) {
      var focusedElement = e.target;

      if (focusedElement) {
        var wrapper = this.$refs.wrapper;
        return wrapper.contains(focusedElement);
      }

      return false;
    },
    escapeHandler: function escapeHandler() {
      this.doHide();
    },
    mousedownHandler: function mousedownHandler() {
      if (this.toggleOnClick) {
        this.doToggle();
      }
    },
    focusHandler: function focusHandler(e) {
      if (!this.hasFocus && this.focusEventTargetIsChild(e)) {
        this.hasFocus = true;
        this.$emit('focus', e);
      }

      if (this.toggleOnFocus) {
        this.doShow();
      }
    },
    blurHandler: function blurHandler(e) {
      if (this.hasFocus && !this.blurEventTargetIsChild(e)) {
        this.hasFocus = false;
        this.$emit('blur', e);
      }

      if (this.toggleOnFocus || this.toggleOnClick) {
        this.hideIfFocusOutside(e);
      }
    },
    keydownHandler: function keydownHandler(e) {
      if ([Key["a" /* default */].ENTER, Key["a" /* default */].SPACE].includes(e.keyCode)) {
        this.mousedownHandler();
      } else if (e.keyCode === Key["a" /* default */].ESC) {
        this.escapeHandler();
      }
    },
    mouseleaveHandler: function mouseleaveHandler() {
      var _this = this;

      if (!this.toggleOnHover) {
        return;
      }

      if (!this.hideOnLeaveTimeout) {
        this.doHide();
        return;
      }

      this.hideOnLeaveTimeoutHolder = setTimeout(function () {
        _this.doHide();

        _this.hideOnLeaveTimeoutHolder = null;
      }, this.hideOnLeaveTimeout);
    },
    mouseoverHandler: function mouseoverHandler() {
      if (!this.toggleOnHover) {
        return;
      }

      if (this.hideOnLeaveTimeout && this.hideOnLeaveTimeoutHolder) {
        clearTimeout(this.hideOnLeaveTimeoutHolder);
        this.hideOnLeaveTimeoutHolder = null;
      }

      this.doShow();
    },
    doHide: function doHide() {
      this.localShow = false;
    },
    hideIfFocusOutside: function hideIfFocusOutside(e) {
      if (!(e instanceof Event)) {
        throw new Error('the method hideIfFocusOutside expects an instance of `Event` as parameter');
      }

      if (!this.blurEventTargetIsChild(e)) {
        this.doHide();
      }
    },
    doShow: function doShow() {
      this.localShow = true;
    },
    doToggle: function doToggle() {
      if (this.localShow) {
        this.doHide();
      } else {
        this.doShow();
      }
    },
    blur: function blur() {
      var el = this.$refs.button;
      el.blur();
    },
    focus: function focus(options) {
      var el = this.$refs.button;
      el.focus(options);
    }
  }
});
/* harmony default export */ var components_TDropdown = (TDropdown);
// EXTERNAL MODULE: ./node_modules/lodash/range.js
var lodash_range = __webpack_require__("5a3a");
var range_default = /*#__PURE__*/__webpack_require__.n(lodash_range);

// CONCATENATED MODULE: ./src/components/TPagination.ts






var TPagination = Component["a" /* default */].extend({
  name: 'TPagination',
  props: {
    value: {
      type: Number,
      default: null
    },
    tagName: {
      type: String,
      default: 'ul'
    },
    elementTagName: {
      type: String,
      default: 'li'
    },
    disabled: {
      type: Boolean,
      default: false
    },
    perPage: {
      type: Number,
      default: 20,
      validator: function validator(value) {
        return value > 0;
      }
    },
    totalItems: {
      type: Number,
      default: 0,
      validator: function validator(value) {
        return value >= 0;
      }
    },
    limit: {
      type: Number,
      default: 5,
      validator: function validator(value) {
        return value >= 0;
      }
    },
    prevLabel: {
      type: String,
      default: '&lsaquo;'
    },
    nextLabel: {
      type: String,
      default: '&rsaquo;'
    },
    firstLabel: {
      type: String,
      default: '&laquo;'
    },
    lastLabel: {
      type: String,
      default: '&raquo;'
    },
    ellipsisLabel: {
      type: String,
      default: '&hellip;'
    },
    hideFirstLastControls: {
      type: Boolean,
      default: false
    },
    hidePrevNextControls: {
      type: Boolean,
      default: false
    },
    hideEllipsis: {
      type: Boolean,
      default: false
    },
    classes: {
      type: Object,
      default: function _default() {
        return {
          wrapper: 'table border-collapse text-center bg-white mx-auto mt-2',
          element: 'w-8 h-8 border table-cell',
          disabledElement: 'w-8 h-8 border table-cell',
          ellipsisElement: 'w-8 h-8 border hidden md:table-cell',
          activeButton: 'bg-gray-300 w-full h-full',
          disabledButton: 'opacity-25 w-full h-full cursor-not-allowed',
          button: 'hover:bg-gray-200 w-full h-full',
          ellipsis: ''
        };
      }
    }
  },
  render: function render(createElement) {
    var createComponentFunc = this.createComponent;
    return createComponentFunc(createElement);
  },
  data: function data() {
    return {
      currentPage: this.value
    };
  },
  computed: {
    totalPages: function totalPages() {
      if (this.perPage <= 0) {
        return 0;
      }

      return Math.ceil(this.totalItems / this.perPage);
    },
    pageButtons: function pageButtons() {
      var _this = this;

      var from1 = Number(this.currentPage) - Math.round(this.limit / 2) + 1;
      var from2 = this.totalPages + 1 - this.limit;
      var from = Math.max(Math.min(from1, from2), 1);
      var to = Math.min(from + this.limit - 1, this.totalPages);
      return range_default()(from, to + 1).map(function (page) {
        if (!_this.hideEllipsis && page === from && from > 1) {
          return 'less';
        }

        if (!_this.hideEllipsis && page === to && to < _this.totalPages) {
          return 'more';
        }

        return String(page);
      });
    },
    prevIsDisabled: function prevIsDisabled() {
      return this.disabled || this.currentPage === null || this.currentPage <= 1;
    },
    nextIsDisabled: function nextIsDisabled() {
      return this.disabled || this.currentPage === null || this.currentPage >= this.totalPages;
    }
  },
  watch: {
    value: function value(_value) {
      this.currentPage = _value;
    },
    currentPage: function currentPage(_currentPage) {
      this.$emit('input', _currentPage);
      this.$emit('change', _currentPage);
    }
  },
  methods: {
    createComponent: function createComponent(createElement) {
      var _this = this;

      var subElements = [];

      if (!this.hideFirstLastControls) {
        subElements.push(this.createControl(createElement, this.firstLabel, this.prevIsDisabled, false, this.goToFirstPage));
      }

      if (!this.hidePrevNextControls) {
        subElements.push(this.createControl(createElement, this.prevLabel, this.prevIsDisabled, false, this.goToPrevPage));
      }

      this.pageButtons.forEach(function (page) {
        if (page === 'less' || page === 'more') {
          subElements.push(_this.createControl(createElement, _this.ellipsisLabel));
        } else {
          subElements.push(_this.createControl(createElement, page, false, _this.isPageActive(Number(page)), function () {
            return _this.selectPage(Number(page));
          }));
        }
      });

      if (!this.hidePrevNextControls) {
        subElements.push(this.createControl(createElement, this.nextLabel, this.nextIsDisabled, false, this.goToNextPage));
      }

      if (!this.hideFirstLastControls) {
        subElements.push(this.createControl(createElement, this.lastLabel, this.nextIsDisabled, false, this.goToLastPage));
      }

      return createElement(this.tagName, {
        class: this.getElementCssClass('wrapper')
      }, subElements);
    },
    // eslint-disable-next-line max-len
    createControl: function createControl(createElement, text, disabled, active, clickHandler) {
      if (disabled === void 0) {
        disabled = false;
      }

      if (active === void 0) {
        active = false;
      }

      var className = '';

      if (!clickHandler) {
        className = this.getElementCssClass('ellipsisElement');
      } else if (disabled) {
        className = this.getElementCssClass('disabledElement');
      } else {
        className = this.getElementCssClass('element');
      }

      return createElement(this.elementTagName, {
        class: className
      }, [this.createControlButton(createElement, text, disabled, active, clickHandler)]);
    },
    // eslint-disable-next-line max-len
    createControlButton: function createControlButton(createElement, text, disabled, active, clickHandler) {
      if (disabled === void 0) {
        disabled = false;
      }

      if (active === void 0) {
        active = false;
      }

      if (!clickHandler) {
        return createElement('span', {
          class: this.getElementCssClass('ellipsis'),
          domProps: {
            innerHTML: text
          }
        });
      }

      var className = '';

      if (disabled) {
        className = this.getElementCssClass('disabledButton');
      } else if (active) {
        className = this.getElementCssClass('activeButton');
      } else {
        className = this.getElementCssClass('button');
      }

      return createElement('button', {
        class: className,
        on: {
          click: clickHandler
        },
        domProps: {
          innerHTML: text
        }
      });
    },
    selectPage: function selectPage(page) {
      this.currentPage = page;
    },
    goToPrevPage: function goToPrevPage() {
      this.currentPage = this.currentPage === null ? 1 : Math.max(this.currentPage - 1, 1);
    },
    goToNextPage: function goToNextPage() {
      this.currentPage = this.currentPage === null ? this.totalPages : Math.min(this.currentPage + 1, this.totalPages);
    },
    goToFirstPage: function goToFirstPage() {
      this.currentPage = 1;
    },
    goToLastPage: function goToLastPage() {
      this.currentPage = this.totalPages;
    },
    isPageActive: function isPageActive(page) {
      return page === this.currentPage;
    }
  }
});
/* harmony default export */ var components_TPagination = (TPagination);
// CONCATENATED MODULE: ./src/components/TTag.ts

var TTag = Component["a" /* default */].extend({
  name: 'TTag',
  props: {
    text: {
      type: String,
      default: undefined
    },
    tagName: {
      type: String,
      default: 'div'
    }
  },
  render: function render(createElement) {
    var renderFun = this.render;
    return renderFun(createElement);
  },
  methods: {
    render: function render(createElement) {
      return createElement(this.tagName, {
        class: this.componentClass
      }, this.text === undefined ? this.$slots.default : this.text);
    }
  }
});
/* harmony default export */ var components_TTag = (TTag);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js
var es_array_join = __webpack_require__("a15b");

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__("53ca");

// EXTERNAL MODULE: ./node_modules/lodash/kebabCase.js
var kebabCase = __webpack_require__("375a");
var kebabCase_default = /*#__PURE__*/__webpack_require__.n(kebabCase);

// CONCATENATED MODULE: ./src/components/TRadioGroup.ts









var TRadioGroup = base_InputWithOptions.extend({
  name: 'TRadioGroup',
  props: {
    groupWrapperTag: {
      type: String,
      default: 'div'
    },
    wrapperTag: {
      type: String,
      default: 'label'
    },
    inputWrapperTag: {
      type: String,
      default: 'span'
    },
    labelTag: {
      type: String,
      default: 'span'
    },
    fixedClasses: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    classes: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    return {
      localValue: this.value
    };
  },
  watch: {
    localValue: function localValue(_localValue) {
      this.$emit('input', _localValue);
      this.$emit('change', _localValue);
    },
    value: function value(_value) {
      this.localValue = _value;
    }
  },
  render: function render(createElement) {
    var createRadioGroupFunc = this.createRadioGroup;
    return createRadioGroupFunc(createElement);
  },
  methods: {
    createRadioGroup: function createRadioGroup(createElement) {
      return createElement(this.groupWrapperTag, {
        ref: 'wrapper',
        class: this.getElementCssClass('groupWrapper')
      }, this.createRadioOptions(createElement));
    },
    createRadioOptions: function createRadioOptions(createElement) {
      var _this = this;

      var options = this.normalizedOptions;
      return options.map(function (option, index) {
        return _this.createRadioOption(createElement, option, index);
      });
    },
    createRadioOption: function createRadioOption(createElement, option, index) {
      var _this = this;

      return createElement(inputs_TRadio, {
        props: {
          id: this.buildId(option, index),
          name: this.name,
          tabindex: this.tabindex,
          disabled: this.disabled,
          autofocus: this.autofocus,
          required: this.required,
          model: this.localValue,
          label: option.text,
          wrapped: true,
          value: option.value,
          checked: this.value === option.value,
          variant: this.variant,
          classes: this.classes,
          fixedClasses: this.fixedClasses,
          variants: this.variants,
          wrapperTag: this.wrapperTag,
          inputWrapperTag: this.inputWrapperTag,
          labelTag: this.labelTag
        },
        scopedSlots: {
          default: this.$scopedSlots.default
        },
        on: {
          blur: this.blurHandler,
          focus: this.focusHandler,
          input: function input(value) {
            if (isEqual_default()(value, option.value)) {
              _this.inputHandler(option.value);
            }
          }
        }
      });
    },
    buildId: function buildId(option, index) {
      var parts = [];

      if (this.id) {
        parts.push(this.id);
      } else if (this.name) {
        parts.push(this.name);
      }

      if (['string', 'number'].includes(Object(esm_typeof["a" /* default */])(option.value))) {
        parts.push(kebabCase_default()(String(option.value)));
      } else {
        parts.push(index);
      }

      return parts.join('-');
    },
    inputHandler: function inputHandler(value) {
      this.$emit('input', value);
    },
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    }
  }
});
/* harmony default export */ var components_TRadioGroup = (TRadioGroup);
// CONCATENATED MODULE: ./src/components/TCheckboxGroup.ts








var TCheckboxGroup = base_InputWithOptions.extend({
  name: 'TCheckboxGroup',
  props: {
    groupWrapperTag: {
      type: String,
      default: 'div'
    },
    wrapperTag: {
      type: String,
      default: 'label'
    },
    inputWrapperTag: {
      type: String,
      default: 'span'
    },
    labelTag: {
      type: String,
      default: 'span'
    },
    value: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    fixedClasses: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    classes: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    return {
      localValue: this.value
    };
  },
  watch: {
    localValue: function localValue(_localValue) {
      this.$emit('input', _localValue);
      this.$emit('change', _localValue);
    },
    value: function value(_value) {
      this.localValue = _value;
    }
  },
  render: function render(createElement) {
    var createRadioGroupFunc = this.createRadioGroup;
    return createRadioGroupFunc(createElement);
  },
  methods: {
    createRadioGroup: function createRadioGroup(createElement) {
      return createElement(this.groupWrapperTag, {
        ref: 'wrapper',
        class: this.getElementCssClass('groupWrapper')
      }, this.createRadioOptions(createElement));
    },
    createRadioOptions: function createRadioOptions(createElement) {
      var _this = this;

      var options = this.normalizedOptions;
      return options.map(function (option, index) {
        return _this.createRadioOption(createElement, option, index);
      });
    },
    createRadioOption: function createRadioOption(createElement, option, index) {
      return createElement(inputs_TCheckbox, {
        props: {
          id: this.buildId(option, index),
          name: this.name,
          tabindex: this.tabindex,
          disabled: this.disabled,
          autofocus: this.autofocus,
          required: this.required,
          model: this.localValue,
          label: option.text,
          wrapped: true,
          value: option.value,
          checked: this.value === option.value,
          variant: this.variant,
          classes: this.classes,
          fixedClasses: this.fixedClasses,
          variants: this.variants,
          wrapperTag: this.wrapperTag,
          inputWrapperTag: this.inputWrapperTag,
          labelTag: this.labelTag
        },
        scopedSlots: {
          default: this.$scopedSlots.default
        },
        on: {
          blur: this.blurHandler,
          focus: this.focusHandler,
          input: this.inputHandler
        }
      });
    },
    buildId: function buildId(option, index) {
      var parts = [];

      if (this.id) {
        parts.push(this.id);
      } else if (this.name) {
        parts.push(this.name);
      }

      if (['string', 'number'].includes(Object(esm_typeof["a" /* default */])(option.value))) {
        parts.push(kebabCase_default()(String(option.value)));
      } else {
        parts.push(index);
      }

      return parts.join('-');
    },
    inputHandler: function inputHandler(value) {
      this.localValue = value;
    },
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    }
  }
});
/* harmony default export */ var components_TCheckboxGroup = (TCheckboxGroup);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("b64b");

// EXTERNAL MODULE: ./node_modules/lodash/pick.js
var pick = __webpack_require__("2593");
var pick_default = /*#__PURE__*/__webpack_require__.n(pick);

// CONCATENATED MODULE: ./src/components/TTable.ts







var TTable = Component["a" /* default */].extend({
  name: 'TTable',
  props: {
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    headers: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    footerData: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    hideHeader: {
      type: Boolean,
      default: false
    },
    showFooter: {
      type: Boolean,
      default: false
    },
    responsive: {
      type: Boolean,
      default: false
    },
    responsiveBreakpoint: {
      type: Number,
      default: 768
    }
  },
  data: function data() {
    return {
      ready: !this.responsive,
      windowWidth: null
    };
  },
  computed: {
    renderResponsive: function renderResponsive() {
      var windowWidth = this.windowWidth;
      return this.responsive && windowWidth && windowWidth < this.responsiveBreakpoint;
    },
    normalizedHeaders: function normalizedHeaders() {
      return this.headers.map(function (header) {
        if (typeof header === 'string') {
          return {
            text: header
          };
        }

        return header;
      });
    },
    normalizedFooterData: function normalizedFooterData() {
      return this.footerData.map(function (footer) {
        if (typeof footer === 'string') {
          return {
            text: footer
          };
        }

        return footer;
      });
    },
    headersValues: function headersValues() {
      return this.headers.filter(function (h) {
        return h.value;
      }).map(function (h) {
        return h.value;
      });
    },
    showHeader: function showHeader() {
      return !this.hideHeader;
    }
  },
  mounted: function mounted() {
    // If responsive we will need to calculate the windowWidth
    if (this.responsive) {
      this.windowWidth = window.innerWidth; // If responsive we want to show the table until we know the window size

      this.ready = true;
      window.addEventListener('resize', this.resizeListener);
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.responsive) {
      window.removeEventListener('resize', this.resizeListener);
    }
  },
  render: function render(createElement) {
    var renderFun = this.renderTable;
    return renderFun(createElement);
  },
  methods: {
    resizeListener: function resizeListener() {
      this.windowWidth = window.innerWidth;
    },
    renderTable: function renderTable(createElement) {
      if (!this.ready) {
        return createElement();
      }

      var childElements = []; // The responsive version doesnt have header

      if (!this.renderResponsive) {
        childElements.push(this.renderThead(createElement));
      }

      childElements.push(this.renderTbody(createElement));

      if (this.showFooter || this.$scopedSlots.tfoot) {
        childElements.push(this.renderTfoot(createElement));
      }

      return createElement('table', {
        ref: 'table',
        class: this.getElementCssClass('table')
      }, childElements);
    },
    renderThead: function renderThead(createElement) {
      var trClass = this.getElementCssClass('theadTr');
      var thClass = this.getElementCssClass('theadTh');
      var theadClass = this.getElementCssClass('thead');

      if (this.$scopedSlots.thead) {
        var thead = this.$scopedSlots.thead({
          theadClass: theadClass,
          trClass: trClass,
          thClass: thClass,
          data: this.normalizedHeaders
        });

        if (thead) {
          return thead;
        }
      }

      if (!this.showHeader) {
        return createElement();
      }

      var ths = this.normalizedHeaders.map(function (header) {
        return createElement('th', {
          attrs: {
            id: header.id
          },
          class: header.className ? [thClass, header.className] : thClass
        }, header.text);
      });
      return createElement('thead', {
        class: theadClass
      }, [createElement('tr', {
        class: trClass
      }, ths)]);
    },
    renderTfoot: function renderTfoot(createElement) {
      var trClass = this.getElementCssClass('tfootTr');
      var tdClass = this.getElementCssClass('tfootTd');
      var tfootClass = this.getElementCssClass('tfoot');

      if (this.$scopedSlots.tfoot) {
        var tfoot = this.$scopedSlots.tfoot({
          tfootClass: tfootClass,
          trClass: trClass,
          tdClass: tdClass,
          data: this.normalizedFooterData,
          headers: this.normalizedHeaders,
          renderResponsive: this.renderResponsive
        });

        if (tfoot) {
          return tfoot;
        }
      }

      var tds = this.normalizedFooterData.map(function (footer) {
        return createElement('td', {
          attrs: {
            id: footer.id
          },
          class: footer.className ? [tdClass, footer.className] : tdClass
        }, footer.text);
      });
      return createElement('tfoot', {
        class: tfootClass
      }, [createElement('tr', {
        class: trClass
      }, tds)]);
    },
    renderTbody: function renderTbody(createElement) {
      if (this.$scopedSlots.tbody) {
        var tbody = this.$scopedSlots.tbody({
          tbodyClass: this.getElementCssClass('tbody'),
          trClass: this.getElementCssClass('tr'),
          tdClass: this.getElementCssClass('td'),
          data: this.data,
          headers: this.normalizedHeaders,
          renderResponsive: this.renderResponsive
        });

        if (tbody) {
          return tbody;
        }
      }

      return createElement('tbody', {
        class: this.getElementCssClass('tbody')
      }, this.renderRows(createElement));
    },
    renderRows: function renderRows(createElement) {
      var _this = this;

      return this.data.map(function (row, rowIndex) {
        if (_this.$scopedSlots.row) {
          var tableRow = _this.$scopedSlots.row({
            rowIndex: rowIndex,
            row: row,
            trClass: _this.getElementCssClass('tr'),
            tdClass: _this.getElementCssClass('td')
          });

          if (tableRow) {
            return tableRow;
          }
        }

        return createElement('tr', {
          class: _this.getElementCssClass('tr')
        }, _this.renderCols(createElement, row, rowIndex));
      });
    },
    renderCols: function renderCols(createElement, row, rowIndex) {
      var _this = this;

      var columns = this.getRowColumns(row);

      if (Object(esm_typeof["a" /* default */])(columns) === 'object') {
        return Object.keys(columns).map(function (columnIndex) {
          var text = columns[columnIndex];
          return _this.renderCol(createElement, text, rowIndex, columnIndex);
        });
      }

      return columns.map(function (text, columnIndex) {
        return _this.renderCol(createElement, text, rowIndex, columnIndex);
      });
    },
    renderCol: function renderCol(createElement, text, rowIndex, columnIndex) {
      if (this.$scopedSlots.column) {
        var tableColumn = this.$scopedSlots.column({
          rowIndex: rowIndex,
          columnIndex: columnIndex,
          text: text,
          tdClass: this.getElementCssClass('td')
        });

        if (tableColumn) {
          return tableColumn;
        }
      }

      return createElement('td', {
        class: this.getElementCssClass('td')
      }, text);
    },
    getRowColumns: function getRowColumns(row) {
      if (!this.headersValues.length) {
        return row;
      }

      if (Object(esm_typeof["a" /* default */])(row) === 'object') {
        return pick_default()(row, this.headersValues);
      }

      return {};
    }
  }
});
/* harmony default export */ var components_TTable = (TTable);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.to-fixed.js
var es_number_to_fixed = __webpack_require__("b680");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.constructor.js
var es_regexp_constructor = __webpack_require__("4d63");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("25f0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
var es_string_split = __webpack_require__("1276");

// EXTERNAL MODULE: ./node_modules/lodash/merge.js
var merge = __webpack_require__("42454");
var merge_default = /*#__PURE__*/__webpack_require__.n(merge);

// CONCATENATED MODULE: ./src/l10n/default.ts
var English = {
  weekdays: {
    shorthand: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
    longhand: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
  },
  months: {
    shorthand: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    longhand: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
  },
  daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
  firstDayOfWeek: 0,
  ordinal: function ordinal(nth) {
    var s = nth % 100;
    if (s > 3 && s < 21) return 'th';

    switch (s % 10) {
      case 1:
        return 'st';

      case 2:
        return 'nd';

      case 3:
        return 'rd';

      default:
        return 'th';
    }
  },
  rangeSeparator: ' to ',
  weekAbbreviation: 'Wk',
  amPM: ['AM', 'PM'],
  yearAriaLabel: 'Year',
  monthAriaLabel: 'Month',
  hourAriaLabel: 'Hour',
  minuteAriaLabel: 'Minute',
  time24hr: false
};
/* harmony default export */ var l10n_default = (English);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("fb6a");

// CONCATENATED MODULE: ./src/utils/index.ts

var pad = function pad(number, length) {
  if (length === void 0) {
    length = 2;
  }

  return ("000" + number).slice(length * -1);
};
var utils_int = function int(bool) {
  return bool === true ? 1 : 0;
};
// CONCATENATED MODULE: ./src/utils/formatting.ts




// Credits to https://github.com/flatpickr/flatpickr/blob/master/src/utils/formatting.ts


var doNothing = function doNothing() {
  return undefined;
};

var monthToStr = function monthToStr(monthNumber, shorthand, locale) {
  return locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber];
};
var revFormat = {
  D: doNothing,
  F: function F(dateObj, monthName, locale) {
    dateObj.setMonth(locale.months.longhand.indexOf(monthName));
  },
  G: function G(dateObj, hour) {
    dateObj.setHours(parseFloat(hour));
  },
  H: function H(dateObj, hour) {
    dateObj.setHours(parseFloat(hour));
  },
  J: function J(dateObj, day) {
    dateObj.setDate(parseFloat(day));
  },
  K: function K(dateObj, amPM, locale) {
    dateObj.setHours(dateObj.getHours() % 12 + 12 * utils_int(new RegExp(locale.amPM[1], 'i').test(amPM)));
  },
  M: function M(dateObj, shortMonth, locale) {
    dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));
  },
  S: function S(dateObj, seconds) {
    dateObj.setSeconds(parseFloat(seconds));
  },
  U: function U(_, unixSeconds) {
    return new Date(parseFloat(unixSeconds) * 1000);
  },
  W: function W(dateObj, weekNum, locale) {
    var weekNumber = parseInt(weekNum, 10);
    var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);
    date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);
    return date;
  },
  Y: function Y(dateObj, year) {
    dateObj.setFullYear(parseFloat(year));
  },
  Z: function Z(_, ISODate) {
    return new Date(ISODate);
  },
  d: function d(dateObj, day) {
    dateObj.setDate(parseFloat(day));
  },
  h: function h(dateObj, hour) {
    dateObj.setHours(parseFloat(hour));
  },
  i: function i(dateObj, minutes) {
    dateObj.setMinutes(parseFloat(minutes));
  },
  j: function j(dateObj, day) {
    dateObj.setDate(parseFloat(day));
  },
  l: doNothing,
  m: function m(dateObj, month) {
    dateObj.setMonth(parseFloat(month) - 1);
  },
  n: function n(dateObj, month) {
    dateObj.setMonth(parseFloat(month) - 1);
  },
  s: function s(dateObj, seconds) {
    dateObj.setSeconds(parseFloat(seconds));
  },
  u: function u(_, unixMillSeconds) {
    return new Date(parseFloat(unixMillSeconds));
  },
  w: doNothing,
  y: function y(dateObj, year) {
    dateObj.setFullYear(2000 + parseFloat(year));
  }
};
var tokenRegex = {
  D: '(\\w+)',
  F: '(\\w+)',
  G: '(\\d\\d|\\d)',
  H: '(\\d\\d|\\d)',
  J: '(\\d\\d|\\d)\\w+',
  K: '',
  M: '(\\w+)',
  S: '(\\d\\d|\\d)',
  U: '(.+)',
  W: '(\\d\\d|\\d)',
  Y: '(\\d{4})',
  Z: '(.+)',
  d: '(\\d\\d|\\d)',
  h: '(\\d\\d|\\d)',
  i: '(\\d\\d|\\d)',
  j: '(\\d\\d|\\d)',
  l: '(\\w+)',
  m: '(\\d\\d|\\d)',
  n: '(\\d\\d|\\d)',
  s: '(\\d\\d|\\d)',
  u: '(.+)',
  w: '(\\d\\d|\\d)',
  y: '(\\d{2})'
};
var formats = {
  // get the date in UTC
  Z: function Z(date) {
    return date.toISOString();
  },
  // weekday name, short, e.g. Thu
  D: function D(date, locale) {
    return locale.weekdays.shorthand[formats.w(date, locale)];
  },
  // full month name e.g. January
  F: function F(date, locale) {
    return monthToStr(formats.n(date, locale) - 1, false, locale);
  },
  // padded hour 1-12
  G: function G(date, locale) {
    return pad(formats.h(date, locale));
  },
  // hours with leading zero e.g. 03
  H: function H(date) {
    return pad(date.getHours());
  },
  // day (1-30) with ordinal suffix e.g. 1st, 2nd
  J: function J(date, locale) {
    return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();
  },
  // AM/PM
  K: function K(date, locale) {
    return locale.amPM[utils_int(date.getHours() > 11)];
  },
  // shorthand month e.g. Jan, Sep, Oct, etc
  M: function M(date, locale) {
    return monthToStr(date.getMonth(), true, locale);
  },
  // seconds 00-59
  S: function S(date) {
    return pad(date.getSeconds());
  },
  // unix timestamp
  U: function U(date) {
    return date.getTime() / 1000;
  },
  W: function W(givenDate) {
    // return options.getWeek(date);
    var date = new Date(givenDate.getTime());
    date.setHours(0, 0, 0, 0); // Thursday in current week decides the year.

    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7); // January 4 is always in week 1.

    var week1 = new Date(date.getFullYear(), 0, 4); // Adjust to Thursday in week 1 and count number of weeks from date to week1.

    return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);
  },
  // full year e.g. 2016, padded (0001-9999)
  Y: function Y(date) {
    return pad(date.getFullYear(), 4);
  },
  // day in month, padded (01-30)
  d: function d(date) {
    return pad(date.getDate());
  },
  // hour from 1-12 (am/pm)
  h: function h(date) {
    return date.getHours() % 12 ? date.getHours() % 12 : 12;
  },
  // minutes, padded with leading zero e.g. 09
  i: function i(date) {
    return pad(date.getMinutes());
  },
  // day in month (1-30)
  j: function j(date) {
    return date.getDate();
  },
  // weekday name, full, e.g. Thursday
  l: function l(date, locale) {
    return locale.weekdays.longhand[date.getDay()];
  },
  // padded month number (01-12)
  m: function m(date) {
    return pad(date.getMonth() + 1);
  },
  // the month number (1-12)
  n: function n(date) {
    return date.getMonth() + 1;
  },
  // seconds 0-59
  s: function s(date) {
    return date.getSeconds();
  },
  // Unix Milliseconds
  u: function u(date) {
    return date.getTime();
  },
  // number of the day of the week
  w: function w(date) {
    return date.getDay();
  },
  // last two digits of year e.g. 16 for 2016
  y: function y(date) {
    return String(date.getFullYear()).substring(2);
  }
};
// CONCATENATED MODULE: ./src/utils/dates.ts

















var dates_formatDate = function formatDate(dateObj, format, customLocale) {
  if (!dateObj) {
    return '';
  }

  var locale = customLocale || English;
  return format.split('').map(function (char, i, arr) {
    if (formats[char] && arr[i - 1] !== '\\') {
      return formats[char](dateObj, locale);
    }

    if (char !== '\\') {
      return char;
    }

    return '';
  }).join('');
};
var dates_parseDate = function parseDate(date, format, timeless, customLocale) {
  if (format === void 0) {
    format = 'Y-m-d H:i:S';
  }

  if (date !== 0 && !date) {
    return undefined;
  }

  var locale = customLocale || English;

  var localeTokenRegex = Object(tslib_es6["a" /* __assign */])({}, tokenRegex);

  localeTokenRegex.K = "(" + locale.amPM[0] + "|" + locale.amPM[1] + "|" + locale.amPM[0].toLowerCase() + "|" + locale.amPM[1].toLowerCase() + ")";
  var parsedDate;
  var dateOrig = date;

  if (date instanceof Date) {
    parsedDate = new Date(date.getTime());
  } else if (typeof date !== 'string' && date.toFixed !== undefined // timestamp
  ) {
      // create a copy
      parsedDate = new Date(date);
    } else if (typeof date === 'string') {
    // if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {
    //   const defaultDateFormat =
    //     flatpickr.defaultConfig.dateFormat || defaultOptions.dateFormat;
    //   formats.dateFormat =
    //     userConfig.noCalendar || timeMode
    //       ? "H:i" + (userConfig.enableSeconds ? ":S" : "")
    //       : defaultDateFormat + " H:i" + (userConfig.enableSeconds ? ":S" : "");
    // }
    var datestr = String(date).trim();

    if (datestr === 'today') {
      parsedDate = new Date(); // eslint-disable-next-line no-param-reassign

      timeless = true;
    } else if (/Z$/.test(datestr) || /GMT$/.test(datestr) // datestrings w/ timezone
    ) {
        parsedDate = new Date(date);
      } else {
      parsedDate = new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0); // parsedDate = !config || !config.noCalendar
      //   ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)
      //   : (new Date(new Date().setHours(0, 0, 0, 0)) as Date);

      var matched = void 0;
      var ops = [];

      for (var i = 0, matchIndex = 0, regexStr = ''; i < format.length; i += 1) {
        var token2 = format[i];
        var isBackSlash = token2 === '\\';
        var escaped = format[i - 1] === '\\' || isBackSlash;

        if (localeTokenRegex[token2] && !escaped) {
          regexStr += localeTokenRegex[token2];
          var match = new RegExp(regexStr).exec(date);

          if (match) {
            matched = true;
            ops[token2 !== 'Y' ? 'push' : 'unshift']({
              fn: revFormat[token2],
              val: match[matchIndex += 1]
            });
          }
        } else if (!isBackSlash) {
          regexStr += '.'; // don't really care
        } // eslint-disable-next-line no-loop-func


        ops.forEach(function (op) {
          var fn = op.fn;
          var val = op.val;
          parsedDate = fn(parsedDate, String(val), locale) || parsedDate;
        });
      }

      parsedDate = matched ? parsedDate : undefined;
    }
  }
  /* istanbul ignore next */
  // eslint-disable-next-line no-restricted-globals


  if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {
    throw new Error("Invalid date provided: " + dateOrig);
  }

  if (timeless === true) {
    parsedDate.setHours(0, 0, 0, 0);
  }

  return parsedDate;
};
/**
 * Compute the difference in dates, measured in ms
 */

function compareDates(date1, date2, timeless) {
  if (timeless === void 0) {
    timeless = true;
  }

  if (timeless !== false) {
    return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);
  }

  return date1.getTime() - date2.getTime();
}
var dates_extractLocaleFromProps = function extractLocaleFromProps(localeName, locales, defaultLocale) {
  var availableLocales = Object.keys(locales);
  var find = availableLocales.find(function (l) {
    return l === localeName;
  });
  var locale = find && locales[find] ? locales[find] : defaultLocale;
  return merge_default()(cloneDeep_default()(English), locale);
};
var buildDateParser = function buildDateParser(locale, customDateParser) {
  return function (date, format, timeless) {
    if (format === void 0) {
      format = 'Y-m-d H:i:S';
    }

    if (customDateParser) {
      return customDateParser(date, format, timeless, locale);
    }

    return dates_parseDate(date, format, timeless, locale);
  };
};
var buildDateFormatter = function buildDateFormatter(locale, customDateFormatter) {
  return function (date, format) {
    if (format === void 0) {
      format = 'Y-m-d H:i:S';
    }

    if (customDateFormatter) {
      return customDateFormatter(date, format, locale);
    }

    return dates_formatDate(date, format, locale);
  };
};
/**
 * it two dates are in the same month
 */

function isSameMonth(date1, date2) {
  return !!date1 && !!date2 && date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth();
}
/**
 * it two dates are in the same day
 */

function isSameDay(date1, date2) {
  return isSameMonth(date1, date2) && (date1 === null || date1 === void 0 ? void 0 : date1.getDate()) === (date2 === null || date2 === void 0 ? void 0 : date2.getDate());
}
function dayIsPartOfTheConditions(day, condition, dateParser, dateFormat) {
  if (!day) {
    return false;
  }

  if (typeof condition === 'function') {
    return condition(day);
  }

  if (typeof condition === 'string' || condition instanceof String) {
    var disabledDate = dateParser(condition, dateFormat);
    return isSameDay(disabledDate, day);
  }

  if (condition instanceof Date) {
    return isSameDay(condition, day);
  }

  if (Array.isArray(condition)) {
    return condition.some(function (c) {
      return dayIsPartOfTheConditions(day, c, dateParser, dateFormat);
    });
  }

  return false;
}
function dateIsOutOfRange(date, min, max, dateParser, dateFormat) {
  if (dateParser === void 0) {
    dateParser = null;
  }

  if (dateFormat === void 0) {
    dateFormat = null;
  }

  var minDate;

  if (typeof min === 'string' || min instanceof String) {
    if (!dateParser) {
      throw new Error('strings needs a date parser');
    }

    if (!dateFormat) {
      throw new Error('strings needs a date format');
    }

    minDate = dateParser(min, dateFormat);
  } else {
    minDate = min;
  }

  var maxDate;

  if (typeof max === 'string' || max instanceof String) {
    if (!dateParser) {
      throw new Error('strings needs a date parser');
    }

    if (!dateFormat) {
      throw new Error('strings needs a date format');
    }

    maxDate = dateParser(max, dateFormat);
  } else {
    maxDate = max;
  }

  var time = date.getTime();

  if (minDate && maxDate) {
    return time < minDate.getTime() || time > maxDate.getTime();
  }

  if (minDate) {
    return time < minDate.getTime();
  }

  if (maxDate) {
    return time > maxDate.getTime();
  }

  return false;
}
function addDays(date, amount) {
  if (amount === void 0) {
    amount = 1;
  }

  var newDate = new Date(date.valueOf());
  newDate.setDate(newDate.getDate() + amount);
  return newDate;
}
function addMonths(date, amount) {
  if (amount === void 0) {
    amount = 1;
  }

  var newDate = new Date(date.valueOf());
  newDate.setMonth(date.getMonth() + amount); // Means the current day has less days so the extra month is
  // in the following month

  if (newDate.getDate() !== date.getDate()) {
    // Assign the last day of previous month
    newDate = new Date(newDate.getFullYear(), newDate.getMonth(), 0);
  }

  return newDate;
}
function addYears(date, amount) {
  if (amount === void 0) {
    amount = 1;
  }

  var newDate = new Date(date.valueOf());
  newDate.setFullYear(date.getFullYear() + amount); // Means the current day has less days so the extra month is
  // in the following month

  if (newDate.getDate() !== date.getDate()) {
    // Assign the last day of previous month
    newDate = new Date(newDate.getFullYear(), newDate.getMonth(), 0);
  }

  return newDate;
}
function dates_lastDayOfMonth(date) {
  return new Date(date.getFullYear(), date.getMonth() + 1, 0);
}
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerNavigator.ts






var getYearsRange = function getYearsRange(date, yearsPerView) {
  var currentYear = date.getFullYear();
  var from = currentYear - Math.floor(currentYear % yearsPerView);
  var to = from + yearsPerView - 1;
  return [from, to];
};
var CalendarView;

(function (CalendarView) {
  CalendarView["Day"] = "day";
  CalendarView["Month"] = "month";
  CalendarView["Year"] = "year";
})(CalendarView || (CalendarView = {}));

var TDatepickerNavigator = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerNavigator',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    value: {
      type: Date,
      default: null
    },
    showSelector: {
      type: Boolean,
      default: true
    },
    currentView: {
      type: String,
      default: CalendarView.Day,
      validator: function validator(value) {
        return [CalendarView.Day, CalendarView.Month, CalendarView.Year].includes(value);
      }
    },
    parse: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    },
    dateFormat: {
      type: String,
      required: true
    },
    yearsPerView: {
      type: Number,
      required: true
    },
    maxDate: {
      type: [Date, String],
      default: undefined
    },
    minDate: {
      type: [Date, String],
      default: undefined
    },
    locale: {
      type: Object,
      required: true
    }
  },
  data: function data() {
    return {
      localValue: new Date(this.value.valueOf())
    };
  },
  computed: {
    isDayView: function isDayView() {
      return this.currentView === CalendarView.Day;
    },
    isYearView: function isYearView() {
      return this.currentView === CalendarView.Year;
    },
    isMonthView: function isMonthView() {
      return this.currentView === CalendarView.Month;
    },
    nextDate: function nextDate() {
      return this.getNextDate();
    },
    prevDate: function prevDate() {
      return this.getPrevDate();
    },
    prevButtonIsDisabled: function prevButtonIsDisabled() {
      return !this.prevDate;
    },
    nextButtonIsDisabled: function nextButtonIsDisabled() {
      return !this.nextDate;
    },
    nextButtonAriaLabel: function nextButtonAriaLabel() {
      if (this.isDayView) {
        return "Next " + this.locale.yearAriaLabel;
      }

      return "Next " + this.locale.yearAriaLabel;
    },
    prevButtonAriaLabel: function prevButtonAriaLabel() {
      if (this.isDayView) {
        return "Prev " + this.locale.yearAriaLabel;
      }

      return "Prev " + this.locale.yearAriaLabel;
    }
  },
  watch: {
    value: function value(_value) {
      this.localValue = new Date(_value.valueOf());
    }
  },
  methods: {
    getNextDate: function getNextDate() {
      var nextDate;

      if (this.currentView === CalendarView.Day) {
        nextDate = this.getNextMonth();
      } else if (this.currentView === CalendarView.Month) {
        nextDate = this.getNextYear();
      } else if (this.currentView === CalendarView.Year) {
        nextDate = this.getNextYearGroup();
      }

      return nextDate;
    },
    getPrevDate: function getPrevDate() {
      var prevDate;

      if (this.currentView === CalendarView.Day) {
        prevDate = this.getPrevMonth();
      } else if (this.currentView === CalendarView.Month) {
        prevDate = this.getPrevYear();
      } else if (this.currentView === CalendarView.Year) {
        prevDate = this.getPrevYearGroup();
      }

      return prevDate;
    },
    inputHandler: function inputHandler(newDate) {
      this.$emit('input', newDate);
    },
    clickHandler: function clickHandler() {
      if (this.currentView === CalendarView.Day) {
        this.$emit('updateView', CalendarView.Month);
      } else if (this.currentView === CalendarView.Month) {
        this.$emit('updateView', CalendarView.Year);
      } else if (this.currentView === CalendarView.Year) {
        this.$emit('updateView', CalendarView.Day);
      }
    },
    next: function next() {
      if (this.nextDate) {
        this.inputHandler(this.nextDate);
      }
    },
    prev: function prev() {
      if (this.prevDate) {
        this.inputHandler(this.prevDate);
      }
    },
    getPrevMonth: function getPrevMonth() {
      var prevMonth = addMonths(this.localValue, -1);
      var dateParser = this.parse;

      if (!dateIsOutOfRange(prevMonth, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
        return prevMonth;
      }

      var day = prevMonth.getDate();
      var dateToTry = prevMonth;
      var validDate;
      day = prevMonth.getDate();
      var lastDay = dates_lastDayOfMonth(prevMonth).getDate();

      do {
        dateToTry = addDays(dateToTry, 1);
        day += 1;

        if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
          validDate = dateToTry;
        }
      } while (day <= lastDay && !validDate);

      if (!validDate) {
        day = prevMonth.getDate();

        do {
          dateToTry = addDays(dateToTry, -1);
          day -= 1;

          if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
            validDate = dateToTry;
          }
        } while (day >= 1 && !validDate);
      }

      return validDate;
    },
    getNextMonth: function getNextMonth() {
      var nextMonth = addMonths(this.localValue, 1);
      var dateParser = this.parse;

      if (!dateIsOutOfRange(nextMonth, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
        return nextMonth;
      }

      var day = nextMonth.getDate();
      var dateToTry = nextMonth;
      var validDate;

      do {
        dateToTry = addDays(dateToTry, -1);
        day -= 1;

        if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
          validDate = dateToTry;
        }
      } while (day >= 1 && !validDate);

      if (!validDate) {
        day = nextMonth.getDate();
        var lastDay = dates_lastDayOfMonth(nextMonth).getDate();

        do {
          dateToTry = addDays(dateToTry, 1);
          day += 1;

          if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
            validDate = dateToTry;
          }
        } while (day <= lastDay && !validDate);
      }

      return validDate;
    },
    getPrevYear: function getPrevYear() {
      var prevYear = addYears(this.localValue, -1);
      var dateParser = this.parse;

      if (!dateIsOutOfRange(prevYear, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
        return prevYear;
      }

      var validDate;
      var dateToTry = prevYear;
      var year = prevYear.getFullYear();

      do {
        dateToTry = addDays(dateToTry, 1);

        if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
          validDate = dateToTry;
        }
      } while (dateToTry.getFullYear() === year && !validDate);

      if (!validDate) {
        do {
          dateToTry = addDays(dateToTry, -1);

          if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
            validDate = dateToTry;
          }
        } while (dateToTry.getFullYear() === year && !validDate);
      }

      return validDate;
    },
    getNextYear: function getNextYear() {
      var nextYear = addYears(this.localValue, 1);
      var dateParser = this.parse;

      if (!dateIsOutOfRange(nextYear, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
        return nextYear;
      }

      var validDate;
      var dateToTry = nextYear;
      var year = nextYear.getFullYear();

      do {
        dateToTry = addDays(dateToTry, -1);

        if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
          validDate = dateToTry;
        }
      } while (dateToTry.getFullYear() === year && !validDate);

      if (!validDate) {
        do {
          dateToTry = addDays(dateToTry, 1);

          if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
            validDate = dateToTry;
          }
        } while (dateToTry.getFullYear() === year && !validDate);
      }

      return validDate;
    },
    getPrevYearGroup: function getPrevYearGroup() {
      var prevYear = addYears(this.localValue, -this.yearsPerView);
      var dateParser = this.parse;

      if (!dateIsOutOfRange(prevYear, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
        return prevYear;
      }

      var validDate;
      var dateToTry = prevYear;
      var year = prevYear.getFullYear();

      do {
        dateToTry = addDays(dateToTry, this.yearsPerView);

        if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
          validDate = dateToTry;
        }
      } while (dateToTry.getFullYear() === year && !validDate);

      if (!validDate) {
        do {
          dateToTry = addDays(dateToTry, -this.yearsPerView);

          if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
            validDate = dateToTry;
          }
        } while (dateToTry.getFullYear() === year && !validDate);
      }

      return validDate;
    },
    getNextYearGroup: function getNextYearGroup() {
      var nextYear = addYears(this.localValue, this.yearsPerView);
      var dateParser = this.parse;

      if (!dateIsOutOfRange(nextYear, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
        return nextYear;
      }

      var validDate;
      var dateToTry = nextYear;
      var year = nextYear.getFullYear();

      do {
        dateToTry = addDays(dateToTry, -this.yearsPerView);

        if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
          validDate = dateToTry;
        }
      } while (dateToTry.getFullYear() === year && !validDate);

      if (!validDate) {
        do {
          dateToTry = addDays(dateToTry, this.yearsPerView);

          if (!dateIsOutOfRange(dateToTry, this.minDate, this.maxDate, dateParser, this.dateFormat)) {
            validDate = dateToTry;
          }
        } while (dateToTry.getFullYear() === year && !validDate);
      }

      return validDate;
    }
  },
  render: function render(createElement) {
    var subElements = [];

    if (this.showSelector) {
      var buttonElements = [];

      if (this.currentView === CalendarView.Day) {
        buttonElements.push(createElement('span', {
          class: this.getElementCssClass('navigatorViewButtonMonthName')
        }, this.formatNative(this.localValue, 'F')));
      }

      if (this.currentView === CalendarView.Month || this.currentView === CalendarView.Day) {
        buttonElements.push(createElement('span', {
          class: this.getElementCssClass('navigatorViewButtonYear')
        }, this.formatNative(this.localValue, 'Y')));
      }

      if (this.currentView !== CalendarView.Year) {
        buttonElements.push(createElement('svg', {
          attrs: {
            fill: 'currentColor',
            xmlns: 'http://www.w3.org/2000/svg',
            viewBox: '0 0 20 20'
          },
          class: this.getElementCssClass('navigatorViewButtonIcon')
        }, [createElement('polygon', {
          attrs: {
            points: '12.9497475 10.7071068 13.6568542 10 8 4.34314575 6.58578644 5.75735931 10.8284271 10 6.58578644 14.2426407 8 15.6568542 12.9497475 10.7071068'
          }
        })]));
      } else {
        buttonElements.push(createElement('svg', {
          attrs: {
            fill: 'currentColor',
            xmlns: 'http://www.w3.org/2000/svg',
            viewBox: '0 0 20 20'
          },
          class: this.getElementCssClass('navigatorViewButtonBackIcon')
        }, [createElement('polygon', {
          attrs: {
            points: '7.05025253 9.29289322 6.34314575 10 12 15.6568542 13.4142136 14.2426407 9.17157288 10 13.4142136 5.75735931 12 4.34314575'
          }
        })]));
        buttonElements.push(createElement('span', {
          class: this.getElementCssClass('navigatorViewButtonYearRange')
        }, getYearsRange(this.localValue, this.yearsPerView).join(' - ')));
      }

      subElements.push(createElement('button', {
        attrs: {
          type: 'button',
          class: this.getElementCssClass('navigatorViewButton'),
          tabindex: -1
        },
        on: {
          click: this.clickHandler
        }
      }, buttonElements));
    } else {
      subElements.push(createElement('span', {
        attrs: {
          class: this.getElementCssClass('navigatorLabel')
        }
      }, [createElement('span', {
        class: this.getElementCssClass('navigatorLabelMonth')
      }, this.formatNative(this.localValue, 'F')), createElement('span', {
        class: this.getElementCssClass('navigatorLabelYear')
      }, this.formatNative(this.localValue, 'Y'))]));
    }

    if (this.showSelector) {
      subElements.push(createElement('button', {
        ref: 'prev',
        attrs: {
          'aria-label': this.prevButtonAriaLabel,
          type: 'button',
          class: this.getElementCssClass('navigatorPrevButton'),
          tabindex: -1,
          disabled: this.prevButtonIsDisabled ? true : undefined
        },
        on: {
          click: this.prev
        }
      }, [createElement('svg', {
        attrs: {
          fill: 'none',
          viewBox: '0 0 24 24',
          stroke: 'currentColor'
        },
        class: this.getElementCssClass('navigatorPrevButtonIcon')
      }, [createElement('path', {
        attrs: {
          'stroke-linecap': 'round',
          'stroke-linejoin': 'round',
          'stroke-width': 2,
          d: 'M15 19l-7-7 7-7'
        }
      })])]));
      subElements.push(createElement('button', {
        ref: 'next',
        attrs: {
          'aria-label': this.nextButtonAriaLabel,
          type: 'button',
          class: this.getElementCssClass('navigatorNextButton'),
          tabindex: -1,
          disabled: this.nextButtonIsDisabled ? true : undefined
        },
        on: {
          click: this.next
        }
      }, [createElement('svg', {
        attrs: {
          fill: 'none',
          viewBox: '0 0 24 24',
          stroke: 'currentColor'
        },
        class: this.getElementCssClass('navigatorNextButtonIcon')
      }, [createElement('path', {
        attrs: {
          'stroke-linecap': 'round',
          'stroke-linejoin': 'round',
          'stroke-width': 2,
          d: 'M9 5l7 7-7 7'
        }
      })])]));
    }

    return createElement('div', {
      class: this.getElementCssClass('navigator')
    }, subElements);
  }
});
/* harmony default export */ var TDatepicker_TDatepickerNavigator = (TDatepickerNavigator);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerTrigger.ts





var TDatepickerTrigger = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerTrigger',
  props: {
    id: {
      type: String,
      default: undefined
    },
    name: {
      type: String,
      default: undefined
    },
    disabled: {
      type: Boolean,
      default: undefined
    },
    readonly: {
      type: Boolean,
      default: undefined
    },
    autofocus: {
      type: Boolean,
      default: undefined
    },
    required: {
      type: Boolean,
      default: undefined
    },
    tabindex: {
      type: [String, Number],
      default: undefined
    },
    inputName: {
      type: String,
      default: undefined
    },
    placeholder: {
      type: String,
      default: undefined
    },
    show: {
      type: Function,
      default: undefined
    },
    hideIfFocusOutside: {
      type: Function,
      default: undefined
    },
    conjunction: {
      type: String,
      required: true
    },
    multiple: {
      type: Boolean,
      required: true
    },
    range: {
      type: Boolean,
      required: true
    },
    clearable: {
      type: Boolean,
      required: true
    },
    locale: {
      type: Object,
      required: true
    },
    userFormatedDate: {
      type: [String, Array],
      required: true
    },
    formatedDate: {
      type: [String, Array],
      required: true
    },
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    }
  },
  computed: {
    hasValue: function hasValue() {
      if (Array.isArray(this.value)) {
        return this.value.length > 0;
      }

      return !!this.value;
    }
  },
  methods: {
    clearButtonClickHandler: function clearButtonClickHandler(e) {
      this.$emit('clear', e);
    }
  },
  render: function render(createElement) {
    var _this = this;

    var formattedDate = this.formatedDate;
    var formText = '';

    if (Array.isArray(this.userFormatedDate)) {
      var conjunction = this.range ? this.locale.rangeSeparator : this.conjunction;
      formText = this.userFormatedDate.join(conjunction);
    } else {
      formText = this.userFormatedDate;
    }

    var subElements = [createElement('input', {
      ref: 'input',
      class: this.getElementCssClass('input'),
      attrs: {
        readonly: true,
        id: this.id,
        name: this.name,
        disabled: this.disabled,
        autocomplete: 'off',
        autofocus: this.autofocus,
        type: 'text',
        required: this.required,
        placeholder: this.placeholder,
        tabindex: this.tabindex,
        value: formText
      },
      on: {
        click: function click(e) {
          if (_this.show) {
            _this.show();
          }

          _this.$emit('click', e);
        },
        input: function input(e) {
          _this.$emit('input', e);
        },
        keydown: function keydown(e) {
          _this.$emit('keydown', e);
        },
        blur: function blur(e) {
          if (_this.hideIfFocusOutside) {
            _this.hideIfFocusOutside(e);
          }

          _this.$emit('blur', e);
        },
        focus: function focus(e) {
          if (_this.show) {
            _this.show();
          }

          _this.$emit('focus', e);
        }
      }
    })];

    if (this.clearable && this.hasValue) {
      var clearButtonSlot = this.$scopedSlots.clearButton ? this.$scopedSlots.clearButton({
        className: this.getElementCssClass('clearButtonIcon'),
        formatedDate: this.formatedDate,
        userFormatedDate: this.userFormatedDate,
        value: this.value,
        activeDate: this.activeDate
      }) : [createElement('svg', {
        attrs: {
          fill: 'currentColor',
          xmlns: 'http://www.w3.org/2000/svg',
          viewBox: '0 0 20 20'
        },
        class: this.getElementCssClass('clearButtonIcon')
      }, [createElement('polygon', {
        attrs: {
          points: '10 8.58578644 2.92893219 1.51471863 1.51471863 2.92893219 8.58578644 10 1.51471863 17.0710678 2.92893219 18.4852814 10 11.4142136 17.0710678 18.4852814 18.4852814 17.0710678 11.4142136 10 18.4852814 2.92893219 17.0710678 1.51471863 10 8.58578644'
        }
      })])];
      subElements.push(createElement('button', {
        ref: 'clearButton',
        class: this.getElementCssClass('clearButton'),
        attrs: {
          type: 'button',
          tabindex: -1
        },
        on: {
          click: this.clearButtonClickHandler
        }
      }, clearButtonSlot));
    }

    if (this.multiple) {
      var dates = Array.isArray(formattedDate) ? formattedDate : [formattedDate];
      var hiddenInputs = dates.map(function (date) {
        return createElement('input', {
          attrs: {
            type: 'hidden',
            value: date,
            name: _this.name,
            disabled: _this.disabled,
            readonly: _this.readonly,
            required: _this.required
          }
        });
      });
      subElements.push.apply(subElements, hiddenInputs);
    } else {
      subElements.push(createElement('input', {
        attrs: {
          type: 'hidden',
          value: Array.isArray(formattedDate) ? formattedDate.join(this.conjunction) : formattedDate,
          name: this.name,
          disabled: this.disabled,
          readonly: this.readonly,
          required: this.required
        }
      }));
    }

    return createElement('div', {
      class: this.getElementCssClass('inputWrapper')
    }, subElements);
  }
});
/* harmony default export */ var TDatepicker_TDatepickerTrigger = (TDatepickerTrigger);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewCalendarDaysDay.ts



var TDatepickerViewsViewCalendarDaysDay = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewCalendarDaysDay',
  props: {
    day: {
      type: Date,
      required: true
    },
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    activeMonth: {
      type: Date,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    parse: {
      type: Function,
      required: true
    },
    format: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    },
    dateFormat: {
      type: String,
      required: true
    },
    userFormat: {
      type: String,
      required: true
    },
    showDaysForOtherMonth: {
      type: Boolean,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    disabledDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    highlightDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    maxDate: {
      type: [Date, String],
      default: undefined
    },
    minDate: {
      type: [Date, String],
      default: undefined
    },
    range: {
      type: Boolean,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf()),
      localActiveMonth: new Date(this.activeMonth.valueOf())
    };
  },
  computed: {
    isSelected: function isSelected() {
      var d1 = this.getDay();
      var d2 = this.value;

      if (d2 instanceof Date) {
        return isSameDay(d1, d2);
      }

      if (Array.isArray(d2)) {
        return d2.some(function (d) {
          return isSameDay(d, d1);
        });
      }

      return false;
    },
    isActive: function isActive() {
      var d1 = this.getDay();
      var d2 = this.localActiveDate;
      return isSameDay(d1, d2);
    },
    isToday: function isToday() {
      var d1 = this.getDay();
      var d2 = new Date();
      return isSameDay(d1, d2);
    },
    isDisabled: function isDisabled() {
      var day = this.getDay();
      var disabledDates = this.disabledDates;
      var dateParser = this.parse;
      return dateIsOutOfRange(day, this.minDate, this.maxDate, dateParser, this.dateFormat) || dayIsPartOfTheConditions(day, disabledDates, dateParser, this.dateFormat);
    },
    isHighlighted: function isHighlighted() {
      var day = this.getDay();
      var highlightDates = this.highlightDates;
      var dateParser = this.parse;
      return dayIsPartOfTheConditions(day, highlightDates, dateParser, this.dateFormat);
    },
    isForAnotherMonth: function isForAnotherMonth() {
      var d1 = this.localActiveMonth;
      var d2 = this.getDay();
      return d1.getFullYear() !== d2.getFullYear() || d1.getMonth() !== d2.getMonth();
    },
    isInRange: function isInRange() {
      if (!this.range || !Array.isArray(this.value)) {
        return false;
      }

      var _a = this.value,
          from = _a[0],
          to = _a[1];

      if (from && to) {
        return !dateIsOutOfRange(this.getDay(), addDays(from, 1), addDays(to, -1));
      }

      return false;
    },
    isFirstDayOfRange: function isFirstDayOfRange() {
      if (!this.range || !Array.isArray(this.value)) {
        return false;
      }

      var from = this.value[0];
      return from && isSameDay(from, this.getDay());
    },
    isLastDayOfRange: function isLastDayOfRange() {
      if (!this.range || !Array.isArray(this.value)) {
        return false;
      }

      var _a = this.value,
          to = _a[1];
      return to && isSameDay(to, this.getDay());
    },
    dayFormatted: function dayFormatted() {
      return this.formatNative(this.getDay(), 'j');
    },
    ariaLabel: function ariaLabel() {
      return this.format(this.getDay(), this.userFormat);
    },
    dateFormatted: function dateFormatted() {
      return this.format(this.getDay(), 'Y-m-d');
    }
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    },
    activeMonth: function activeMonth(_activeMonth) {
      this.localActiveMonth = new Date(_activeMonth.valueOf());
    }
  },
  methods: {
    getClass: function getClass() {
      if (this.isForAnotherMonth) {
        return this.getElementCssClass('otherMonthDay');
      }

      if (this.isFirstDayOfRange) {
        return this.getElementCssClass('inRangeFirstDay');
      }

      if (this.isLastDayOfRange) {
        return this.getElementCssClass('inRangeLastDay');
      }

      if (this.isInRange) {
        return this.getElementCssClass('inRangeDay');
      }

      if (this.isSelected) {
        return this.getElementCssClass('selectedDay');
      }

      if (this.isActive && this.showActiveDate) {
        return this.getElementCssClass('activeDay');
      }

      if (this.isHighlighted) {
        return this.getElementCssClass('highlightedDay');
      }

      if (this.isToday) {
        return this.getElementCssClass('today');
      }

      return this.getElementCssClass('day');
    },
    getDay: function getDay() {
      return this.day;
    }
  },
  render: function render(createElement) {
    var _this = this;

    if (this.isForAnotherMonth && !this.showDaysForOtherMonth) {
      return createElement('span', {
        class: this.getElementCssClass('emptyDay')
      }, '');
    }

    var daySlot = this.$scopedSlots.day ? this.$scopedSlots.day({
      dayFormatted: this.dayFormatted,
      isForAnotherMonth: this.isForAnotherMonth,
      isFirstDayOfRange: this.isFirstDayOfRange,
      isLastDayOfRange: this.isLastDayOfRange,
      isInRange: this.isInRange,
      isSelected: this.isSelected,
      isActive: this.isActive,
      isHighlighted: this.isHighlighted,
      isToday: this.isToday,
      day: this.getDay(),
      activeDate: this.activeDate,
      value: this.value
    }) : this.dayFormatted;
    return createElement('button', {
      class: this.getClass(),
      attrs: {
        'aria-label': this.ariaLabel,
        'aria-current': this.isToday ? 'date' : undefined,
        'data-date': this.dateFormatted,
        type: 'button',
        tabindex: -1,
        disabled: this.isDisabled ? true : undefined
      },
      on: {
        click: function click(e) {
          return _this.$emit('click', e);
        }
      }
    }, daySlot);
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewCalendarDaysDay = (TDatepickerViewsViewCalendarDaysDay);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewCalendarDays.ts








var TDatepickerViewsViewCalendarDays = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewCalendarDays',
  props: {
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    activeMonth: {
      type: Date,
      required: true
    },
    weekStart: {
      type: Number,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    parse: {
      type: Function,
      required: true
    },
    format: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    },
    userFormat: {
      type: String,
      required: true
    },
    dateFormat: {
      type: String,
      required: true
    },
    showDaysForOtherMonth: {
      type: Boolean,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    disabledDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    highlightDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    maxDate: {
      type: [Date, String],
      default: undefined
    },
    minDate: {
      type: [Date, String],
      default: undefined
    },
    range: {
      type: Boolean,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf()),
      localActiveMonth: new Date(this.activeMonth.valueOf())
    };
  },
  computed: {
    firstDayOfMonth: function firstDayOfMonth() {
      return new Date(this.localActiveMonth.getFullYear(), this.localActiveMonth.getMonth(), 1);
    },
    lastDayOfMonth: function lastDayOfMonth() {
      return dates_lastDayOfMonth(this.localActiveMonth);
    },
    firstDayOfPrevMonth: function firstDayOfPrevMonth() {
      return new Date(this.localActiveMonth.getFullYear(), this.localActiveMonth.getMonth() - 1, 1);
    },
    lastDayOfPrevMonth: function lastDayOfPrevMonth() {
      return new Date(this.localActiveMonth.getFullYear(), this.localActiveMonth.getMonth(), 0);
    },
    firstDayOfNextMonth: function firstDayOfNextMonth() {
      return new Date(this.localActiveMonth.getFullYear(), this.localActiveMonth.getMonth() + 1, 1);
    },
    monthDays: function monthDays() {
      var _this = this;

      return Array.from({
        length: this.lastDayOfMonth.getDate()
      }, function (_x, i) {
        return i + 1;
      }).map(function (day) {
        return _this.getDay(_this.localActiveMonth, day);
      });
    },
    prevMonthDays: function prevMonthDays() {
      var _this = this;

      var prevMonthTotalDays = this.firstDayOfMonth.getDay() - this.weekStart;

      if (prevMonthTotalDays < 0) {
        prevMonthTotalDays = 7 + prevMonthTotalDays;
      }

      return Array.from({
        length: prevMonthTotalDays
      }, function (_x, i) {
        return _this.lastDayOfPrevMonth.getDate() - i;
      }).reverse().map(function (day) {
        return _this.getDay(_this.firstDayOfPrevMonth, day);
      });
    },
    nextMonthDays: function nextMonthDays() {
      var _this = this;

      var nextMonthTotalDays = 7 - this.monthDays.concat(this.prevMonthDays).length % 7;

      if (nextMonthTotalDays === 7) {
        return [];
      }

      return Array.from({
        length: nextMonthTotalDays
      }, function (_x, i) {
        return i + 1;
      }).map(function (day) {
        return _this.getDay(_this.firstDayOfNextMonth, day);
      });
    },
    days: function days() {
      var prevMonthDays = this.prevMonthDays;
      var monthDays = this.monthDays;
      var nextMonthDays = this.nextMonthDays;
      return prevMonthDays.concat(monthDays, nextMonthDays);
    }
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    },
    activeMonth: function activeMonth(_activeMonth) {
      this.localActiveMonth = new Date(_activeMonth.valueOf());
    }
  },
  methods: {
    getDay: function getDay(date, day) {
      return new Date(date.getFullYear(), date.getMonth(), day);
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('div', {
      class: this.getElementCssClass('calendarDaysWrapper')
    }, this.days.map(function (day) {
      return createElement('span', {
        class: _this.getElementCssClass('calendarDaysDayWrapper')
      }, [createElement(TDatepicker_TDatepickerViewsViewCalendarDaysDay, {
        props: {
          day: day,
          value: _this.value,
          activeDate: _this.localActiveDate,
          activeMonth: _this.localActiveMonth,
          getElementCssClass: _this.getElementCssClass,
          parse: _this.parse,
          format: _this.format,
          formatNative: _this.formatNative,
          dateFormat: _this.dateFormat,
          userFormat: _this.userFormat,
          showDaysForOtherMonth: _this.showDaysForOtherMonth,
          showActiveDate: _this.showActiveDate,
          disabledDates: _this.disabledDates,
          highlightDates: _this.highlightDates,
          minDate: _this.minDate,
          maxDate: _this.maxDate,
          range: _this.range
        },
        scopedSlots: _this.$scopedSlots,
        on: {
          click: function click() {
            return _this.$emit('input', day);
          }
        }
      })]);
    }));
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewCalendarDays = (TDatepickerViewsViewCalendarDays);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewCalendarHeaders.ts





var TDatepickerViewsViewCalendarHeaders = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewCalendarHeaders',
  props: {
    weekStart: {
      type: Number,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    }
  },
  computed: {
    weekDays: function weekDays() {
      var _this = this;

      return Array.from({
        length: 7
      }, function (_x, i) {
        var weekDay = _this.weekStart + i;

        if (weekDay >= 7) {
          return weekDay - 7;
        }

        return weekDay;
      }).map(this.getWeekDayName);
    }
  },
  methods: {
    getWeekDayName: function getWeekDayName(weekDay) {
      var date = new Date();
      date.setDate((date.getDate() + (7 + weekDay - date.getDay())) % 7);
      return this.formatNative(date, 'D');
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('div', {
      class: this.getElementCssClass('calendarHeaderWrapper')
    }, this.weekDays.map(function (weekDayName) {
      return createElement('span', {
        class: _this.getElementCssClass('calendarHeaderWeekDay')
      }, weekDayName);
    }));
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewCalendarHeaders = (TDatepickerViewsViewCalendarHeaders);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewCalendar.ts




var TDatepickerViewsViewCalendar = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewCalendar',
  props: {
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    activeMonth: {
      type: Date,
      required: true
    },
    weekStart: {
      type: Number,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    parse: {
      type: Function,
      required: true
    },
    format: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    },
    dateFormat: {
      type: String,
      required: true
    },
    userFormat: {
      type: String,
      required: true
    },
    monthsPerView: {
      type: Number,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    disabledDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    highlightDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    maxDate: {
      type: [Date, String],
      default: undefined
    },
    minDate: {
      type: [Date, String],
      default: undefined
    },
    range: {
      type: Boolean,
      required: true
    },
    showDaysForOtherMonth: {
      type: Boolean,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf()),
      localActiveMonth: new Date(this.activeMonth.valueOf())
    };
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    },
    activeMonth: function activeMonth(_activeMonth) {
      this.localActiveMonth = new Date(_activeMonth.valueOf());
    }
  },
  methods: {
    inputHandler: function inputHandler(date) {
      this.$emit('input', date);
    }
  },
  render: function render(createElement) {
    return createElement('div', {
      class: this.getElementCssClass('calendarWrapper')
    }, [createElement(TDatepicker_TDatepickerViewsViewCalendarHeaders, {
      props: {
        weekStart: this.weekStart,
        getElementCssClass: this.getElementCssClass,
        formatNative: this.formatNative
      }
    }), createElement(TDatepicker_TDatepickerViewsViewCalendarDays, {
      ref: 'days',
      props: {
        value: this.value,
        activeDate: this.localActiveDate,
        activeMonth: this.localActiveMonth,
        weekStart: this.weekStart,
        getElementCssClass: this.getElementCssClass,
        parse: this.parse,
        format: this.format,
        formatNative: this.formatNative,
        userFormat: this.userFormat,
        dateFormat: this.dateFormat,
        showDaysForOtherMonth: this.monthsPerView > 1 ? false : this.showDaysForOtherMonth,
        showActiveDate: this.showActiveDate,
        disabledDates: this.disabledDates,
        highlightDates: this.highlightDates,
        minDate: this.minDate,
        maxDate: this.maxDate,
        range: this.range
      },
      scopedSlots: this.$scopedSlots,
      on: {
        input: this.inputHandler
      }
    })]);
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewCalendar = (TDatepickerViewsViewCalendar);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewMonthsMonth.ts



var TDatepickerViewsViewMonthsMonth = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewMonthsMonth',
  props: {
    month: {
      type: Date,
      required: true
    },
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    }
  },
  computed: {
    isSelected: function isSelected() {
      var d1 = this.getMonth();
      var d2 = this.value;

      if (d2 instanceof Date) {
        return isSameMonth(d1, d2);
      }

      if (Array.isArray(d2)) {
        return d2.some(function (d) {
          return isSameMonth(d, d1);
        });
      }

      return false;
    },
    isActive: function isActive() {
      var d1 = this.getMonth();
      var d2 = this.activeDate;
      return isSameMonth(d1, d2);
    },
    monthFormatted: function monthFormatted() {
      return this.formatNative(this.getMonth(), 'M');
    }
  },
  methods: {
    getClass: function getClass() {
      if (this.isSelected) {
        return this.getElementCssClass('selectedMonth');
      }

      if (this.isActive && this.showActiveDate) {
        return this.getElementCssClass('activeMonth');
      }

      return this.getElementCssClass('month');
    },
    getMonth: function getMonth() {
      return this.month;
    }
  },
  render: function render(createElement) {
    var _this = this;

    var monthSlot = this.$scopedSlots.month ? this.$scopedSlots.month({
      monthFormatted: this.monthFormatted,
      isSelected: this.isSelected,
      isActive: this.isActive,
      month: this.getMonth(),
      activeDate: this.activeDate,
      value: this.value
    }) : this.monthFormatted;
    return createElement('button', {
      class: this.getClass(),
      attrs: {
        'aria-label': this.formatNative(this.getMonth(), 'F, Y'),
        'data-date': this.formatNative(this.getMonth(), 'Y-m'),
        type: 'button',
        tabindex: -1
      },
      on: {
        click: function click(e) {
          return _this.$emit('click', e);
        }
      }
    }, monthSlot);
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewMonthsMonth = (TDatepickerViewsViewMonthsMonth);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewMonths.ts





var TDatepickerViewsViewMonths = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewMonths',
  props: {
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf())
    };
  },
  computed: {
    months: function months() {
      var _this = this;

      return Array.from({
        length: 12
      }, function (_x, i) {
        return i;
      }).map(function (monthNumber) {
        return _this.getMonth(monthNumber);
      });
    }
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    }
  },
  methods: {
    getMonth: function getMonth(monthNumber) {
      var newDate = new Date(this.localActiveDate.valueOf());
      newDate.setMonth(monthNumber); // Means the current day has less days so the extra month is
      // in the following month

      if (newDate.getDate() !== this.localActiveDate.getDate()) {
        // Assign the last day of previous month
        newDate = new Date(newDate.getFullYear(), newDate.getMonth(), 0);
      }

      return newDate;
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('div', {
      class: this.getElementCssClass('monthWrapper')
    }, this.months.map(function (month) {
      return createElement(TDatepicker_TDatepickerViewsViewMonthsMonth, {
        props: {
          month: month,
          value: _this.value,
          activeDate: _this.localActiveDate,
          getElementCssClass: _this.getElementCssClass,
          showActiveDate: _this.showActiveDate,
          formatNative: _this.formatNative
        },
        scopedSlots: _this.$scopedSlots,
        on: {
          click: function click() {
            return _this.$emit('input', month);
          }
        }
      });
    }));
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewMonths = (TDatepickerViewsViewMonths);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewYearsYear.ts


var TDatepickerViewsViewYearsYear = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewYearsYear',
  props: {
    year: {
      type: Date,
      required: true
    },
    activeDate: {
      type: Date,
      required: true
    },
    value: {
      type: [Date, Array],
      default: null
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf())
    };
  },
  computed: {
    isSelected: function isSelected() {
      var d1 = this.getYear();
      var d2 = this.value;

      if (d2 instanceof Date) {
        return d1.getFullYear() === d2.getFullYear();
      }

      if (Array.isArray(d2)) {
        return d2.some(function (d) {
          return d.getFullYear() === d1.getFullYear();
        });
      }

      return false;
    },
    isActive: function isActive() {
      var d1 = this.getYear();
      var d2 = this.activeDate;
      return d2 && d1.getFullYear() === d2.getFullYear();
    },
    yearFormatted: function yearFormatted() {
      return this.formatNative(this.getYear(), 'Y');
    }
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    }
  },
  methods: {
    getClass: function getClass() {
      if (this.isSelected) {
        return this.getElementCssClass('selectedYear');
      }

      if (this.isActive && this.showActiveDate) {
        return this.getElementCssClass('activeYear');
      }

      return this.getElementCssClass('year');
    },
    getYear: function getYear() {
      return this.year;
    }
  },
  render: function render(createElement) {
    var _this = this;

    var yearSlot = this.$scopedSlots.year ? this.$scopedSlots.year({
      yearFormatted: this.yearFormatted,
      isSelected: this.isSelected,
      isActive: this.isActive,
      year: this.getYear(),
      activeDate: this.activeDate,
      value: this.value
    }) : this.yearFormatted;
    return createElement('button', {
      class: this.getClass(),
      attrs: {
        'aria-label': this.yearFormatted,
        'data-date': this.yearFormatted,
        type: 'button',
        tabindex: -1
      },
      on: {
        click: function click(e) {
          return _this.$emit('click', e);
        }
      }
    }, yearSlot);
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewYearsYear = (TDatepickerViewsViewYearsYear);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsViewYears.ts







var TDatepickerViewsViewYears = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsViewYears',
  props: {
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    yearsPerView: {
      type: Number,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf())
    };
  },
  computed: {
    years: function years() {
      var _this = this;

      var initialYear = getYearsRange(this.localActiveDate, this.yearsPerView)[0];
      return Array.from({
        length: this.yearsPerView
      }, function (_x, i) {
        return i;
      }).map(function (year) {
        return _this.getYear(initialYear + year);
      });
    }
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    }
  },
  methods: {
    getYear: function getYear(year) {
      var newDate = new Date(this.localActiveDate.valueOf());
      newDate.setFullYear(year); // Means the current day has less days so the extra month is
      // in the following month

      if (newDate.getDate() !== this.localActiveDate.getDate()) {
        // Assign the last day of previous month
        newDate = new Date(newDate.getFullYear(), newDate.getMonth(), 0);
      }

      return newDate;
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('div', {
      class: this.getElementCssClass('yearWrapper')
    }, this.years.map(function (year) {
      return createElement(TDatepicker_TDatepickerViewsViewYearsYear, {
        props: {
          year: year,
          activeDate: _this.localActiveDate,
          value: _this.value,
          getElementCssClass: _this.getElementCssClass,
          showActiveDate: _this.showActiveDate,
          formatNative: _this.formatNative
        },
        scopedSlots: _this.$scopedSlots,
        on: {
          click: function click() {
            return _this.$emit('input', year);
          }
        }
      });
    }));
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsViewYears = (TDatepickerViewsViewYears);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViewsView.ts






var TDatepickerViewsView = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViewsView',
  props: {
    value: {
      type: [Date, Array],
      default: null
    },
    activeMonth: {
      type: Date,
      required: true
    },
    activeDate: {
      type: Date,
      required: true
    },
    weekStart: {
      type: Number,
      required: true
    },
    lang: {
      type: String,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    },
    parse: {
      type: Function,
      required: true
    },
    format: {
      type: Function,
      required: true
    },
    userFormat: {
      type: String,
      required: true
    },
    dateFormat: {
      type: String,
      required: true
    },
    monthsPerView: {
      type: Number,
      required: true
    },
    monthIndex: {
      type: Number,
      required: true
    },
    currentView: {
      type: String,
      required: true
    },
    yearsPerView: {
      type: Number,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    showDaysForOtherMonth: {
      type: Boolean,
      required: true
    },
    disabledDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    highlightDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    maxDate: {
      type: [Date, String],
      default: undefined
    },
    minDate: {
      type: [Date, String],
      default: undefined
    },
    range: {
      type: Boolean,
      required: true
    },
    locale: {
      type: Object,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf()),
      localActiveMonth: new Date(this.activeMonth.valueOf())
    };
  },
  computed: {
    isFirstMonth: function isFirstMonth() {
      return this.monthIndex === 0;
    },
    isLastMonth: function isLastMonth() {
      return this.monthIndex === this.monthsPerView - 1;
    },
    showMonthName: function showMonthName() {
      return this.monthsPerView > 1;
    }
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    },
    activeMonth: function activeMonth(_activeMonth) {
      this.localActiveMonth = new Date(_activeMonth.valueOf());
    }
  },
  methods: {
    inputHandler: function inputHandler(date) {
      this.resetView();
      this.$emit('input', date);
    },
    viewInputActiveDateHandler: function viewInputActiveDateHandler(date) {
      this.resetView();
      this.inputActiveDateHandler(date);
    },
    inputActiveDateHandler: function inputActiveDateHandler(date) {
      this.$emit('inputActiveDate', date);
    },
    resetView: function resetView() {
      this.$emit('resetView');
    }
  },
  render: function render(createElement) {
    var _this = this;

    var subElements = [];
    subElements.push(createElement(TDatepicker_TDatepickerNavigator, {
      ref: 'navigator',
      props: {
        value: this.localActiveMonth,
        getElementCssClass: this.getElementCssClass,
        showSelector: this.isFirstMonth,
        currentView: this.currentView,
        parse: this.parse,
        formatNative: this.formatNative,
        dateFormat: this.dateFormat,
        yearsPerView: this.yearsPerView,
        minDate: this.minDate,
        maxDate: this.maxDate,
        locale: this.locale
      },
      on: {
        input: this.inputActiveDateHandler,
        updateView: function updateView(newView) {
          _this.$emit('updateView', newView);
        }
      }
    }));

    if (this.currentView === CalendarView.Day) {
      subElements.push(createElement(TDatepicker_TDatepickerViewsViewCalendar, {
        ref: 'calendar',
        props: {
          value: this.value,
          activeMonth: this.localActiveMonth,
          activeDate: this.localActiveDate,
          weekStart: this.weekStart,
          getElementCssClass: this.getElementCssClass,
          showDaysForOtherMonth: this.showDaysForOtherMonth,
          parse: this.parse,
          format: this.format,
          formatNative: this.formatNative,
          dateFormat: this.dateFormat,
          userFormat: this.userFormat,
          monthsPerView: this.monthsPerView,
          showActiveDate: this.showActiveDate,
          disabledDates: this.disabledDates,
          highlightDates: this.highlightDates,
          minDate: this.minDate,
          maxDate: this.maxDate,
          range: this.range
        },
        scopedSlots: this.$scopedSlots,
        on: {
          input: this.inputHandler
        }
      }));
    } else if (this.currentView === CalendarView.Month) {
      subElements.push(createElement(TDatepicker_TDatepickerViewsViewMonths, {
        ref: 'months',
        props: {
          value: this.value,
          activeDate: this.localActiveDate,
          getElementCssClass: this.getElementCssClass,
          showActiveDate: this.showActiveDate,
          formatNative: this.formatNative
        },
        scopedSlots: this.$scopedSlots,
        on: {
          input: this.viewInputActiveDateHandler
        }
      }));
    } else if (this.currentView === CalendarView.Year) {
      subElements.push(createElement(TDatepicker_TDatepickerViewsViewYears, {
        ref: 'years',
        props: {
          value: this.value,
          activeDate: this.localActiveDate,
          getElementCssClass: this.getElementCssClass,
          yearsPerView: this.yearsPerView,
          showActiveDate: this.showActiveDate,
          formatNative: this.formatNative
        },
        scopedSlots: this.$scopedSlots,
        on: {
          input: this.viewInputActiveDateHandler
        }
      }));
    }

    return createElement('div', {
      class: this.getElementCssClass('view')
    }, subElements);
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViewsView = (TDatepickerViewsView);
// CONCATENATED MODULE: ./src/components/TDatepicker/TDatepickerViews.ts







var TDatepickerViews = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDatepickerViews',
  props: {
    value: {
      type: [Date, Array],
      default: null
    },
    activeDate: {
      type: Date,
      required: true
    },
    weekStart: {
      type: Number,
      required: true
    },
    monthsPerView: {
      type: Number,
      required: true
    },
    lang: {
      type: String,
      required: true
    },
    getElementCssClass: {
      type: Function,
      required: true
    },
    parse: {
      type: Function,
      required: true
    },
    format: {
      type: Function,
      required: true
    },
    formatNative: {
      type: Function,
      required: true
    },
    dateFormat: {
      type: String,
      required: true
    },
    userFormat: {
      type: String,
      required: true
    },
    initialView: {
      type: String,
      required: true
    },
    currentView: {
      type: String,
      required: true
    },
    yearsPerView: {
      type: Number,
      required: true
    },
    showActiveDate: {
      type: Boolean,
      required: true
    },
    showDaysForOtherMonth: {
      type: Boolean,
      required: true
    },
    disabledDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    highlightDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    maxDate: {
      type: [Date, String],
      default: undefined
    },
    minDate: {
      type: [Date, String],
      default: undefined
    },
    range: {
      type: Boolean,
      required: true
    },
    locale: {
      type: Object,
      required: true
    }
  },
  data: function data() {
    return {
      localActiveDate: new Date(this.activeDate.valueOf())
    };
  },
  computed: {
    activeMonths: function activeMonths() {
      var _this = this;

      return Array.from({
        length: this.monthsPerView
      }, function (_x, i) {
        return i;
      }).map(function (i) {
        return addMonths(_this.localActiveDate, i);
      });
    }
  },
  watch: {
    activeDate: function activeDate(_activeDate) {
      this.localActiveDate = new Date(_activeDate.valueOf());
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('div', {
      class: this.getElementCssClass('viewGroup')
    }, this.activeMonths.map(function (activeMonth, index) {
      return createElement(TDatepicker_TDatepickerViewsView, {
        ref: 'view',
        props: {
          value: _this.value,
          activeMonth: activeMonth,
          activeDate: _this.localActiveDate,
          weekStart: _this.weekStart,
          lang: _this.lang,
          getElementCssClass: _this.getElementCssClass,
          parse: _this.parse,
          format: _this.format,
          dateFormat: _this.dateFormat,
          userFormat: _this.userFormat,
          formatNative: _this.formatNative,
          monthsPerView: _this.monthsPerView,
          monthIndex: index,
          currentView: index === 0 ? _this.currentView : _this.initialView,
          yearsPerView: _this.yearsPerView,
          showActiveDate: _this.showActiveDate,
          disabledDates: _this.disabledDates,
          highlightDates: _this.highlightDates,
          minDate: _this.minDate,
          maxDate: _this.maxDate,
          range: _this.range,
          showDaysForOtherMonth: _this.showDaysForOtherMonth,
          locale: _this.locale
        },
        scopedSlots: _this.$scopedSlots,
        on: {
          input: function input(date) {
            _this.$emit('input', date);
          },
          inputActiveDate: function inputActiveDate(date) {
            _this.$emit('inputActiveDate', date);
          },
          updateView: function updateView(newView) {
            _this.$emit('updateView', newView);
          },
          resetView: function resetView() {
            _this.$emit('resetView');
          }
        }
      });
    }));
  }
});
/* harmony default export */ var TDatepicker_TDatepickerViews = (TDatepickerViews);
// CONCATENATED MODULE: ./src/components/TDatepicker.ts


















var TDatepicker = base_HtmlInput.extend({
  name: 'TDatepicker',
  props: {
    value: {
      type: [Date, String, Number, Array],
      default: null
    },
    placeholder: {
      type: String,
      default: undefined
    },
    inputName: {
      type: String,
      default: undefined
    },
    weekStart: {
      type: Number,
      default: 0
    },
    monthsPerView: {
      type: Number,
      default: 1,
      validator: function validator(value) {
        return value >= 1;
      }
    },
    lang: {
      type: String,
      default: 'en'
    },
    locale: {
      type: Object,
      default: function _default() {
        return English;
      }
    },
    locales: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    dateFormat: {
      type: String,
      default: 'Y-m-d'
    },
    userFormat: {
      type: String,
      default: 'F j, Y'
    },
    dateFormatter: {
      type: Function,
      default: undefined
    },
    dateParser: {
      type: Function,
      default: undefined
    },
    closeOnSelect: {
      type: Boolean,
      default: true
    },
    showDaysForOtherMonth: {
      type: Boolean,
      default: true
    },
    show: {
      type: Boolean,
      default: false
    },
    inline: {
      type: Boolean,
      default: false
    },
    initialView: {
      type: String,
      default: CalendarView.Day,
      validator: function validator(value) {
        return [CalendarView.Day, CalendarView.Month, CalendarView.Year].includes(value);
      }
    },
    yearsPerView: {
      type: Number,
      default: 12
    },
    disabledDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    highlightDates: {
      type: [Date, Array, Function, String],
      default: undefined
    },
    maxDate: {
      type: [Date, String],
      default: undefined
    },
    minDate: {
      type: [Date, String],
      default: undefined
    },
    initialDate: {
      type: [Date, String],
      default: undefined
    },
    conjunction: {
      type: String,
      default: ','
    },
    multiple: {
      type: Boolean,
      default: false
    },
    range: {
      type: Boolean,
      default: false
    },
    clearable: {
      type: Boolean,
      default: true
    },
    classes: {
      type: Object,
      default: function _default() {
        return {
          // Dropdown related classes
          wrapper: 'inline-flex flex-col',
          dropdownWrapper: 'relative z-10',
          dropdown: 'origin-top-left absolute rounded-md shadow-lg',
          enterClass: '',
          enterActiveClass: 'transition ease-out duration-100 transform opacity-0 scale-95',
          enterToClass: 'transform opacity-100 scale-100',
          leaveClass: 'transition ease-in transform opacity-100 scale-100',
          leaveActiveClass: '',
          leaveToClass: 'transform opacity-0 scale-95 duration-75',
          // Wrapper for inline calendar
          inlineWrapper: '',
          // Text input related classes
          inputWrapper: '',
          input: 'form-input w-full',
          clearButton: 'hover:bg-gray-200 text-gray-500 rounded',
          clearButtonIcon: '',
          // Picker views
          viewGroup: 'bg-white border',
          view: '',
          // Navigator
          navigator: 'pt-2 px-2',
          navigatorViewButton: 'transition ease-in-out duration-100 inline-flex cursor-pointer rounded-full px-2 py-1 -ml-1 hover:bg-gray-200',
          navigatorViewButtonIcon: 'fill-current text-gray-500',
          navigatorViewButtonBackIcon: 'fill-current text-gray-500',
          navigatorViewButtonMonth: 'text-gray-700 font-semibold',
          navigatorViewButtonYear: 'text-gray-600 ml-1',
          navigatorViewButtonYearRange: 'text-gray-600 ml-1',
          navigatorLabel: 'py-1',
          navigatorLabelMonth: 'text-gray-700 font-semibold',
          navigatorLabelYear: 'text-gray-600 ml-1',
          navigatorPrevButton: 'transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 rounded-full p-1 ml-2 ml-auto disabled:opacity-25 disabled:cursor-not-allowed',
          navigatorNextButton: 'transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 rounded-full p-1 -mr-1 disabled:opacity-25 disabled:cursor-not-allowed',
          navigatorPrevButtonIcon: 'text-gray-500',
          navigatorNextButtonIcon: 'text-gray-500',
          // Calendar View
          calendarWrapper: 'p-2',
          calendarHeaderWrapper: '',
          calendarHeaderWeekDay: 'uppercase text-xs text-gray-600 w-8 h-8 flex items-center justify-center',
          calendarDaysWrapper: '',
          calendarDaysDayWrapper: 'w-full h-8 flex flex-shrink-0 items-center',
          // Day item
          otherMonthDay: 'text-sm rounded-full w-8 h-8 mx-auto hover:bg-blue-100 text-gray-400 disabled:opacity-25 disabled:cursor-not-allowed',
          emptyDay: '',
          inRangeFirstDay: 'text-sm bg-blue-500 text-white w-full h-8 rounded-l-full',
          inRangeLastDay: 'text-sm bg-blue-500 text-white w-full h-8 rounded-r-full',
          inRangeDay: 'text-sm bg-blue-200 w-full h-8 disabled:opacity-25 disabled:cursor-not-allowed',
          selectedDay: 'text-sm rounded-full w-8 h-8 mx-auto bg-blue-500 text-white disabled:opacity-25 disabled:cursor-not-allowed',
          activeDay: 'text-sm rounded-full bg-blue-100 w-8 h-8 mx-auto disabled:opacity-25 disabled:cursor-not-allowed',
          highlightedDay: 'text-sm rounded-full bg-blue-200 w-8 h-8 mx-auto disabled:opacity-25 disabled:cursor-not-allowed',
          day: 'text-sm rounded-full w-8 h-8 mx-auto hover:bg-blue-100 disabled:opacity-25 disabled:cursor-not-allowed',
          today: 'text-sm rounded-full w-8 h-8 mx-auto hover:bg-blue-100 disabled:opacity-25 disabled:cursor-not-allowed border border-blue-500',
          // Months View
          monthWrapper: 'p-2',
          selectedMonth: 'text-sm rounded w-full h-12 mx-auto bg-blue-500 text-white',
          activeMonth: 'text-sm rounded w-full h-12 mx-auto bg-blue-100',
          month: 'text-sm rounded w-full h-12 mx-auto hover:bg-blue-100',
          // Years View
          yearWrapper: 'p-2',
          year: 'text-sm rounded w-full h-12 mx-auto hover:bg-blue-100',
          selectedYear: 'text-sm rounded w-full h-12 mx-auto bg-blue-500 text-white',
          activeYear: 'text-sm rounded w-full h-12 mx-auto bg-blue-100'
        };
      }
    },
    fixedClasses: {
      type: Object,
      default: function _default() {
        return {
          navigator: 'flex',
          navigatorViewButton: 'flex items-center',
          navigatorViewButtonIcon: 'flex-shrink-0 h-5 w-5',
          navigatorViewButtonBackIcon: 'flex-shrink-0 h-5 w-5',
          navigatorLabel: 'flex items-center py-1',
          navigatorPrevButtonIcon: 'h-6 w-6 inline-flex',
          navigatorNextButtonIcon: 'h-6 w-6 inline-flex',
          inputWrapper: 'relative',
          viewGroup: 'inline-flex flex-wrap',
          view: 'w-64',
          calendarDaysWrapper: 'grid grid-cols-7',
          calendarHeaderWrapper: 'grid grid-cols-7',
          monthWrapper: 'grid grid-cols-4',
          yearWrapper: 'grid grid-cols-4',
          clearButton: 'flex flex-shrink-0 items-center justify-center absolute right-0 top-0 m-2 h-6 w-6',
          clearButtonIcon: 'fill-current h-3 w-3'
        };
      }
    }
  },
  data: function data() {
    var _this = this;

    var currentLocale = dates_extractLocaleFromProps(this.lang, this.locales, this.locale);
    var dateFormatter = this.dateFormatter;
    var parse = buildDateParser(currentLocale, this.dateParser);
    var format = buildDateFormatter(currentLocale, dateFormatter); // Keep a native formatter for the different views

    var formatNative = !dateFormatter ? format : buildDateFormatter(currentLocale);
    var localValue = this.multiple || this.range ? [] : null;

    if (Array.isArray(this.value)) {
      localValue = this.value.map(function (value) {
        return parse(value, _this.dateFormat) || null;
      }).filter(function (value) {
        return !!value;
      });
    } else {
      localValue = parse(this.value, this.dateFormat) || localValue;
    }

    var formatedDate = Array.isArray(localValue) ? localValue.map(function (d) {
      return format(d, _this.dateFormat);
    }) : format(localValue, this.dateFormat);
    var userFormatedDate = Array.isArray(localValue) ? localValue.map(function (d) {
      return format(d, _this.userFormat);
    }) : format(localValue, this.userFormat);
    var activeDate = new Date();

    if (Array.isArray(localValue) && localValue.length) {
      activeDate = localValue[0];
    } else if (localValue instanceof Date) {
      activeDate = localValue;
    } else {
      activeDate = parse(this.initialDate, this.dateFormat) || activeDate;
    } // Used to show the selected month/year


    var currentView = this.initialView;
    return {
      localValue: localValue,
      formatedDate: formatedDate,
      userFormatedDate: userFormatedDate,
      activeDate: activeDate,
      shown: this.show,
      showActiveDate: false,
      currentView: currentView,
      parse: parse,
      format: format,
      formatNative: formatNative,
      currentLocale: currentLocale
    };
  },
  computed: {
    visibleRange: function visibleRange() {
      var start = new Date(this.activeDate.valueOf());
      var end = new Date(this.activeDate.valueOf());
      start.setDate(1);
      end.setMonth(end.getMonth() + this.monthsPerView, 0);
      return [start, end];
    },
    latestDate: function latestDate() {
      if (Array.isArray(this.localValue)) {
        if (this.localValue.length) {
          return this.localValue[this.localValue.length - 1] || null;
        }

        return null;
      }

      return this.localValue;
    },
    currentValueIsInTheView: function currentValueIsInTheView() {
      // eslint-disable-next-line no-restricted-globals
      if (this.latestDate) {
        var _a = this.visibleRange,
            start = _a[0],
            end = _a[1];
        return compareDates(end, this.latestDate) >= 0 && compareDates(this.latestDate, start) >= 0;
      }

      return true;
    }
  },
  watch: {
    shown: function shown(_shown) {
      this.$emit('update:show', _shown);
    },
    activeDate: function activeDate(_activeDate) {
      this.$emit('activeChange', _activeDate);
    },
    formatedDate: function formatedDate(_formatedDate) {
      this.$emit('input', _formatedDate);
      this.$emit('change', _formatedDate);
    },
    userFormatedDate: function userFormatedDate(_userFormatedDate) {
      this.$emit('userDateChanged', _userFormatedDate);
    },
    localValue: function localValue(_localValue) {
      if (this.monthsPerView === 1 || !this.currentValueIsInTheView) {
        if (Array.isArray(_localValue) && _localValue.length) {
          this.activeDate = _localValue[_localValue.length - 1];
        } else {
          this.activeDate = _localValue instanceof Date ? _localValue : new Date();
        }
      }

      this.refreshFormattedDate();
    },
    value: function value(_value) {
      var _this = this;

      if (Array.isArray(_value)) {
        var localValue = _value.map(function (v) {
          return _this.parse(v, _this.dateFormat) || null;
        }).filter(function (v) {
          return !!v;
        });

        if (!isEqual_default()(localValue, this.localValue)) {
          this.localValue = localValue;
        }
      } else {
        this.localValue = this.parse(_value, this.dateFormat) || (this.multiple || this.range ? [] : null);
      }
    },
    dateParser: function dateParser() {
      this.refreshParser();
    },
    dateFormatter: function dateFormatter() {
      this.refreshFormatter();
    },
    lang: function lang() {
      this.refreshCurrentLocale();
    },
    locale: function locale() {
      this.refreshCurrentLocale();
    },
    locales: {
      handler: function handler() {
        this.refreshCurrentLocale();
      },
      deep: true
    }
  },
  methods: {
    refreshFormattedDate: function refreshFormattedDate() {
      var _this = this;

      var formatedDate = Array.isArray(this.localValue) ? this.localValue.map(function (d) {
        return _this.format(d, _this.dateFormat);
      }) : this.format(this.localValue, this.dateFormat);
      var userFormatedDate = Array.isArray(this.localValue) ? this.localValue.map(function (d) {
        return _this.format(d, _this.userFormat);
      }) : this.format(this.localValue, this.userFormat);
      this.formatedDate = formatedDate;
      this.userFormatedDate = userFormatedDate;
    },
    refreshCurrentLocale: function refreshCurrentLocale() {
      this.currentLocale = dates_extractLocaleFromProps(this.lang, this.locales, this.locale);
      this.refreshParser();
      this.refreshFormatter();
      this.refreshFormattedDate();
    },
    refreshParser: function refreshParser() {
      var parse = buildDateParser(this.currentLocale, this.dateParser);
      this.parse = parse;
    },
    refreshFormatter: function refreshFormatter() {
      var dateFormatter = this.dateFormatter;
      var format = buildDateFormatter(this.currentLocale, dateFormatter); // Keep a native formatter for the different views

      var formatNative = !dateFormatter ? format : buildDateFormatter(this.currentLocale);
      this.format = format;
      this.formatNative = formatNative;
    },
    focus: function focus(options) {
      var wrapper = this.$el;
      var input = wrapper.querySelector('input[type=text]');

      if (!input) {
        throw new Error('Input not found');
      }

      input.focus(options);
    },
    doHide: function doHide() {
      var dropdown = this.getDropdown();

      if (dropdown) {
        dropdown.doHide();
      }
    },
    doShow: function doShow() {
      var dropdown = this.getDropdown();

      if (dropdown) {
        dropdown.doShow();
      }
    },
    toggle: function toggle() {
      var dropdown = this.getDropdown();

      if (dropdown) {
        dropdown.doToggle();
      }
    },
    arrowKeyHandler: function arrowKeyHandler(e) {
      e.preventDefault();
      this.showActiveDate = true;

      if (!this.inline && !this.shown) {
        this.doShow();
        return;
      }

      var newActiveDate;

      if (this.currentView === CalendarView.Day) {
        if (e.keyCode === Key["a" /* default */].DOWN) {
          newActiveDate = addDays(this.activeDate, 7);
        } else if (e.keyCode === Key["a" /* default */].LEFT) {
          newActiveDate = addDays(this.activeDate, -1);
        } else if (e.keyCode === Key["a" /* default */].UP) {
          newActiveDate = addDays(this.activeDate, -7);
        } else if (e.keyCode === Key["a" /* default */].RIGHT) {
          newActiveDate = addDays(this.activeDate, 1);
        }
      } else if (this.currentView === CalendarView.Month) {
        if (e.keyCode === Key["a" /* default */].DOWN) {
          newActiveDate = addMonths(this.activeDate, 4);
        } else if (e.keyCode === Key["a" /* default */].LEFT) {
          newActiveDate = addMonths(this.activeDate, -1);
        } else if (e.keyCode === Key["a" /* default */].UP) {
          newActiveDate = addMonths(this.activeDate, -4);
        } else if (e.keyCode === Key["a" /* default */].RIGHT) {
          newActiveDate = addMonths(this.activeDate, 1);
        }
      } else if (this.currentView === CalendarView.Year) {
        if (e.keyCode === Key["a" /* default */].DOWN) {
          newActiveDate = addYears(this.activeDate, 4);
        } else if (e.keyCode === Key["a" /* default */].LEFT) {
          newActiveDate = addYears(this.activeDate, -1);
        } else if (e.keyCode === Key["a" /* default */].UP) {
          newActiveDate = addYears(this.activeDate, -4);
        } else if (e.keyCode === Key["a" /* default */].RIGHT) {
          newActiveDate = addYears(this.activeDate, 1);
        }
      }

      if (newActiveDate && !dateIsOutOfRange(newActiveDate, this.minDate, this.maxDate, this.parse, this.dateFormat)) {
        this.activeDate = newActiveDate;
      }
    },
    inputHandler: function inputHandler(newDate) {
      var date = new Date(newDate.valueOf());
      var disabledDates = this.disabledDates;

      if (dayIsPartOfTheConditions(date, disabledDates, this.parse, this.dateFormat) || dateIsOutOfRange(date, this.minDate, this.maxDate, this.parse, this.dateFormat)) {
        return;
      }

      if (this.range) {
        var range = []; // Reset the range when
        // 1. Is not an array
        // 2. The range already have both values
        // 3. The range has the first value and the second value is before

        if (!this.localValue || !Array.isArray(this.localValue) || Array.isArray(this.localValue) && (this.localValue.length === 0 || this.localValue.length === 2) || Array.isArray(this.localValue) && this.localValue.length === 1 && this.localValue[0] && this.localValue[0].getTime() > date.getTime()) {
          range = [date];
        } else if (this.localValue.length === 1) {
          range = [this.localValue[0], date];
        }

        this.localValue = range; // Range is complete

        if (!this.inline && this.localValue.length === 2 && this.closeOnSelect) {
          this.doHide();
        }
      } else if (Array.isArray(this.localValue)) {
        var index = this.localValue.findIndex(function (d) {
          return isSameDay(d, date);
        });

        if (index >= 0) {
          this.localValue.splice(index, 1);
        } else {
          this.localValue.push(date);
        }
      } else {
        this.focus();
        this.localValue = date;
      }

      if (!this.inline && this.closeOnSelect && !Array.isArray(this.localValue)) {
        this.doHide();
      }
    },
    inputActiveDateHandler: function inputActiveDateHandler(newDate) {
      this.activeDate = new Date(newDate.valueOf());
      this.focus();
    },
    setView: function setView(newView) {
      this.currentView = newView;
      this.focus();
    },
    resetView: function resetView() {
      if (this.currentView === CalendarView.Month) {
        this.setView(CalendarView.Day);
      } else if (this.currentView === CalendarView.Year) {
        this.setView(CalendarView.Month);
      } else {
        this.setView(CalendarView.Day);
      }
    },
    enterHandler: function enterHandler(e) {
      e.preventDefault();

      if (!this.inline && !this.shown) {
        this.doShow();
      } else if (this.showActiveDate) {
        if (this.currentView === CalendarView.Day) {
          this.inputHandler(new Date(this.activeDate.valueOf()));
        } else {
          this.resetView();
        }
      }
    },
    escapeHandler: function escapeHandler(e) {
      e.preventDefault();
      var dropdown = this.getDropdown();

      if (dropdown) {
        dropdown.escapeHandler(e);
      }
    },
    spaceHandler: function spaceHandler(e) {
      e.preventDefault();
      this.toggle();
    },
    getDropdown: function getDropdown() {
      return this.$refs.dropdown;
    },
    resetInitialState: function resetInitialState() {
      this.shown = false;
      this.currentView = this.initialView;
      this.showActiveDate = false;

      if (Array.isArray(this.localValue) && this.localValue.length) {
        this.activeDate = this.localValue[0];
      } else {
        this.activeDate = this.localValue instanceof Date ? this.localValue : new Date();
      }
    },
    clearHandler: function clearHandler() {
      if (this.multiple || this.range) {
        this.localValue = [];
      } else {
        this.localValue = null;
      }
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    },
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    }
  },
  render: function render(createElement) {
    var _this = this;

    var views = createElement(TDatepicker_TDatepickerViews, {
      ref: 'views',
      props: {
        value: this.localValue,
        activeDate: this.activeDate,
        weekStart: this.weekStart,
        monthsPerView: this.monthsPerView,
        lang: this.lang,
        locale: this.currentLocale,
        getElementCssClass: this.getElementCssClass,
        parse: this.parse,
        format: this.format,
        formatNative: this.formatNative,
        dateFormat: this.dateFormat,
        userFormat: this.userFormat,
        initialView: this.initialView,
        currentView: this.currentView,
        yearsPerView: this.yearsPerView,
        showActiveDate: this.showActiveDate,
        disabledDates: this.disabledDates,
        highlightDates: this.highlightDates,
        minDate: this.minDate,
        maxDate: this.maxDate,
        range: this.range,
        showDaysForOtherMonth: this.showDaysForOtherMonth
      },
      scopedSlots: this.$scopedSlots,
      on: {
        input: this.inputHandler,
        inputActiveDate: this.inputActiveDateHandler,
        updateView: this.setView,
        resetView: this.resetView
      }
    });
    var triggerSettings = {
      ref: 'trigger',
      props: {
        id: this.id,
        name: this.name,
        inputName: this.inputName,
        disabled: this.disabled,
        readonly: this.readonly,
        autofocus: this.autofocus,
        required: this.required,
        placeholder: this.placeholder,
        tabindex: this.tabindex,
        userFormatedDate: this.userFormatedDate,
        formatedDate: this.formatedDate,
        conjunction: this.conjunction,
        multiple: this.multiple,
        range: this.range,
        clearable: this.clearable,
        locale: this.currentLocale,
        value: this.localValue,
        activeDate: this.activeDate,
        getElementCssClass: this.getElementCssClass
      },
      scopedSlots: this.$scopedSlots,
      on: {
        clear: this.clearHandler,
        focus: this.focusHandler,
        blur: this.blurHandler,
        keydown: function keydown(e) {
          if ([Key["a" /* default */].LEFT, Key["a" /* default */].UP, Key["a" /* default */].RIGHT, Key["a" /* default */].DOWN].includes(e.keyCode)) {
            _this.arrowKeyHandler(e);
          } else if (e.keyCode === Key["a" /* default */].ENTER) {
            _this.enterHandler(e);
          } else if (e.keyCode === Key["a" /* default */].ESC) {
            _this.escapeHandler(e);
          } else if (e.keyCode === Key["a" /* default */].SPACE) {
            _this.spaceHandler(e);
          }

          _this.$emit('keydown', e);
        }
      }
    };

    if (this.inline) {
      return createElement('div', {
        class: this.getElementCssClass('inlineWrapper')
      }, [createElement(TDatepicker_TDatepickerTrigger, triggerSettings), views]);
    }

    return createElement(components_TDropdown, {
      ref: 'dropdown',
      props: {
        fixedClasses: undefined,
        classes: {
          wrapper: this.getElementCssClass('wrapper'),
          dropdownWrapper: this.getElementCssClass('dropdownWrapper'),
          dropdown: this.getElementCssClass('dropdown'),
          enterClass: this.getElementCssClass('enterClass'),
          enterActiveClass: this.getElementCssClass('enterActiveClass'),
          enterToClass: this.getElementCssClass('enterToClass'),
          leaveClass: this.getElementCssClass('leaveClass'),
          leaveActiveClass: this.getElementCssClass('leaveActiveClass'),
          leaveToClass: this.getElementCssClass('leaveToClass')
        },
        show: this.show
      },
      on: {
        hidden: function hidden() {
          _this.$emit('hidden');

          _this.resetInitialState();
        },
        shown: function shown() {
          _this.$emit('shown');

          _this.shown = true;
        }
      },
      scopedSlots: {
        trigger: function trigger(props) {
          triggerSettings.props = Object(tslib_es6["a" /* __assign */])(Object(tslib_es6["a" /* __assign */])({}, triggerSettings.props), {
            hideIfFocusOutside: props.hideIfFocusOutside,
            show: props.show
          });
          return [createElement(TDatepicker_TDatepickerTrigger, triggerSettings)];
        }
      }
    }, [views]);
  }
});
/* harmony default export */ var components_TDatepicker = (TDatepicker);
// CONCATENATED MODULE: ./src/components/TToggle.ts








var TToggle_isChecked = function isChecked(model, value) {
  if (Array.isArray(model)) {
    return model.indexOf(value) >= 0;
  }

  return model === value;
};

var TToggle = base_HtmlInput.extend({
  name: 'TToggle',
  props: {
    value: {
      type: [String, Object, Number, Boolean, Array],
      default: true
    },
    uncheckedValue: {
      type: [String, Object, Number, Boolean, Array],
      default: false
    },
    model: {
      // v-model
      type: [String, Object, Number, Boolean, Array],
      default: undefined
    },
    checked: {
      type: Boolean,
      default: undefined
    },
    tabindex: {
      type: [String, Number],
      default: 0
    },
    uncheckedPlaceholder: {
      type: String,
      default: undefined
    },
    checkedPlaceholder: {
      type: String,
      default: undefined
    },
    uncheckedLabel: {
      type: String,
      default: undefined
    },
    checkedLabel: {
      type: String,
      default: undefined
    },
    classes: {
      type: Object,
      default: function _default() {
        return {
          wrapper: 'bg-gray-200 focus:outline-none focus:shadow-outline rounded-full border-2 border-transparent',
          wrapperChecked: 'bg-blue-500 focus:outline-none focus:shadow-outline rounded-full border-2 border-transparent',
          button: 'h-5 w-5 rounded-full bg-white shadow  flex items-center justify-center text-gray-400 text-xs',
          buttonChecked: 'h-5 w-5 rounded-full bg-white shadow  flex items-center justify-center text-blue-500 text-xs',
          checkedPlaceholder: 'rounded-full w-5 h-5 flex items-center justify-center text-gray-500 text-xs',
          uncheckedPlaceholder: 'rounded-full w-5 h-5 flex items-center justify-center text-gray-500 text-xs'
        };
      }
    },
    fixedClasses: {
      type: [String, Array, Object],
      default: function _default() {
        return {
          wrapper: 'relative inline-flex flex-shrink-0 cursor-pointer transition-colors ease-in-out duration-200',
          wrapperChecked: 'relative inline-flex flex-shrink-0 cursor-pointer transition-colors ease-in-out duration-200',
          button: 'inline-block absolute transform translate-x-0 transition ease-in-out duration-200',
          buttonChecked: 'inline-block absolute transform translate-x-full transition ease-in-out duration-200',
          checkedPlaceholder: 'inline-block',
          uncheckedPlaceholder: 'inline-block'
        };
      }
    }
  },
  model: {
    prop: 'model',
    event: 'input'
  },
  data: function data() {
    var checked = typeof this.checked === 'boolean' && typeof this.model === 'undefined' ? this.checked : TToggle_isChecked(this.model, this.value);
    return {
      isChecked: checked
    };
  },
  computed: {
    isDisabled: function isDisabled() {
      return this.disabled || this.readonly;
    },
    currentValue: function currentValue() {
      return this.isChecked ? this.value : this.uncheckedValue;
    }
  },
  watch: {
    model: function model(_model) {
      this.isChecked = TToggle_isChecked(_model, this.value);
    },
    isChecked: function isChecked(checked) {
      var localValue;

      if (Array.isArray(this.model)) {
        localValue = Object(tslib_es6["d" /* __spreadArrays */])(this.model);
        var index = localValue.indexOf(this.value);

        if (checked && index < 0) {
          localValue.push(this.value);
        } else if (!checked && index >= 0) {
          localValue.splice(index, 1);
        }
      } else {
        localValue = this.currentValue;
      }

      this.$emit('input', localValue);
      this.$emit('change', localValue); // Emit update event to prop

      this.$emit('update:checked', checked);
    }
  },
  methods: {
    blurHandler: function blurHandler(e) {
      this.$emit('blur', e);
    },
    focusHandler: function focusHandler(e) {
      this.$emit('focus', e);
    },
    getElement: function getElement() {
      return this.$el;
    },
    blur: function blur() {
      this.getElement().blur();
    },
    click: function click() {
      this.getElement().click();
    },
    spaceHandler: function spaceHandler(e) {
      e.preventDefault();
      this.toggleValue();
    },
    clickHandler: function clickHandler() {
      this.toggleValue();
    },
    toggleValue: function toggleValue() {
      if (this.isDisabled) {
        return;
      }

      this.isChecked = !this.isChecked;
    },
    setChecked: function setChecked(checked) {
      this.isChecked = checked;
    },
    focus: function focus(options) {
      this.getElement().focus(options);
    }
  },
  render: function render(createElement) {
    var _this = this;

    var wrapperClass = this.isChecked ? this.getElementCssClass('wrapperChecked') : this.getElementCssClass('wrapper');
    var defaultSlot = this.$scopedSlots.default ? this.$scopedSlots.default({
      value: this.currentValue,
      uncheckedValue: this.uncheckedValue,
      isChecked: this.isChecked
    }) : null;

    if (!defaultSlot) {
      defaultSlot = this.isChecked ? this.checkedLabel : this.uncheckedLabel;
    }

    var checkedslot = this.$scopedSlots.checked ? this.$scopedSlots.checked({
      value: this.currentValue,
      uncheckedValue: this.uncheckedValue,
      isChecked: this.isChecked
    }) : null;

    if (this.checkedPlaceholder && !checkedslot) {
      checkedslot = this.checkedPlaceholder;
    }

    var uncheckedSlot = this.$scopedSlots.unchecked ? this.$scopedSlots.unchecked({
      value: this.currentValue,
      uncheckedValue: this.uncheckedValue,
      isChecked: this.isChecked
    }) : null;

    if (this.uncheckedPlaceholder && !uncheckedSlot) {
      uncheckedSlot = this.uncheckedPlaceholder;
    }

    return createElement('span', {
      class: wrapperClass,
      attrs: {
        role: 'checkbox',
        id: this.id,
        tabindex: this.tabindex,
        autofocus: this.autofocus,
        'aria-checked': this.isChecked ? 'true' : 'false'
      },
      on: {
        blur: this.blurHandler,
        focus: this.focusHandler,
        click: function click(e) {
          _this.clickHandler();

          _this.$emit('click', e);
        },
        keydown: function keydown(e) {
          if (e.keyCode === Key["a" /* default */].SPACE) {
            _this.spaceHandler(e);
          }

          _this.$emit('keydown', e);
        }
      }
    }, [createElement('input', {
      ref: 'input',
      attrs: {
        value: this.currentValue,
        type: 'hidden',
        name: this.name,
        disabled: this.disabled,
        readonly: this.readonly,
        required: this.required
      }
    }), createElement('span', {
      class: this.getElementCssClass('checkedPlaceholder'),
      attrs: {
        'aria-hidden': 'true'
      }
    }, checkedslot), createElement('span', {
      class: this.getElementCssClass('uncheckedPlaceholder'),
      attrs: {
        'aria-hidden': 'true'
      }
    }, uncheckedSlot), createElement('span', {
      ref: 'button',
      class: this.isChecked ? this.getElementCssClass('buttonChecked') : this.getElementCssClass('button'),
      attrs: {
        'aria-hidden': 'true'
      }
    }, defaultSlot)]);
  }
});
/* harmony default export */ var components_TToggle = (TToggle);
// EXTERNAL MODULE: ./src/components/TDialog.ts + 11 modules
var TDialog = __webpack_require__("f876");

// CONCATENATED MODULE: ./src/components.ts






















/***/ }),

/***/ "79bc":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ "7a48":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),

/***/ "7b0b":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7b83":
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__("7c64"),
    mapCacheDelete = __webpack_require__("93ed"),
    mapCacheGet = __webpack_require__("2478"),
    mapCacheHas = __webpack_require__("a524"),
    mapCacheSet = __webpack_require__("1fc8");

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),

/***/ "7b97":
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__("7e64"),
    equalArrays = __webpack_require__("a2be"),
    equalByTag = __webpack_require__("1c3c"),
    equalObjects = __webpack_require__("b1e5"),
    getTag = __webpack_require__("42a2"),
    isArray = __webpack_require__("6747"),
    isBuffer = __webpack_require__("0d24"),
    isTypedArray = __webpack_require__("73ac");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),

/***/ "7c64":
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__("e24b"),
    ListCache = __webpack_require__("5e2e"),
    Map = __webpack_require__("79bc");

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),

/***/ "7c73":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var defineProperties = __webpack_require__("37e8");
var enumBugKeys = __webpack_require__("7839");
var hiddenKeys = __webpack_require__("d012");
var html = __webpack_require__("1be4");
var documentCreateElement = __webpack_require__("cc12");
var sharedKey = __webpack_require__("f772");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "7d1f":
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__("087d"),
    isArray = __webpack_require__("6747");

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),

/***/ "7db0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $find = __webpack_require__("b727").find;
var addToUnscopables = __webpack_require__("44d2");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var FIND = 'find';
var SKIPS_HOLES = true;

var USES_TO_LENGTH = arrayMethodUsesToLength(FIND);

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);


/***/ }),

/***/ "7dd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createIteratorConstructor = __webpack_require__("9ed3");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var setToStringTag = __webpack_require__("d44e");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");
var Iterators = __webpack_require__("3f8c");
var IteratorsCore = __webpack_require__("ae93");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "7e64":
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__("5e2e"),
    stackClear = __webpack_require__("efb6"),
    stackDelete = __webpack_require__("2fcc"),
    stackGet = __webpack_require__("802a"),
    stackHas = __webpack_require__("55a3"),
    stackSet = __webpack_require__("d02c");

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),

/***/ "7e8e":
/***/ (function(module, exports) {

/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

module.exports = hasUnicodeWord;


/***/ }),

/***/ "7ed2":
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),

/***/ "7f9a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var inspectSource = __webpack_require__("8925");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "802a":
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),

/***/ "8057":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),

/***/ "825a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "8418":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("c04e");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "85e3":
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),

/***/ "8604":
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__("26e8"),
    hasPath = __webpack_require__("e2c0");

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),

/***/ "861d":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "872a":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("3b4a");

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    if (document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "8896":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return HideReason; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DialogType; });
var HideReason;

(function (HideReason) {
  HideReason["Outside"] = "outside";
  HideReason["Close"] = "close";
  HideReason["Esc"] = "esc";
  HideReason["Cancel"] = "cancel";
  HideReason["Ok"] = "ok";
  HideReason["Method"] = "method";
  HideReason["Value"] = "value";
})(HideReason || (HideReason = {}));

var DialogType;

(function (DialogType) {
  DialogType["Alert"] = "alert";
  DialogType["Confirm"] = "confirm";
  DialogType["Prompt"] = "prompt";
})(DialogType || (DialogType = {}));

/***/ }),

/***/ "8925":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("c6cd");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "89d9":
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__("656b"),
    baseSet = __webpack_require__("159a"),
    castPath = __webpack_require__("e2e4");

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    }
  }
  return result;
}

module.exports = basePickBy;


/***/ }),

/***/ "8aa5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "8adb":
/***/ (function(module, exports) {

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

module.exports = safeGet;


/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;

/***/ }),

/***/ "8db3":
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__("47f5");

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),

/***/ "8de2":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    keysIn = __webpack_require__("9934");

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;


/***/ }),

/***/ "8eeb":
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__("32b3"),
    baseAssignValue = __webpack_require__("872a");

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),

/***/ "90b2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export guessOptionValue */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return guessOptionText; });
/* unused harmony export normalizeOption */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return normalizeOptions; });
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d81d");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("9b02");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("dd61");
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_map__WEBPACK_IMPORTED_MODULE_2__);




var guessOptionValue = function guessOptionValue(option, valueAttribute) {
  if (valueAttribute) {
    return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(option, valueAttribute);
  }

  return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(option, 'value', lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(option, 'id', lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(option, 'text')));
};

var guessOptionText = function guessOptionText(option, textAttribute) {
  if (textAttribute) {
    return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(option, textAttribute);
  }

  return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(option, 'text', lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(option, 'label'));
};

var normalizeOption = function normalizeOption(option, textAttribute, valueAttribute) {
  if (typeof option === 'string' || typeof option === 'number' || typeof option === 'boolean') {
    return {
      value: option,
      text: option,
      raw: option
    };
  }

  if (option.children) {
    var children = option.children.map(function (childOption) {
      return normalizeOption(childOption);
    });
    return {
      value: guessOptionValue(option, valueAttribute),
      text: guessOptionText(option, textAttribute),
      children: children
    };
  }

  var normalizedOption = {
    value: guessOptionValue(option, valueAttribute),
    text: guessOptionText(option, textAttribute),
    raw: option
  };

  if (option.disabled !== undefined) {
    normalizedOption.disabled = option.disabled;
  }

  return normalizedOption;
};

var normalizeOptions = function normalizeOptions(options, textAttribute, valueAttribute) {
  if (!options) {
    return [];
  }

  if (Array.isArray(options)) {
    return options.map(function (option) {
      return normalizeOption(option, textAttribute, valueAttribute);
    });
  }

  return lodash_map__WEBPACK_IMPORTED_MODULE_2___default()(options, function (option, key) {
    return {
      value: key,
      text: option
    };
  });
};



/***/ }),

/***/ "90e3":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "9112":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "91e9":
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ "9263":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpFlags = __webpack_require__("ad6d");
var stickyHelpers = __webpack_require__("9f7f");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = regexpFlags.call(re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = flags.replace('y', '');
      if (flags.indexOf('g') === -1) {
        flags += 'g';
      }

      strCopy = String(str).slice(re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = match.input.slice(charsAdded);
        match[0] = match[0].slice(charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "93ed":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),

/***/ "94ca":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "950a":
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__("30c9");

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),

/***/ "9520":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    isObject = __webpack_require__("1a8c");

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ "95bf":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var Key;

(function (Key) {
  Key[Key["LEFT"] = 37] = "LEFT";
  Key[Key["UP"] = 38] = "UP";
  Key[Key["RIGHT"] = 39] = "RIGHT";
  Key[Key["DOWN"] = 40] = "DOWN";
  Key[Key["ENTER"] = 13] = "ENTER";
  Key[Key["ESC"] = 27] = "ESC";
  Key[Key["SPACE"] = 32] = "SPACE";
})(Key || (Key = {}));

/* harmony default export */ __webpack_exports__["a"] = (Key);

/***/ }),

/***/ "9638":
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),

/***/ "966f":
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__("7e64"),
    baseIsEqual = __webpack_require__("c05f");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),

/***/ "97d3":
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__("48a0"),
    isArrayLike = __webpack_require__("30c9");

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),

/***/ "9934":
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__("6fcd"),
    baseKeysIn = __webpack_require__("41c3"),
    isArrayLike = __webpack_require__("30c9");

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),

/***/ "99af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var arraySpeciesCreate = __webpack_require__("65f0");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "99cd":
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),

/***/ "99d3":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__("585a");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("62e4")(module)))

/***/ }),

/***/ "9ab4":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export __extends */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __assign; });
/* unused harmony export __rest */
/* unused harmony export __decorate */
/* unused harmony export __param */
/* unused harmony export __metadata */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __generator; });
/* unused harmony export __createBinding */
/* unused harmony export __exportStar */
/* unused harmony export __values */
/* unused harmony export __read */
/* unused harmony export __spread */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __spreadArrays; });
/* unused harmony export __await */
/* unused harmony export __asyncGenerator */
/* unused harmony export __asyncDelegator */
/* unused harmony export __asyncValues */
/* unused harmony export __makeTemplateObject */
/* unused harmony export __importStar */
/* unused harmony export __importDefault */
/* unused harmony export __classPrivateFieldGet */
/* unused harmony export __classPrivateFieldSet */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "9aff":
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__("9638"),
    isArrayLike = __webpack_require__("30c9"),
    isIndex = __webpack_require__("c098"),
    isObject = __webpack_require__("1a8c");

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),

/***/ "9b02":
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__("656b");

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),

/***/ "9bdd":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    var returnMethod = iterator['return'];
    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
    throw error;
  }
};


/***/ }),

/***/ "9bf2":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");
var anObject = __webpack_require__("825a");
var toPrimitive = __webpack_require__("c04e");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9e69":
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__("2b3e");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "9ed3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("ae93").IteratorPrototype;
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var setToStringTag = __webpack_require__("d44e");
var Iterators = __webpack_require__("3f8c");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "9f7f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__("d039");

// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function RE(s, f) {
  return RegExp(s, f);
}

exports.UNSUPPORTED_Y = fails(function () {
  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
  var re = RE('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

exports.BROKEN_CARET = fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = RE('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});


/***/ }),

/***/ "a029":
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__("087d"),
    getPrototype = __webpack_require__("2dcb"),
    getSymbols = __webpack_require__("32f4"),
    stubArray = __webpack_require__("d327");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),

/***/ "a15b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IndexedObject = __webpack_require__("44ad");
var toIndexedObject = __webpack_require__("fc6a");
var arrayMethodIsStrict = __webpack_require__("a640");

var nativeJoin = [].join;

var ES3_STRINGS = IndexedObject != Object;
var STRICT_METHOD = arrayMethodIsStrict('join', ',');

// `Array.prototype.join` method
// https://tc39.github.io/ecma262/#sec-array.prototype.join
$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
  join: function join(separator) {
    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "a2be":
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__("d612"),
    arraySome = __webpack_require__("4284"),
    cacheHas = __webpack_require__("c584");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),

/***/ "a2bf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__("e8b5");
var toLength = __webpack_require__("50c4");
var bind = __webpack_require__("0366");

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;
  var element;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};

module.exports = flattenIntoArray;


/***/ }),

/***/ "a2db":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69");

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),

/***/ "a434":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var toAbsoluteIndex = __webpack_require__("23cb");
var toInteger = __webpack_require__("a691");
var toLength = __webpack_require__("50c4");
var toObject = __webpack_require__("7b0b");
var arraySpeciesCreate = __webpack_require__("65f0");
var createProperty = __webpack_require__("8418");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');
var USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });

var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "a454":
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__("72f0"),
    defineProperty = __webpack_require__("3b4a"),
    identity = __webpack_require__("cd9d");

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),

/***/ "a4d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var IS_PURE = __webpack_require__("c430");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var createPropertyDescriptor = __webpack_require__("5c6c");
var nativeObjectCreate = __webpack_require__("7c73");
var objectKeys = __webpack_require__("df75");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertyNamesExternal = __webpack_require__("057f");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var shared = __webpack_require__("5692");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");
var uid = __webpack_require__("90e3");
var wellKnownSymbol = __webpack_require__("b622");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineWellKnownSymbol = __webpack_require__("746f");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");
var $forEach = __webpack_require__("b727").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "a524":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),

/***/ "a623":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $every = __webpack_require__("b727").every;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var STRICT_METHOD = arrayMethodIsStrict('every');
var USES_TO_LENGTH = arrayMethodUsesToLength('every');

// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "a630":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var from = __webpack_require__("4df4");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "a640":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "a691":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "a737":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("99af");
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_every__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("a623");
/* harmony import */ var core_js_modules_es_array_every__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_every__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("4de4");
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_find__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("7db0");
/* harmony import */ var core_js_modules_es_array_find__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_find__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_join__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("a15b");
/* harmony import */ var core_js_modules_es_array_join__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_join__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("b64b");
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _Users_alfonso_Projects_vue_tailwind_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("53ca");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("8bbf");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("9b02");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_8__);










var mergeClasses = function mergeClasses(classesA, classesB) {
  var a = classesA;
  var b = classesB; // Convert array of string classes to a single string

  if (Array.isArray(classesA) && classesA.every(function (className) {
    return typeof className === 'string' || !!className;
  })) {
    a = classesA.filter(function (className) {
      return !!className;
    }).join(' ');
  } // Convert array of string classes to a single string


  if (Array.isArray(classesB) && classesB.every(function (className) {
    return typeof className === 'string' || !!className;
  })) {
    b = classesB.filter(function (className) {
      return !!className;
    }).join(' ');
  }

  if (typeof a === 'string' && typeof b === 'string') {
    return a + " " + b;
  }

  if (typeof a === 'string' && Array.isArray(b)) {
    return [a].concat(b);
  }

  if (typeof b === 'string' && Array.isArray(a)) {
    return a.concat([b]);
  }

  if (Array.isArray(a) && Array.isArray(b)) {
    return a.concat(b);
  }

  return [a, b];
};

var Component = vue__WEBPACK_IMPORTED_MODULE_7___default.a.extend({
  props: {
    classes: {
      type: [String, Array, Object],
      default: undefined
    },
    fixedClasses: {
      type: [String, Array, Object],
      default: undefined
    },
    variants: {
      type: Object,
      default: undefined
    },
    variant: {
      type: [String, Object],
      default: undefined
    }
  },
  computed: {
    componentClass: function componentClass() {
      return this.getElementCssClass();
    },
    activeVariant: function activeVariant() {
      var _this = this;

      if (!this.variant) {
        return undefined;
      }

      if (Object(_Users_alfonso_Projects_vue_tailwind_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"])(this.variant) === 'object') {
        var truthyVariant = Object.keys(this.variant).find(function (variant) {
          return !!_this.variant[variant];
        });
        return truthyVariant || undefined;
      }

      return this.variant;
    }
  },
  methods: {
    getElementCssClass: function getElementCssClass(elementName, defaultClasses) {
      if (defaultClasses === void 0) {
        defaultClasses = '';
      }

      var classes;

      if (elementName) {
        if (this.activeVariant) {
          var elementVariant = lodash_get__WEBPACK_IMPORTED_MODULE_8___default()(this.variants, this.activeVariant + "." + elementName); // If the variant exists but not for the element fallback to the default

          if (elementVariant === undefined && lodash_get__WEBPACK_IMPORTED_MODULE_8___default()(this.variants, this.activeVariant) !== undefined) {
            classes = lodash_get__WEBPACK_IMPORTED_MODULE_8___default()(this.classes, elementName, defaultClasses);
          } else {
            classes = elementVariant === undefined ? defaultClasses : elementVariant;
          }
        } else {
          classes = lodash_get__WEBPACK_IMPORTED_MODULE_8___default()(this.classes, elementName, defaultClasses);
        }

        var fixedClasses = lodash_get__WEBPACK_IMPORTED_MODULE_8___default()(this.fixedClasses, elementName);

        if (fixedClasses) {
          return mergeClasses(fixedClasses, classes);
        }

        return classes;
      }

      if (this.activeVariant) {
        classes = lodash_get__WEBPACK_IMPORTED_MODULE_8___default()(this.variants, this.activeVariant, defaultClasses);
      } else {
        classes = this.classes === undefined ? defaultClasses : this.classes;
      }

      if (this.fixedClasses) {
        return mergeClasses(this.fixedClasses, classes);
      }

      return classes;
    }
  }
});
/* harmony default export */ __webpack_exports__["a"] = (Component);

/***/ }),

/***/ "a919":
/***/ (function(module, exports, __webpack_require__) {

var basePropertyOf = __webpack_require__("ddc6");

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 's'
};

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = basePropertyOf(deburredLetters);

module.exports = deburrLetter;


/***/ }),

/***/ "a994":
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__("7d1f"),
    getSymbols = __webpack_require__("32f4"),
    keys = __webpack_require__("ec69");

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),

/***/ "a9e3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var isForced = __webpack_require__("94ca");
var redefine = __webpack_require__("6eeb");
var has = __webpack_require__("5135");
var classof = __webpack_require__("c6b6");
var inheritIfRequired = __webpack_require__("7156");
var toPrimitive = __webpack_require__("c04e");
var fails = __webpack_require__("d039");
var create = __webpack_require__("7c73");
var getOwnPropertyNames = __webpack_require__("241c").f;
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var defineProperty = __webpack_require__("9bf2").f;
var trim = __webpack_require__("58a8").trim;

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;

// `ToNumber` abstract operation
// https://tc39.github.io/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  var first, third, radix, maxCode, digits, length, index, code;
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = it.charCodeAt(0);
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = it.slice(2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = digits.charCodeAt(index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var dummy = this;
    return dummy instanceof NumberWrapper
      // check on 1..constructor(foo) case
      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)
        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);
  };
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "ab13":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (e) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (f) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "ac1f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var exec = __webpack_require__("9263");

$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "ac41":
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),

/***/ "ad6d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__("825a");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "ae40":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");

var defineProperty = Object.defineProperty;
var cache = {};

var thrower = function (it) { throw it; };

module.exports = function (METHOD_NAME, options) {
  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
  if (!options) options = {};
  var method = [][METHOD_NAME];
  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
  var argument0 = has(options, 0) ? options[0] : thrower;
  var argument1 = has(options, 1) ? options[1] : undefined;

  return cache[METHOD_NAME] = !!method && !fails(function () {
    if (ACCESSORS && !DESCRIPTORS) return true;
    var O = { length: -1 };

    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });
    else O[1] = 1;

    method.call(O, argument0, argument1);
  });
};


/***/ }),

/***/ "ae93":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__("e163");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "b041":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classof = __webpack_require__("f5df");

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "b047":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ "b0c0":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var defineProperty = __webpack_require__("9bf2").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "b1e5":
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__("a994");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),

/***/ "b20a":
/***/ (function(module, exports, __webpack_require__) {

var arrayReduce = __webpack_require__("6ac0"),
    deburr = __webpack_require__("4caa"),
    words = __webpack_require__("ea72");

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
  };
}

module.exports = createCompounder;


/***/ }),

/***/ "b218":
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ "b3e9":
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__("d612"),
    arrayIncludes = __webpack_require__("8db3"),
    arrayIncludesWith = __webpack_require__("5edf"),
    arrayMap = __webpack_require__("7948"),
    baseUnary = __webpack_require__("b047"),
    cacheHas = __webpack_require__("c584");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? arrayIncludesWith : arrayIncludes,
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = arrayMap(array, baseUnary(iteratee));
    }
    maxLength = nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
      ? new SetCache(othIndex && array)
      : undefined;
  }
  array = arrays[0];

  var index = -1,
      seen = caches[0];

  outer:
  while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (!(seen
          ? cacheHas(seen, computed)
          : includes(result, computed, comparator)
        )) {
      othIndex = othLength;
      while (--othIndex) {
        var cache = caches[othIndex];
        if (!(cache
              ? cacheHas(cache, computed)
              : includes(arrays[othIndex], computed, comparator))
            ) {
          continue outer;
        }
      }
      if (seen) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseIntersection;


/***/ }),

/***/ "b4b0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("1a8c"),
    isSymbol = __webpack_require__("ffd6");

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),

/***/ "b4c0":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),

/***/ "b575":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var classof = __webpack_require__("c6b6");
var macrotask = __webpack_require__("2cf4").set;
var IS_IOS = __webpack_require__("1cdc");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var IS_NODE = classof(process) == 'process';
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  } else if (MutationObserver && !IS_IOS) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "b5a7":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),

/***/ "b622":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var shared = __webpack_require__("5692");
var has = __webpack_require__("5135");
var uid = __webpack_require__("90e3");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "b64b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var toObject = __webpack_require__("7b0b");
var nativeKeys = __webpack_require__("df75");
var fails = __webpack_require__("d039");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "b680":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var toInteger = __webpack_require__("a691");
var thisNumberValue = __webpack_require__("408a");
var repeat = __webpack_require__("1148");
var fails = __webpack_require__("d039");

var nativeToFixed = 1.0.toFixed;
var floor = Math.floor;

var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

var FORCED = nativeToFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !fails(function () {
  // V8 ~ Android 4.3-
  nativeToFixed.call({});
});

// `Number.prototype.toFixed` method
// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed
$({ target: 'Number', proto: true, forced: FORCED }, {
  // eslint-disable-next-line max-statements
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue(this);
    var fractDigits = toInteger(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k;

    var multiply = function (n, c) {
      var index = -1;
      var c2 = c;
      while (++index < 6) {
        c2 += n * data[index];
        data[index] = c2 % 1e7;
        c2 = floor(c2 / 1e7);
      }
    };

    var divide = function (n) {
      var index = 6;
      var c = 0;
      while (--index >= 0) {
        c += data[index];
        data[index] = floor(c / n);
        c = (c % n) * 1e7;
      }
    };

    var dataToString = function () {
      var index = 6;
      var s = '';
      while (--index >= 0) {
        if (s !== '' || index === 0 || data[index] !== 0) {
          var t = String(data[index]);
          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;
        }
      } return s;
    };

    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare
    if (number != number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return String(number);
    if (number < 0) {
      sign = '-';
      number = -number;
    }
    if (number > 1e-21) {
      e = log(number * pow(2, 69, 1)) - 69;
      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = fractDigits;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        result = dataToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        result = dataToString() + repeat.call('0', fractDigits);
      }
    }
    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits
        ? '0.' + repeat.call('0', fractDigits - k) + result
        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));
    } else {
      result = sign + result;
    } return result;
  }
});


/***/ }),

/***/ "b727":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("0366");
var IndexedObject = __webpack_require__("44ad");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var arraySpeciesCreate = __webpack_require__("65f0");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6)
};


/***/ }),

/***/ "b760":
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__("872a"),
    eq = __webpack_require__("9638");

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;


/***/ }),

/***/ "badf":
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__("642a"),
    baseMatchesProperty = __webpack_require__("1838"),
    identity = __webpack_require__("cd9d"),
    isArray = __webpack_require__("6747"),
    property = __webpack_require__("f9ce");

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),

/***/ "bbc0":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),

/***/ "c04e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "c05f":
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__("7b97"),
    isObjectLike = __webpack_require__("1310");

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),

/***/ "c098":
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),

/***/ "c1c9":
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__("a454"),
    shortOut = __webpack_require__("f3c1");

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),

/***/ "c2b6":
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__("f8af"),
    cloneDataView = __webpack_require__("5d89"),
    cloneRegExp = __webpack_require__("6f6c"),
    cloneSymbol = __webpack_require__("a2db"),
    cloneTypedArray = __webpack_require__("c8fe");

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),

/***/ "c3fc":
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__("42a2"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),

/***/ "c430":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "c584":
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),

/***/ "c6b6":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "c6cd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var setGlobal = __webpack_require__("ce4e");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "c6cf":
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__("4d8c"),
    overRest = __webpack_require__("2286"),
    setToString = __webpack_require__("c1c9");

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;


/***/ }),

/***/ "c740":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $findIndex = __webpack_require__("b727").findIndex;
var addToUnscopables = __webpack_require__("44d2");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

var USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);

// Shouldn't skip holes
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findindex
$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ "c869":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),

/***/ "c87c":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c8d2":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var whitespaces = __webpack_require__("5899");

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),

/***/ "c8fe":
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__("f8af");

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),

/***/ "c975":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $indexOf = __webpack_require__("4d64").indexOf;
var arrayMethodIsStrict = __webpack_require__("a640");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf');
var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "ca84":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toIndexedObject = __webpack_require__("fc6a");
var indexOf = __webpack_require__("4d64").indexOf;
var hiddenKeys = __webpack_require__("d012");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "caad":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $includes = __webpack_require__("4d64").includes;
var addToUnscopables = __webpack_require__("44d2");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });

// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "cb5a":
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__("9638");

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),

/***/ "cc12":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "cc45":
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__("1a2d"),
    baseUnary = __webpack_require__("b047"),
    nodeUtil = __webpack_require__("99d3");

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),

/***/ "cca6":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var assign = __webpack_require__("60da");

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "cd9d":
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),

/***/ "cdf9":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var newPromiseCapability = __webpack_require__("f069");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "ce4e":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "ce86":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69"),
    arrayMap = __webpack_require__("7948"),
    isArray = __webpack_require__("6747"),
    isSymbol = __webpack_require__("ffd6");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),

/***/ "d012":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "d02c":
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__("5e2e"),
    Map = __webpack_require__("79bc"),
    MapCache = __webpack_require__("7b83");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),

/***/ "d039":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "d066":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var global = __webpack_require__("da84");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d173":
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__("7948"),
    baseIntersection = __webpack_require__("b3e9"),
    baseRest = __webpack_require__("100e"),
    castArrayLikeObject = __webpack_require__("5f36");

/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = baseRest(function(arrays) {
  var mapped = arrayMap(arrays, castArrayLikeObject);
  return (mapped.length && mapped[0] === arrays[0])
    ? baseIntersection(mapped)
    : [];
});

module.exports = intersection;


/***/ }),

/***/ "d1e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "d28b":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("746f");

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "d2bb":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aPossiblePrototype = __webpack_require__("3bbe");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "d327":
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),

/***/ "d370":
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__("253c"),
    isObjectLike = __webpack_require__("1310");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ "d3b7":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var redefine = __webpack_require__("6eeb");
var toString = __webpack_require__("b041");

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d44e":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("9bf2").f;
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "d612":
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__("7b83"),
    setCacheAdd = __webpack_require__("7ed2"),
    setCacheHas = __webpack_require__("dc0f");

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),

/***/ "d784":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__("ac1f");
var redefine = __webpack_require__("6eeb");
var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var regexpExec = __webpack_require__("9263");
var createNonEnumerableProperty = __webpack_require__("9112");

var SPECIES = wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  return 'a'.replace(/./, '$0') === '$0';
})();

var REPLACE = wellKnownSymbol('replace');
// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

module.exports = function (KEY, length, exec, sham) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !(
      REPLACE_SUPPORTS_NAMED_GROUPS &&
      REPLACE_KEEPS_$0 &&
      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    )) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === regexpExec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    }, {
      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
    });
    var stringMethod = methods[0];
    var regexMethod = methods[1];

    redefine(String.prototype, KEY, stringMethod);
    redefine(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return regexMethod.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return regexMethod.call(string, this); }
    );
  }

  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "d7ee":
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__("c3fc"),
    baseUnary = __webpack_require__("b047"),
    nodeUtil = __webpack_require__("99d3");

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),

/***/ "d81d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $map = __webpack_require__("b727").map;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');
// FF49- issue
var USES_TO_LENGTH = arrayMethodUsesToLength('map');

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "d9a8":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),

/***/ "da03":
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__("2b3e");

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ "da84":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func
  Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "dc0f":
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),

/***/ "dc57":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ "dcbe":
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__("30c9"),
    isObjectLike = __webpack_require__("1310");

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),

/***/ "dd61":
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__("7948"),
    baseIteratee = __webpack_require__("badf"),
    baseMap = __webpack_require__("97d3"),
    isArray = __webpack_require__("6747");

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var ArrayIteratorMethods = __webpack_require__("e260");
var createNonEnumerableProperty = __webpack_require__("9112");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "ddc6":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

module.exports = basePropertyOf;


/***/ }),

/***/ "df75":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "e01a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var has = __webpack_require__("5135");
var isObject = __webpack_require__("861d");
var defineProperty = __webpack_require__("9bf2").f;
var copyConstructorProperties = __webpack_require__("e893");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "e163":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toObject = __webpack_require__("7b0b");
var sharedKey = __webpack_require__("f772");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "e177":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "e181":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return disableBodyScroll; });
/* unused harmony export clearAllBodyScrollLocks */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return enableBodyScroll; });
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// Older browsers don't support event options, feature detect it.

// Adopted and modified solution from Bohdan Didukh (2017)
// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi

var hasPassiveEvents = false;
if (typeof window !== 'undefined') {
  var passiveTestOptions = {
    get passive() {
      hasPassiveEvents = true;
      return undefined;
    }
  };
  window.addEventListener('testPassive', null, passiveTestOptions);
  window.removeEventListener('testPassive', null, passiveTestOptions);
}

var isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);


var locks = [];
var documentListenerAdded = false;
var initialClientY = -1;
var previousBodyOverflowSetting = void 0;
var previousBodyPaddingRight = void 0;

// returns true if `el` should be allowed to receive touchmove events.
var allowTouchMove = function allowTouchMove(el) {
  return locks.some(function (lock) {
    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {
      return true;
    }

    return false;
  });
};

var preventDefault = function preventDefault(rawEvent) {
  var e = rawEvent || window.event;

  // For the case whereby consumers adds a touchmove event listener to document.
  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })
  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then
  // the touchmove event on document will break.
  if (allowTouchMove(e.target)) {
    return true;
  }

  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).
  if (e.touches.length > 1) return true;

  if (e.preventDefault) e.preventDefault();

  return false;
};

var setOverflowHidden = function setOverflowHidden(options) {
  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down
  // the responsiveness for some reason. Setting within a setTimeout fixes this.
  setTimeout(function () {
    // If previousBodyPaddingRight is already set, don't set it again.
    if (previousBodyPaddingRight === undefined) {
      var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;
      var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;

      if (_reserveScrollBarGap && scrollBarGap > 0) {
        previousBodyPaddingRight = document.body.style.paddingRight;
        document.body.style.paddingRight = scrollBarGap + 'px';
      }
    }

    // If previousBodyOverflowSetting is already set, don't set it again.
    if (previousBodyOverflowSetting === undefined) {
      previousBodyOverflowSetting = document.body.style.overflow;
      document.body.style.overflow = 'hidden';
    }
  });
};

var restoreOverflowSetting = function restoreOverflowSetting() {
  // Setting overflow on body/documentElement synchronously in Desktop Safari slows down
  // the responsiveness for some reason. Setting within a setTimeout fixes this.
  setTimeout(function () {
    if (previousBodyPaddingRight !== undefined) {
      document.body.style.paddingRight = previousBodyPaddingRight;

      // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it
      // can be set again.
      previousBodyPaddingRight = undefined;
    }

    if (previousBodyOverflowSetting !== undefined) {
      document.body.style.overflow = previousBodyOverflowSetting;

      // Restore previousBodyOverflowSetting to undefined
      // so setOverflowHidden knows it can be set again.
      previousBodyOverflowSetting = undefined;
    }
  });
};

// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions
var isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {
  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;
};

var handleScroll = function handleScroll(event, targetElement) {
  var clientY = event.targetTouches[0].clientY - initialClientY;

  if (allowTouchMove(event.target)) {
    return false;
  }

  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {
    // element is at the top of its scroll.
    return preventDefault(event);
  }

  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {
    // element is at the bottom of its scroll.
    return preventDefault(event);
  }

  event.stopPropagation();
  return true;
};

var disableBodyScroll = function disableBodyScroll(targetElement, options) {
  if (isIosDevice) {
    // targetElement must be provided, and disableBodyScroll must not have been
    // called on this targetElement before.
    if (!targetElement) {
      // eslint-disable-next-line no-console
      console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');
      return;
    }

    if (targetElement && !locks.some(function (lock) {
      return lock.targetElement === targetElement;
    })) {
      var lock = {
        targetElement: targetElement,
        options: options || {}
      };

      locks = [].concat(_toConsumableArray(locks), [lock]);

      targetElement.ontouchstart = function (event) {
        if (event.targetTouches.length === 1) {
          // detect single touch.
          initialClientY = event.targetTouches[0].clientY;
        }
      };
      targetElement.ontouchmove = function (event) {
        if (event.targetTouches.length === 1) {
          // detect single touch.
          handleScroll(event, targetElement);
        }
      };

      if (!documentListenerAdded) {
        document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);
        documentListenerAdded = true;
      }
    }
  } else {
    setOverflowHidden(options);
    var _lock = {
      targetElement: targetElement,
      options: options || {}
    };

    locks = [].concat(_toConsumableArray(locks), [_lock]);
  }
};

var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {
  if (isIosDevice) {
    // Clear all locks ontouchstart/ontouchmove handlers, and the references.
    locks.forEach(function (lock) {
      lock.targetElement.ontouchstart = null;
      lock.targetElement.ontouchmove = null;
    });

    if (documentListenerAdded) {
      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);
      documentListenerAdded = false;
    }

    locks = [];

    // Reset initial clientY.
    initialClientY = -1;
  } else {
    restoreOverflowSetting();
    locks = [];
  }
};

var enableBodyScroll = function enableBodyScroll(targetElement) {
  if (isIosDevice) {
    if (!targetElement) {
      // eslint-disable-next-line no-console
      console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');
      return;
    }

    targetElement.ontouchstart = null;
    targetElement.ontouchmove = null;

    locks = locks.filter(function (lock) {
      return lock.targetElement !== targetElement;
    });

    if (documentListenerAdded && locks.length === 0) {
      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);

      documentListenerAdded = false;
    }
  } else {
    locks = locks.filter(function (lock) {
      return lock.targetElement !== targetElement;
    });
    if (!locks.length) {
      restoreOverflowSetting();
    }
  }
};



/***/ }),

/***/ "e24b":
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__("49f4"),
    hashDelete = __webpack_require__("1efc"),
    hashGet = __webpack_require__("bbc0"),
    hashHas = __webpack_require__("7a48"),
    hashSet = __webpack_require__("2524");

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),

/***/ "e260":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var addToUnscopables = __webpack_require__("44d2");
var Iterators = __webpack_require__("3f8c");
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "e2c0":
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__("e2e4"),
    isArguments = __webpack_require__("d370"),
    isArray = __webpack_require__("6747"),
    isIndex = __webpack_require__("c098"),
    isLength = __webpack_require__("b218"),
    toKey = __webpack_require__("f4d6");

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),

/***/ "e2cc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("6eeb");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "e2e4":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("6747"),
    isKey = __webpack_require__("f608"),
    stringToPath = __webpack_require__("18d8"),
    toString = __webpack_require__("76dd");

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),

/***/ "e380":
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__("7b83");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),

/***/ "e3f8":
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__("656b");

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "e5383":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__("2b3e");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("62e4")(module)))

/***/ }),

/***/ "e667":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "e6cf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IS_PURE = __webpack_require__("c430");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var NativePromise = __webpack_require__("fea9");
var redefine = __webpack_require__("6eeb");
var redefineAll = __webpack_require__("e2cc");
var setToStringTag = __webpack_require__("d44e");
var setSpecies = __webpack_require__("2626");
var isObject = __webpack_require__("861d");
var aFunction = __webpack_require__("1c0b");
var anInstance = __webpack_require__("19aa");
var classof = __webpack_require__("c6b6");
var inspectSource = __webpack_require__("8925");
var iterate = __webpack_require__("2266");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var speciesConstructor = __webpack_require__("4840");
var task = __webpack_require__("2cf4").set;
var microtask = __webpack_require__("b575");
var promiseResolve = __webpack_require__("cdf9");
var hostReportErrors = __webpack_require__("44de");
var newPromiseCapabilityModule = __webpack_require__("f069");
var perform = __webpack_require__("e667");
var InternalStateModule = __webpack_require__("69f3");
var isForced = __webpack_require__("94ca");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = NativePromise;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = getBuiltIn('fetch');
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var IS_NODE = classof(process) == 'process';
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
  if (!GLOBAL_CORE_JS_PROMISE) {
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (V8_VERSION === 66) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    if (!IS_NODE && typeof PromiseRejectionEvent != 'function') return true;
  }
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (promise, state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(promise, state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (handler = global['on' + name]) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (promise, state) {
  task.call(global, function () {
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (promise, state) {
  task.call(global, function () {
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, promise, state, unwrap) {
  return function (value) {
    fn(promise, state, value, unwrap);
  };
};

var internalReject = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(promise, state, true);
};

var internalResolve = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, promise, wrapper, state),
            bind(internalReject, promise, wrapper, state)
          );
        } catch (error) {
          internalReject(promise, wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(promise, state, false);
    }
  } catch (error) {
    internalReject(promise, { done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, this, state), bind(internalReject, this, state));
    } catch (error) {
      internalReject(this, state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(this, state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, promise, state);
    this.reject = bind(internalReject, promise, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function') {
    nativeThen = NativePromise.prototype.then;

    // wrap native Promise#then for native async functions
    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
      var that = this;
      return new PromiseConstructor(function (resolve, reject) {
        nativeThen.call(that, resolve, reject);
      }).then(onFulfilled, onRejected);
    // https://github.com/zloirock/core-js/issues/640
    }, { unsafe: true });

    // wrap fetch result
    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
      // eslint-disable-next-line no-unused-vars
      fetch: function fetch(input /* , init */) {
        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
      }
    });
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.github.io/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.github.io/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.github.io/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.github.io/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "e893":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var ownKeys = __webpack_require__("56ef");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "e8b5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "e95a":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var Iterators = __webpack_require__("3f8c");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "ea72":
/***/ (function(module, exports, __webpack_require__) {

var asciiWords = __webpack_require__("7559"),
    hasUnicodeWord = __webpack_require__("7e8e"),
    toString = __webpack_require__("76dd"),
    unicodeWords = __webpack_require__("f4d9");

/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
  }
  return string.match(pattern) || [];
}

module.exports = words;


/***/ }),

/***/ "eac5":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ "ec69":
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__("6fcd"),
    baseKeys = __webpack_require__("03dd"),
    isArrayLike = __webpack_require__("30c9");

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),

/***/ "ec8c":
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),

/***/ "edfa":
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),

/***/ "ef5d":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),

/***/ "efb6":
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__("5e2e");

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),

/***/ "f069":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "f11b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export extractPropsFromLibrarySettings */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return extractPropsFromComponentSettings; });
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4160");
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("caad");
/* harmony import */ var core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("b64b");
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("159b");
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Users_alfonso_Projects_vue_tailwind_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("53ca");






var extractPropsFromComponentSettings = function extractPropsFromComponentSettings(customPropsValues, component) {
  var _a;

  if (!customPropsValues) {
    return undefined;
  }

  var componentProps = (_a = component === null || component === void 0 ? void 0 : component.options) === null || _a === void 0 ? void 0 : _a.props;
  var customProps = {};
  Object.keys(customPropsValues).forEach(function (propName) {
    var defaultProp = componentProps ? componentProps[propName] : undefined;
    var newDefaultValue = customPropsValues[propName];
    customProps[propName] = {
      type: defaultProp === null || defaultProp === void 0 ? void 0 : defaultProp.type,
      default: ['object', 'function'].includes(Object(_Users_alfonso_Projects_vue_tailwind_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"])(newDefaultValue)) ? function () {
        return newDefaultValue;
      } : newDefaultValue
    };
  });

  if (Object.keys(customProps).length) {
    return customProps;
  }

  return undefined;
};

var extractPropsFromLibrarySettings = function extractPropsFromSettings(options, componentName, component) {
  if (options && options[componentName]) {
    return extractPropsFromComponentSettings(options[componentName], component);
  }

  return undefined;
};



/***/ }),

/***/ "f3c1":
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),

/***/ "f4d6":
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__("ffd6");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),

/***/ "f4d9":
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
  rsUpper + '+' + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

module.exports = unicodeWords;


/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classofRaw = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "f608":
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__("6747"),
    isSymbol = __webpack_require__("ffd6");

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),

/***/ "f772":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5692");
var uid = __webpack_require__("90e3");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "f876":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("caad");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
var es_object_assign = __webpack_require__("cca6");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("2532");

// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__("9ab4");

// EXTERNAL MODULE: ./src/base/Component.ts
var Component = __webpack_require__("a737");

// EXTERNAL MODULE: ./src/types/Key.ts
var Key = __webpack_require__("95bf");

// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__("8bbf");
var external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_);

// EXTERNAL MODULE: ./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js
var bodyScrollLock_esm = __webpack_require__("e181");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.js
var es_promise = __webpack_require__("e6cf");

// EXTERNAL MODULE: ./src/types/Dialog.ts
var Dialog = __webpack_require__("8896");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("a630");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
var es_array_map = __webpack_require__("d81d");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./src/utils/inputOptions.ts
var inputOptions = __webpack_require__("90b2");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("25f0");

// CONCATENATED MODULE: ./src/utils/uniqid.ts



var uniqid = function uniqid() {
  return Math.random().toString(36).substring(7);
};

/* harmony default export */ var utils_uniqid = (uniqid);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransitionDialogContentInput.ts










var TDialogOverlayWrapperTransitionDialogContentInput = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransitionDialogContentInput',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    inputAttributes: {
      type: Object,
      default: undefined
    },
    inputType: {
      type: String,
      required: true
    },
    inputValue: {
      type: [String, Array],
      default: undefined
    },
    inputPlaceholder: {
      type: String,
      default: undefined
    },
    inputOptions: {
      type: [Array, Object],
      default: undefined
    }
  },
  data: function data() {
    return {
      errorMessage: null
    };
  },
  mounted: function mounted() {
    this.inputHandler();
  },
  methods: {
    getInputValue: function getInputValue() {
      var input = this.$refs.input;

      if (!input) {
        return undefined;
      }

      var inputName = input.name;

      if (input.type === 'radio') {
        var checkedRadio = this.$refs.inputWrapper.querySelector("input[name=\"" + inputName + "\"]:checked");
        return checkedRadio ? checkedRadio.value : null;
      }

      if (input.type === 'checkbox') {
        if (this.inputOptions) {
          var checkedCheckboxes = this.$refs.inputWrapper.querySelectorAll("input[name=\"" + inputName + "\"]:checked");
          var inititalValue = Array.from(checkedCheckboxes).map(function (checkbox) {
            return checkbox.value;
          });
          return inititalValue;
        }

        return input.checked ? input.value : null;
      }

      return input.value;
    },
    inputHandler: function inputHandler() {
      this.errorMessage = null;
      var inputValue = this.getInputValue();
      this.$emit('input', inputValue);
    }
  },
  render: function render(createElement) {
    var _this = this;

    var input;

    if (this.inputType === 'select') {
      var options = Object(inputOptions["b" /* normalizeOptions */])(this.inputOptions || []).map(function (option) {
        var isSelected = _this.inputValue === option.value;
        return createElement('option', {
          domProps: {
            value: option.value,
            selected: isSelected
          }
        }, String(option.text));
      });
      input = createElement('select', {
        class: this.getElementCssClass('select'),
        ref: 'input',
        attrs: Object(tslib_es6["a" /* __assign */])({
          name: 'input'
        }, this.inputAttributes),
        on: {
          change: this.inputHandler
        }
      }, options);
    } else if (this.inputType === 'radio') {
      input = Object(inputOptions["b" /* normalizeOptions */])(this.inputOptions || []).map(function (option) {
        var isChecked = _this.inputValue === option.value;
        return createElement('label', {
          class: _this.getElementCssClass('radioWrapper'),
          attrs: {
            for: "input-" + String(option.value)
          }
        }, [createElement('input', {
          class: _this.getElementCssClass('radio'),
          ref: 'input',
          attrs: Object(tslib_es6["a" /* __assign */])({
            type: 'radio',
            name: 'input',
            id: "input-" + String(option.value),
            value: option.value,
            checked: isChecked
          }, _this.inputAttributes),
          on: {
            change: _this.inputHandler
          }
        }), createElement('span', {
          class: _this.getElementCssClass('radioText')
        }, String(option.text))]);
      });
    } else if (this.inputType === 'checkbox') {
      if (this.inputOptions) {
        input = Object(inputOptions["b" /* normalizeOptions */])(this.inputOptions || []).map(function (option) {
          var isChecked = Array.isArray(_this.inputValue) ? _this.inputValue.includes(option.value) : _this.inputValue === option.value;
          return createElement('label', {
            class: _this.getElementCssClass('checkboxWrapper'),
            attrs: {
              for: "input-" + String(option.value)
            }
          }, [createElement('input', {
            class: _this.getElementCssClass('checkbox'),
            ref: 'input',
            attrs: Object(tslib_es6["a" /* __assign */])({
              type: 'checkbox',
              name: 'input[]',
              id: "input-" + String(option.value),
              value: option.value,
              checked: isChecked
            }, _this.inputAttributes),
            on: {
              change: _this.inputHandler
            }
          }), createElement('span', {
            class: _this.getElementCssClass('checkboxText')
          }, String(option.text))]);
        });
      } else {
        var id = utils_uniqid();
        input = createElement('label', {
          class: this.getElementCssClass('checkboxWrapper'),
          attrs: {
            for: "input-" + id
          }
        }, [createElement('input', {
          class: this.getElementCssClass('checkbox'),
          ref: 'input',
          attrs: Object(tslib_es6["a" /* __assign */])({
            type: 'checkbox',
            name: 'input',
            id: "input-" + id,
            value: this.inputValue
          }, this.inputAttributes),
          on: {
            change: this.inputHandler
          }
        }), createElement('span', {
          class: this.getElementCssClass('checkboxText')
        }, this.inputPlaceholder ? String(this.inputPlaceholder) : '')]);
      }
    } else {
      input = createElement('input', {
        class: this.getElementCssClass('input'),
        ref: 'input',
        domProps: {
          value: this.inputValue
        },
        attrs: Object(tslib_es6["a" /* __assign */])({
          name: 'input',
          type: this.inputType,
          placeholder: this.inputPlaceholder
        }, this.inputAttributes),
        on: {
          input: this.inputHandler
        }
      });
    }

    return createElement('div', {
      ref: 'inputWrapper',
      class: this.getElementCssClass('inputWrapper')
    }, Array.isArray(input) ? input : [input]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransitionDialogContentInput = (TDialogOverlayWrapperTransitionDialogContentInput);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransitionDialogContent.ts



var TDialogOverlayWrapperTransitionDialogContent = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransitionDialogContent',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    titleTag: {
      type: String,
      required: true
    },
    title: {
      type: String,
      default: undefined
    },
    textTag: {
      type: String,
      required: true
    },
    text: {
      type: String,
      default: undefined
    },
    type: {
      type: String,
      required: true
    },
    inputAttributes: {
      type: Object,
      default: undefined
    },
    inputType: {
      type: String,
      required: true
    },
    inputValue: {
      type: [String, Array],
      default: undefined
    },
    inputPlaceholder: {
      type: String,
      default: undefined
    },
    inputOptions: {
      type: [Array, Object],
      default: undefined
    },
    errorMessage: {
      type: String,
      required: true
    }
  },
  render: function render(createElement) {
    var _this = this;

    var subElements = [];

    if (this.title || this.$scopedSlots.title) {
      if (this.$scopedSlots.title) {
        subElements.push(createElement('div', {
          class: this.getElementCssClass('titleWrapper')
        }, [this.$scopedSlots.title({
          class: this.getElementCssClass('title')
        })]));
      } else {
        subElements.push(createElement('div', {
          class: this.getElementCssClass('titleWrapper')
        }, [createElement(this.titleTag, {
          class: this.getElementCssClass('title')
        }, this.title || '')]));
      }
    }

    if (this.$slots.default) {
      subElements.push(createElement('div', {
        class: this.getElementCssClass('textWrapper')
      }, this.$slots.default));
    } else if (this.text) {
      subElements.push(createElement('div', {
        class: this.getElementCssClass('textWrapper')
      }, this.text ? [createElement(this.textTag, {
        class: this.getElementCssClass('text')
      }, this.text)] : undefined));
    }

    if (this.type === Dialog["a" /* DialogType */].Prompt) {
      subElements.push(createElement(TDialog_TDialogOverlayWrapperTransitionDialogContentInput, {
        props: {
          getElementCssClass: this.getElementCssClass,
          inputAttributes: this.inputAttributes,
          inputType: this.inputType,
          inputValue: this.inputValue,
          inputOptions: this.inputOptions,
          inputPlaceholder: this.inputPlaceholder
        },
        on: {
          input: function input(val) {
            return _this.$emit('input', val);
          }
        }
      }));
    }

    if (this.errorMessage && typeof this.errorMessage === 'string') {
      subElements.push(createElement('div', {
        class: this.getElementCssClass('errorMessage')
      }, this.errorMessage));
    }

    return createElement('div', {
      class: this.getElementCssClass('content')
    }, subElements);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransitionDialogContent = (TDialogOverlayWrapperTransitionDialogContent);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransitionDialogIcon.ts

var IconName;

(function (IconName) {
  IconName["Success"] = "success";
  IconName["Error"] = "error";
  IconName["Warning"] = "warning";
  IconName["Info"] = "info";
  IconName["Question"] = "question";
})(IconName || (IconName = {}));

function getHtmlSvgPath(iconName) {
  if (!iconName) {
    return undefined;
  }

  var icons = {};
  icons[IconName.Success] = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>';
  icons[IconName.Error] = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
  icons[IconName.Warning] = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>';
  icons[IconName.Info] = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>';
  icons[IconName.Question] = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>';
  return icons[iconName];
}

var TDialogOverlayWrapperTransitionDialogIcon = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransitionDialogIcon',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    icon: {
      type: String,
      default: undefined
    }
  },
  render: function render(createElement) {
    if (this.$scopedSlots.icon) {
      return createElement('div', {
        class: this.getElementCssClass('iconWrapper')
      }, [this.$scopedSlots.icon({})]);
    }

    var htmlSvgPath = getHtmlSvgPath(this.icon);

    if (!htmlSvgPath) {
      return createElement();
    }

    return createElement('div', {
      class: this.getElementCssClass('iconWrapper')
    }, [createElement('svg', {
      class: this.getElementCssClass('icon'),
      attrs: {
        fill: 'none',
        stroke: 'currentColor',
        viewBox: '0 0 24 24',
        xmlns: 'http://www.w3.org/2000/svg'
      },
      domProps: {
        innerHTML: htmlSvgPath
      }
    })]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransitionDialogIcon = (TDialogOverlayWrapperTransitionDialogIcon);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransitionDialogClose.ts

var TDialogOverlayWrapperTransitionDialogClose = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransitionDialogClose',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    showCloseButton: {
      type: Boolean,
      required: true
    }
  },
  render: function render(createElement) {
    var _this = this;

    if (!this.showCloseButton) {
      return createElement();
    }

    if (this.$scopedSlots.closeButton) {
      return createElement('button', {
        class: this.getElementCssClass('close'),
        attrs: {
          type: 'button'
        },
        on: {
          click: function click(e) {
            return _this.$emit('hide', e);
          }
        }
      }, [this.$scopedSlots.closeButton({})]);
    }

    return createElement('button', {
      class: this.getElementCssClass('close'),
      attrs: {
        type: 'button'
      },
      on: {
        click: function click(e) {
          return _this.$emit('hide', e);
        }
      }
    }, [createElement('svg', {
      attrs: {
        fill: 'currentColor',
        xmlns: 'http://www.w3.org/2000/svg',
        viewBox: '0 0 20 20'
      },
      class: this.getElementCssClass('closeIcon')
    }, [createElement('path', {
      attrs: {
        'clip-rule': 'evenodd',
        'fill-rule': 'evenodd',
        d: 'M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'
      }
    })])]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransitionDialogClose = (TDialogOverlayWrapperTransitionDialogClose);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransitionDialogLoader.ts

var TDialogOverlayWrapperTransitionDialogLoader = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransitionDialogLoader',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    busy: {
      type: Boolean,
      required: true
    }
  },
  render: function render(createElement) {
    if (!this.busy) {
      return createElement();
    }

    if (this.$scopedSlots.loader) {
      return createElement('div', {
        class: this.getElementCssClass('busyWrapper')
      }, [this.$scopedSlots.loader({})]);
    }

    return createElement('div', {
      class: this.getElementCssClass('busyWrapper')
    }, [createElement('svg', {
      attrs: {
        xmlns: 'http://www.w3.org/2000/svg',
        width: 32,
        height: 32,
        viewBox: '0 0 32 32'
      },
      class: this.getElementCssClass('busyIcon')
    }, [createElement('g', {
      attrs: {
        transform: 'scale(0.03125 0.03125)'
      }
    }, [createElement('path', {
      attrs: {
        d: 'M512 1024c-136.76 0-265.334-53.258-362.040-149.96-96.702-96.706-149.96-225.28-149.96-362.040 0-96.838 27.182-191.134 78.606-272.692 50-79.296 120.664-143.372 204.356-185.3l43 85.832c-68.038 34.084-125.492 86.186-166.15 150.67-41.746 66.208-63.812 142.798-63.812 221.49 0 229.382 186.618 416 416 416s416-186.618 416-416c0-78.692-22.066-155.282-63.81-221.49-40.66-64.484-98.114-116.584-166.15-150.67l43-85.832c83.692 41.928 154.358 106.004 204.356 185.3 51.422 81.558 78.604 175.854 78.604 272.692 0 136.76-53.258 265.334-149.96 362.040-96.706 96.702-225.28 149.96-362.040 149.96z'
      }
    })])])]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransitionDialogLoader = (TDialogOverlayWrapperTransitionDialogLoader);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransitionDialogButtons.ts


var TDialogOverlayWrapperTransitionDialogButtons = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransitionDialogButtons',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    cancelButtonText: {
      type: String,
      required: true
    },
    cancelButtonAriaLabel: {
      type: String,
      default: undefined
    },
    okButtonText: {
      type: String,
      required: true
    },
    okButtonAriaLabel: {
      type: String,
      default: undefined
    },
    type: {
      type: String,
      required: true
    }
  },
  methods: {
    cancel: function cancel(e) {
      this.$emit('cancel', e);
    },
    ok: function ok(e) {
      this.$emit('submit', e);
    }
  },
  render: function render(createElement) {
    var type = this.type;

    if (this.$scopedSlots.buttons) {
      return createElement('div', {
        class: this.getElementCssClass('buttons')
      }, [this.$scopedSlots.buttons({
        cancelButtonAriaLabel: this.cancelButtonAriaLabel,
        okButtonAriaLabel: this.okButtonAriaLabel,
        cancelButtonText: this.cancelButtonText,
        okButtonText: this.okButtonText,
        okButtonClass: this.getElementCssClass('okButton'),
        cancelButtonClass: this.getElementCssClass('cancelButton'),
        dialogType: type,
        cancel: this.cancel,
        ok: this.ok
      })]);
    }

    var subElements = [];
    var buttons = {
      cancel: createElement('button', {
        attrs: {
          type: 'button',
          'aria-label': this.cancelButtonAriaLabel
        },
        class: this.getElementCssClass('cancelButton'),
        on: {
          click: this.cancel
        }
      }, this.cancelButtonText),
      ok: createElement('button', {
        attrs: {
          type: 'button',
          'aria-label': this.okButtonAriaLabel
        },
        class: this.getElementCssClass('okButton'),
        on: {
          click: this.ok
        }
      }, this.okButtonText)
    };

    if (type === Dialog["a" /* DialogType */].Alert) {
      subElements.push(buttons.ok);
    } else if (type === Dialog["a" /* DialogType */].Confirm || type === Dialog["a" /* DialogType */].Prompt) {
      subElements.push(buttons.cancel);
      subElements.push(buttons.ok);
    }

    return createElement('div', {
      class: this.getElementCssClass('buttons')
    }, subElements);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransitionDialogButtons = (TDialogOverlayWrapperTransitionDialogButtons);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransitionDialog.ts








var TDialogOverlayWrapperTransitionDialog = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransitionDialog',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    dialogShow: {
      type: Boolean,
      required: true
    },
    titleTag: {
      type: String,
      required: true
    },
    title: {
      type: String,
      default: undefined
    },
    icon: {
      type: String,
      default: undefined
    },
    textTag: {
      type: String,
      required: true
    },
    text: {
      type: String,
      default: undefined
    },
    cancelButtonText: {
      type: String,
      required: true
    },
    cancelButtonAriaLabel: {
      type: String,
      default: undefined
    },
    okButtonText: {
      type: String,
      required: true
    },
    okButtonAriaLabel: {
      type: String,
      default: undefined
    },
    showCloseButton: {
      type: Boolean,
      required: true
    },
    preConfirm: {
      type: Function,
      default: undefined
    },
    inputAttributes: {
      type: Object,
      default: undefined
    },
    inputType: {
      type: String,
      required: true
    },
    inputValidator: {
      type: Function,
      default: undefined
    },
    inputValue: {
      type: [String, Array],
      default: undefined
    },
    inputOptions: {
      type: [Array, Object],
      default: undefined
    },
    inputPlaceholder: {
      type: String,
      default: undefined
    },
    type: {
      type: String,
      required: true
    }
  },
  data: function data() {
    return {
      currentValue: null,
      errorMessage: '',
      busy: false
    };
  },
  methods: {
    submitHandler: function submitHandler(e) {
      var _this = this;

      return this.resolveParam(this.inputValidator, this.currentValue).then(function (errorMessage) {
        if (errorMessage && typeof errorMessage === 'string') {
          _this.errorMessage = String(errorMessage);
          return;
        }

        _this.resolveParam(_this.preConfirm, _this.currentValue).then(function (response) {
          _this.$emit('submit', e, _this.currentValue, response);
        }).catch(function (error) {
          _this.$emit('submitError', e, _this.currentValue, error);
        }).then(function () {
          _this.busy = false;
        });
      }).catch(function (errorMessage) {
        _this.errorMessage = String(errorMessage);
      });
    },
    inputHandler: function inputHandler(input) {
      this.errorMessage = '';
      this.currentValue = input;
    },
    resolveParam: function resolveParam(resolvable, input) {
      if (typeof resolvable === 'function') {
        var result_1 = resolvable(input);

        if (result_1 instanceof Promise) {
          this.busy = true;
          return result_1;
        }

        return new Promise(function (resolve) {
          resolve(result_1);
        });
      }

      return new Promise(function (resolve) {
        return resolve();
      });
    }
  },
  render: function render(createElement) {
    var _this = this;

    if (!this.dialogShow) {
      return createElement();
    }

    return createElement('div', {
      ref: 'dialog',
      class: this.getElementCssClass('dialog')
    }, [createElement(TDialog_TDialogOverlayWrapperTransitionDialogLoader, {
      props: {
        getElementCssClass: this.getElementCssClass,
        busy: this.busy
      },
      scopedSlots: {
        loader: this.$scopedSlots.loader
      }
    }), createElement(TDialog_TDialogOverlayWrapperTransitionDialogClose, {
      props: {
        getElementCssClass: this.getElementCssClass,
        showCloseButton: this.showCloseButton
      },
      on: {
        dismiss: function dismiss(e) {
          return _this.$emit('dismiss', e);
        }
      },
      scopedSlots: {
        closeButton: this.$scopedSlots.closeButton
      }
    }), createElement('div', {
      ref: 'body',
      class: this.getElementCssClass('body')
    }, [createElement(TDialog_TDialogOverlayWrapperTransitionDialogIcon, {
      props: {
        getElementCssClass: this.getElementCssClass,
        icon: this.icon
      },
      scopedSlots: {
        icon: this.$scopedSlots.icon
      }
    }), createElement(TDialog_TDialogOverlayWrapperTransitionDialogContent, {
      props: {
        getElementCssClass: this.getElementCssClass,
        titleTag: this.titleTag,
        title: this.title,
        textTag: this.textTag,
        text: this.text,
        type: this.type,
        inputAttributes: this.inputAttributes,
        inputType: this.inputType,
        inputValue: this.inputValue,
        inputOptions: this.inputOptions,
        inputPlaceholder: this.inputPlaceholder,
        errorMessage: this.errorMessage
      },
      on: {
        input: this.inputHandler
      },
      scopedSlots: {
        title: this.$scopedSlots.title
      }
    }, this.$slots.default)]), createElement(TDialog_TDialogOverlayWrapperTransitionDialogButtons, {
      props: {
        getElementCssClass: this.getElementCssClass,
        type: this.type,
        cancelButtonText: this.cancelButtonText,
        cancelButtonAriaLabel: this.cancelButtonAriaLabel,
        okButtonText: this.okButtonText,
        okButtonAriaLabel: this.okButtonAriaLabel
      },
      on: {
        cancel: function cancel(e) {
          return _this.$emit('cancel', e);
        },
        submit: this.submitHandler
      },
      scopedSlots: {
        buttons: this.$scopedSlots.buttons
      }
    })]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransitionDialog = (TDialogOverlayWrapperTransitionDialog);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapperTransition.ts


var TDialogOverlayWrapperTransition = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapperTransition',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    dialogShow: {
      type: Boolean,
      required: true
    },
    titleTag: {
      type: String,
      required: true
    },
    title: {
      type: String,
      default: undefined
    },
    icon: {
      type: String,
      default: undefined
    },
    textTag: {
      type: String,
      required: true
    },
    text: {
      type: String,
      default: undefined
    },
    cancelButtonText: {
      type: String,
      required: true
    },
    cancelButtonAriaLabel: {
      type: String,
      default: undefined
    },
    okButtonText: {
      type: String,
      required: true
    },
    okButtonAriaLabel: {
      type: String,
      default: undefined
    },
    showCloseButton: {
      type: Boolean,
      required: true
    },
    preConfirm: {
      type: Function,
      default: undefined
    },
    inputAttributes: {
      type: Object,
      default: undefined
    },
    inputType: {
      type: String,
      required: true
    },
    inputValidator: {
      type: Function,
      default: undefined
    },
    inputValue: {
      type: [String, Array],
      default: undefined
    },
    inputOptions: {
      type: [Array, Object],
      default: undefined
    },
    inputPlaceholder: {
      type: String,
      default: undefined
    },
    type: {
      type: String,
      required: true
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('transition', {
      props: {
        enterClass: this.getElementCssClass('enterClass'),
        enterActiveClass: this.getElementCssClass('enterActiveClass'),
        enterToClass: this.getElementCssClass('enterToClass'),
        leaveClass: this.getElementCssClass('leaveClass'),
        leaveActiveClass: this.getElementCssClass('leaveActiveClass'),
        leaveToClass: this.getElementCssClass('leaveToClass')
      }
    }, [createElement(TDialog_TDialogOverlayWrapperTransitionDialog, {
      props: {
        getElementCssClass: this.getElementCssClass,
        dialogShow: this.dialogShow,
        titleTag: this.titleTag,
        title: this.title,
        icon: this.icon,
        textTag: this.textTag,
        text: this.text,
        cancelButtonText: this.cancelButtonText,
        cancelButtonAriaLabel: this.cancelButtonAriaLabel,
        okButtonText: this.okButtonText,
        okButtonAriaLabel: this.okButtonAriaLabel,
        showCloseButton: this.showCloseButton,
        preConfirm: this.preConfirm,
        inputAttributes: this.inputAttributes,
        inputType: this.inputType,
        inputValidator: this.inputValidator,
        inputValue: this.inputValue,
        inputOptions: this.inputOptions,
        inputPlaceholder: this.inputPlaceholder,
        type: this.type
      },
      scopedSlots: this.$scopedSlots,
      on: {
        dismiss: function dismiss(e) {
          return _this.$emit('dismiss', e);
        },
        cancel: function cancel(e) {
          return _this.$emit('cancel', e);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submit: function submit(e, input, response) {
          return _this.$emit('submit', e, input, response);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submitError: function submitError(e, input, error) {
          return _this.$emit('submitError', e, input, error);
        }
      }
    }, this.$slots.default)]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapperTransition = (TDialogOverlayWrapperTransition);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlayWrapper.ts


var TDialogOverlayWrapper = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlayWrapper',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    dialogShow: {
      type: Boolean,
      required: true
    },
    titleTag: {
      type: String,
      required: true
    },
    title: {
      type: String,
      default: undefined
    },
    icon: {
      type: String,
      default: undefined
    },
    textTag: {
      type: String,
      required: true
    },
    text: {
      type: String,
      default: undefined
    },
    cancelButtonText: {
      type: String,
      required: true
    },
    cancelButtonAriaLabel: {
      type: String,
      default: undefined
    },
    okButtonText: {
      type: String,
      required: true
    },
    okButtonAriaLabel: {
      type: String,
      default: undefined
    },
    showCloseButton: {
      type: Boolean,
      required: true
    },
    preConfirm: {
      type: Function,
      default: undefined
    },
    inputAttributes: {
      type: Object,
      default: undefined
    },
    inputType: {
      type: String,
      required: true
    },
    inputValidator: {
      type: Function,
      default: undefined
    },
    inputValue: {
      type: [String, Array],
      default: undefined
    },
    inputOptions: {
      type: [Array, Object],
      default: undefined
    },
    inputPlaceholder: {
      type: String,
      default: undefined
    },
    type: {
      type: String,
      required: true
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('div', {
      ref: 'wrapper',
      class: this.getElementCssClass('wrapper')
    }, [createElement(TDialog_TDialogOverlayWrapperTransition, {
      props: {
        type: this.type,
        dialogShow: this.dialogShow,
        getElementCssClass: this.getElementCssClass,
        titleTag: this.titleTag,
        title: this.title,
        icon: this.icon,
        textTag: this.textTag,
        text: this.text,
        cancelButtonText: this.cancelButtonText,
        cancelButtonAriaLabel: this.cancelButtonAriaLabel,
        okButtonText: this.okButtonText,
        okButtonAriaLabel: this.okButtonAriaLabel,
        showCloseButton: this.showCloseButton,
        preConfirm: this.preConfirm,
        inputAttributes: this.inputAttributes,
        inputType: this.inputType,
        inputValidator: this.inputValidator,
        inputValue: this.inputValue,
        inputOptions: this.inputOptions,
        inputPlaceholder: this.inputPlaceholder
      },
      scopedSlots: this.$scopedSlots,
      on: {
        dismiss: function dismiss(e) {
          return _this.$emit('dismiss', e);
        },
        cancel: function cancel(e) {
          return _this.$emit('cancel', e);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submit: function submit(e, input, response) {
          return _this.$emit('submit', e, input, response);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submitError: function submitError(e, input, error) {
          return _this.$emit('submitError', e, input, error);
        }
      }
    }, this.$slots.default)]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlayWrapper = (TDialogOverlayWrapper);
// CONCATENATED MODULE: ./src/components/TDialog/TDialogOverlay.ts



var TDialogOverlay = external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
  name: 'TDialogOverlay',
  props: {
    getElementCssClass: {
      type: Function,
      required: true
    },
    overlayShow: {
      type: Boolean,
      required: true
    },
    dialogShow: {
      type: Boolean,
      required: true
    },
    titleTag: {
      type: String,
      required: true
    },
    title: {
      type: String,
      default: undefined
    },
    textTag: {
      type: String,
      required: true
    },
    text: {
      type: String,
      default: undefined
    },
    icon: {
      type: String,
      default: undefined
    },
    cancelButtonText: {
      type: String,
      required: true
    },
    cancelButtonAriaLabel: {
      type: String,
      default: undefined
    },
    okButtonText: {
      type: String,
      required: true
    },
    okButtonAriaLabel: {
      type: String,
      default: undefined
    },
    showCloseButton: {
      type: Boolean,
      required: true
    },
    preConfirm: {
      type: Function,
      default: undefined
    },
    inputAttributes: {
      type: Object,
      default: undefined
    },
    inputType: {
      type: String,
      required: true
    },
    inputValidator: {
      type: Function,
      default: undefined
    },
    inputValue: {
      type: [String, Array],
      default: undefined
    },
    inputOptions: {
      type: [Array, Object],
      default: undefined
    },
    inputPlaceholder: {
      type: String,
      default: undefined
    },
    type: {
      type: String,
      default: null
    }
  },
  methods: {
    clickHandler: function clickHandler(e) {
      if (e.target !== this.$el) {
        return;
      }

      this.$emit('outsideClick', e);
    },
    keyupHandler: function keyupHandler(e) {
      this.$emit('keyup', e);
    },
    focus: function focus() {
      var overlay = this.$el;

      if (overlay && overlay.focus) {
        overlay.focus();
      }
    },
    enableBodyScroll: function enableBodyScroll() {
      var mdl = this.$el;

      Object(bodyScrollLock_esm["b" /* enableBodyScroll */])(mdl);
    },
    disableBodyScroll: function disableBodyScroll() {
      var mdl = this.$el;

      Object(bodyScrollLock_esm["a" /* disableBodyScroll */])(mdl, {
        reserveScrollBarGap: true
      });
    }
  },
  render: function render(createElement) {
    var _this = this;

    if (!this.overlayShow) {
      return createElement();
    }

    return createElement('div', {
      attrs: {
        tabindex: 0
      },
      class: this.getElementCssClass('overlay'),
      on: {
        keyup: this.keyupHandler,
        click: this.clickHandler
      }
    }, [createElement(TDialog_TDialogOverlayWrapper, {
      props: {
        type: this.type,
        getElementCssClass: this.getElementCssClass,
        dialogShow: this.dialogShow,
        titleTag: this.titleTag,
        title: this.title,
        icon: this.icon,
        textTag: this.textTag,
        text: this.text,
        cancelButtonText: this.cancelButtonText,
        cancelButtonAriaLabel: this.cancelButtonAriaLabel,
        okButtonText: this.okButtonText,
        okButtonAriaLabel: this.okButtonAriaLabel,
        showCloseButton: this.showCloseButton,
        preConfirm: this.preConfirm,
        inputAttributes: this.inputAttributes,
        inputType: this.inputType,
        inputValidator: this.inputValidator,
        inputValue: this.inputValue,
        inputOptions: this.inputOptions,
        inputPlaceholder: this.inputPlaceholder
      },
      scopedSlots: this.$scopedSlots,
      on: {
        dismiss: function dismiss(e) {
          return _this.$emit('dismiss', e);
        },
        cancel: function cancel(e) {
          return _this.$emit('cancel', e);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submit: function submit(e, input, response) {
          return _this.$emit('submit', e, input, response);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submitError: function submitError(e, input, error) {
          return _this.$emit('submitError', e, input, error);
        }
      }
    }, this.$slots.default)]);
  }
});
/* harmony default export */ var TDialog_TDialogOverlay = (TDialogOverlay);
// CONCATENATED MODULE: ./src/components/TDialog.ts










var getInitialData = function getInitialData(vm) {
  return {
    overlayShow: vm.value,
    dialogShow: vm.value,
    params: undefined,
    preventAction: false,
    hideReason: undefined,
    input: undefined,
    resolve: null,
    reject: null,
    preConfirmResponse: undefined,
    preConfirmError: undefined
  };
};

var TDialog = Component["a" /* default */].extend({
  name: 'TDialog',
  props: {
    value: {
      type: Boolean,
      default: false
    },
    name: {
      type: String,
      default: undefined
    },
    titleTag: {
      type: String,
      default: 'h3'
    },
    title: {
      type: String,
      default: undefined
    },
    icon: {
      type: String,
      default: undefined
    },
    textTag: {
      type: String,
      default: 'p'
    },
    text: {
      type: String,
      default: undefined
    },
    clickToClose: {
      type: Boolean,
      default: true
    },
    escToClose: {
      type: Boolean,
      default: true
    },
    cancelButtonText: {
      type: String,
      default: 'Cancel'
    },
    cancelButtonAriaLabel: {
      type: String,
      default: undefined
    },
    okButtonText: {
      type: String,
      default: 'OK'
    },
    okButtonAriaLabel: {
      type: String,
      default: undefined
    },
    showCloseButton: {
      type: Boolean,
      default: false
    },
    disableBodyScroll: {
      type: Boolean,
      default: true
    },
    focusOnOpen: {
      type: Boolean,
      default: true
    },
    preConfirm: {
      type: Function,
      default: undefined
    },
    inputAttributes: {
      type: Object,
      default: undefined
    },
    inputType: {
      type: String,
      default: 'text'
    },
    inputValidator: {
      type: Function,
      default: undefined
    },
    inputValue: {
      type: [String, Array],
      default: undefined
    },
    inputOptions: {
      type: [Array, Object],
      default: undefined
    },
    inputPlaceholder: {
      type: String,
      default: undefined
    },
    type: {
      type: String,
      default: Dialog["a" /* DialogType */].Alert
    },
    fixedClasses: {
      type: Object,
      default: function _default() {
        return {
          overlay: 'overflow-auto scrolling-touch left-0 top-0 bottom-0 right-0 w-full h-full fixed',
          wrapper: 'relative mx-auto ',
          dialog: 'overflow-hidden relative',
          close: 'absolute right-0 top-0'
        };
      }
    },
    classes: {
      type: Object,
      default: function _default() {
        return {
          close: 'bg-gray-100 flex h-8 items-center justify-center m-1 rounded-full text-gray-700 w-8 hover:bg-gray-200',
          closeIcon: 'h-5 w-5 fill-current',
          overlay: 'z-40 bg-black bg-opacity-50',
          wrapper: 'z-50 max-w-md',
          dialog: 'bg-white rounded p-4 text-left overflow-hidden shadow ',
          body: '',
          buttons: 'mt-4 flex space-x-4 justify-center',
          iconWrapper: 'mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-gray-200 flex-shrink-0',
          icon: 'w-6 h-6 text-gray-700',
          content: 'mt-3',
          titleWrapper: '',
          title: 'text-lg leading-6 font-medium text-gray-900 text-center',
          textWrapper: 'mt-2 text-gray-600',
          text: '',
          cancelButton: 'inline-flex justify-center rounded-md border border-gray-300 px-4 py-2 bg-white text-base leading-6 font-medium text-gray-700 shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5 w-full max-w-xs',
          okButton: 'inline-flex justify-center rounded-md border border-transparent px-4 py-2 bg-blue-600 text-base leading-6 font-medium text-white shadow-sm hover:bg-blue-500 focus:outline-none focus:border-blue-700 focus:shadow-outline-blue transition ease-in-out duration-150 sm:text-sm sm:leading-5 w-full max-w-xs',
          inputWrapper: 'mt-3 flex items-center space-x-4 justify-center',
          input: 'form-input w-full',
          select: 'form-select w-full',
          radioWrapper: 'flex items-center space-x-2',
          radio: 'form-radio',
          radioText: '',
          checkboxWrapper: 'flex items-center space-x-2',
          checkbox: 'form-checkbox',
          checkboxText: '',
          errorMessage: 'text-red-500 block text-sm',
          busyWrapper: 'absolute bg-opacity-50 bg-white flex h-full items-center justify-center left-0 top-0 w-full',
          busyIcon: 'animate-spin h-6 w-6 fill-current text-gray-500',
          overlayEnterClass: '',
          overlayEnterActiveClass: 'opacity-0 transition ease-out duration-100',
          overlayEnterToClass: 'opacity-100',
          overlayLeaveClass: 'transition ease-in opacity-100',
          overlayLeaveActiveClass: '',
          overlayLeaveToClass: 'opacity-0 duration-75',
          enterClass: '',
          enterActiveClass: '',
          enterToClass: '',
          leaveClass: '',
          leaveActiveClass: '',
          leaveToClass: ''
        };
      }
    }
  },
  data: function data() {
    return getInitialData(this);
  },
  watch: {
    value: function value(_value) {
      if (_value) {
        this.show();
      } else {
        this.hideReason = Dialog["b" /* HideReason */].Value;
        this.close();
      }
    },
    overlayShow: function overlayShow(shown) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!shown) return [3
              /*break*/
              , 2];
              this.$emit('input', shown);
              this.$emit('change', shown);
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              this.dialogShow = true;
              return [3
              /*break*/
              , 3];

            case 2:
              this.closed();
              _a.label = 3;

            case 3:
              return [2
              /*return*/
              ];
          }
        });
      });
    },
    dialogShow: function dialogShow(shown) {
      return Object(tslib_es6["b" /* __awaiter */])(this, void 0, void 0, function () {
        return Object(tslib_es6["c" /* __generator */])(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!!shown) return [3
              /*break*/
              , 2];
              this.$emit('input', shown);
              this.$emit('change', shown);
              return [4
              /*yield*/
              , this.$nextTick()];

            case 1:
              _a.sent();

              this.overlayShow = false;
              return [3
              /*break*/
              , 3];

            case 2:
              this.opened();
              _a.label = 3;

            case 3:
              return [2
              /*return*/
              ];
          }
        });
      });
    }
  },
  beforeDestroy: function beforeDestroy() {
    var overlay = this.getOverlay();

    if (this.disableBodyScroll && overlay) {
      overlay.focus();
      overlay.enableBodyScroll();
    }
  },
  created: function created() {
    var _this = this;

    if (this.name) {
      this.$dialog.$on("show-" + this.name, function (resolve, reject, params) {
        if (params === void 0) {
          params = undefined;
        }

        _this.resolve = resolve;
        _this.reject = reject;

        _this.show(params);
      });
      this.$dialog.$on("hide-" + this.name, function () {
        _this.hideReason = Dialog["b" /* HideReason */].Method;

        _this.close();
      });
    }
  },
  render: function render(createElement) {
    var _this = this;

    return createElement('transition', {
      props: {
        enterClass: this.getElementCssClass('overlayEnterClass'),
        enterActiveClass: this.getElementCssClass('overlayEnterActiveClass'),
        enterToClass: this.getElementCssClass('overlayEnterToClass'),
        leaveClass: this.getElementCssClass('overlayLeaveClass'),
        leaveActiveClass: this.getElementCssClass('overlayLeaveActiveClass'),
        leaveToClass: this.getElementCssClass('overlayLeaveToClass')
      }
    }, [createElement(TDialog_TDialogOverlay, {
      ref: 'overlay',
      props: {
        type: this.type,
        overlayShow: this.overlayShow,
        dialogShow: this.dialogShow,
        titleTag: this.titleTag,
        title: this.title,
        icon: this.icon,
        textTag: this.textTag,
        text: this.text,
        cancelButtonText: this.cancelButtonText,
        cancelButtonAriaLabel: this.cancelButtonAriaLabel,
        okButtonText: this.okButtonText,
        okButtonAriaLabel: this.okButtonAriaLabel,
        showCloseButton: this.showCloseButton,
        preConfirm: this.preConfirm,
        inputAttributes: this.inputAttributes,
        inputType: this.inputType,
        inputValidator: this.inputValidator,
        inputValue: this.inputValue,
        inputOptions: this.inputOptions,
        inputPlaceholder: this.inputPlaceholder,
        getElementCssClass: this.getElementCssClass
      },
      scopedSlots: this.$scopedSlots,
      on: {
        outsideClick: this.outsideClick,
        keyup: this.keyupHandler,
        dismiss: function dismiss(e) {
          return _this.dismiss(e);
        },
        cancel: function cancel(e) {
          return _this.cancel(e);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submit: function submit(e, input, response) {
          return _this.submit(e, input, response);
        },
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        submitError: function submitError(e, input, error) {
          return _this.submitError(e, input, error);
        }
      }
    }, this.$slots.default)]);
  },
  methods: {
    getOverlay: function getOverlay() {
      return this.$refs.overlay;
    },
    keyupHandler: function keyupHandler(e) {
      if (e.keyCode === Key["a" /* default */].ESC && this.escToClose) {
        this.esc(e);
      }
    },
    beforeOpen: function beforeOpen() {
      this.$emit('before-open', {
        params: this.params,
        cancel: this.closeCancel
      });
    },
    opened: function opened() {
      this.$emit('opened', {
        params: this.params
      });
      this.prepareDomForDialog();
    },
    beforeClose: function beforeClose(event) {
      if (this.disableBodyScroll) {
        var overlay = this.getOverlay();

        if (overlay) {
          overlay.focus();
          overlay.enableBodyScroll();
        }
      }

      var beforeCloseParams = {
        cancel: this.closeCancel,
        event: event,
        reason: this.hideReason
      };

      if (this.input !== undefined) {
        beforeCloseParams.input = this.input;
      }

      if (this.preConfirmResponse !== undefined) {
        beforeCloseParams.response = this.preConfirmResponse;
      }

      this.$emit('before-close', beforeCloseParams);
    },
    closed: function closed() {
      var response = {
        hideReason: this.hideReason,
        isOk: this.hideReason === Dialog["b" /* HideReason */].Ok,
        isCancel: this.hideReason === Dialog["b" /* HideReason */].Cancel,
        isDismissed: typeof this.hideReason === 'string' && [Dialog["b" /* HideReason */].Close, Dialog["b" /* HideReason */].Esc, Dialog["b" /* HideReason */].Outside].includes(this.hideReason)
      };

      if (this.type === Dialog["a" /* DialogType */].Prompt && this.hideReason === Dialog["b" /* HideReason */].Ok && this.input !== undefined) {
        response.input = this.input;
      }

      if (this.preConfirmResponse !== undefined) {
        response.response = this.preConfirmResponse;
      } else if (this.preConfirmError !== undefined) {
        response.response = this.preConfirmError;
      }

      this.$emit('closed', response);

      if (this.reject && this.preConfirmError !== undefined) {
        this.reject(this.preConfirmError);
      } else if (this.resolve) {
        this.resolve(response);
      }

      this.reset();
    },
    prepareDomForDialog: function prepareDomForDialog() {
      var overlay = this.getOverlay();

      if (!overlay) {
        return;
      }

      if (this.disableBodyScroll) {
        overlay.disableBodyScroll();
      }

      if (this.focusOnOpen) {
        overlay.focus();
      }
    },
    dismiss: function dismiss(e) {
      this.hideReason = Dialog["b" /* HideReason */].Close;
      this.close(e);
    },
    esc: function esc(e) {
      this.hideReason = Dialog["b" /* HideReason */].Esc;
      this.close(e);
    },
    cancel: function cancel(e) {
      this.hideReason = Dialog["b" /* HideReason */].Cancel;
      this.close(e);
    },
    hide: function hide(e) {
      this.hideReason = Dialog["b" /* HideReason */].Method;
      this.close(e);
    },
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    submit: function submit(e, input, response) {
      this.hideReason = Dialog["b" /* HideReason */].Ok;
      this.input = input;
      this.preConfirmResponse = response;
      this.close(e);
    },
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    submitError: function submitError(e, input, error) {
      this.hideReason = Dialog["b" /* HideReason */].Ok;
      this.input = input;
      this.preConfirmError = error;
      this.close(e);
    },
    close: function close(e) {
      this.beforeClose(e);

      if (!this.preventAction) {
        this.dialogShow = false;
      } else {
        this.preventAction = false;
      }
    },
    show: function show(params) {
      if (params === void 0) {
        params = undefined;
      }

      this.params = params;
      this.beforeOpen();

      if (!this.preventAction) {
        this.overlayShow = true;
      } else {
        this.preventAction = false;
      }
    },
    closeCancel: function closeCancel() {
      this.preventAction = true;
    },
    reset: function reset() {
      Object.assign(this.$data, getInitialData(this));
    },
    outsideClick: function outsideClick(e) {
      if (this.clickToClose) {
        this.hideReason = Dialog["b" /* HideReason */].Outside;
        this.close(e);
      }
    }
  }
});
/* harmony default export */ var components_TDialog = __webpack_exports__["a"] = (TDialog);

/***/ }),

/***/ "f8af":
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__("2474");

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),

/***/ "f909":
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__("7e64"),
    assignMergeValue = __webpack_require__("b760"),
    baseFor = __webpack_require__("72af"),
    baseMergeDeep = __webpack_require__("4f50"),
    isObject = __webpack_require__("1a8c"),
    keysIn = __webpack_require__("9934"),
    safeGet = __webpack_require__("8adb");

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;


/***/ }),

/***/ "f9ce":
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__("ef5d"),
    basePropertyDeep = __webpack_require__("e3f8"),
    isKey = __webpack_require__("f608"),
    toKey = __webpack_require__("f4d6");

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),

/***/ "fa21":
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__("7530"),
    getPrototype = __webpack_require__("2dcb"),
    isPrototype = __webpack_require__("eac5");

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "TInput", function() { return /* reexport */ src_0["i" /* TInput */]; });
__webpack_require__.d(__webpack_exports__, "TTextarea", function() { return /* reexport */ src_0["s" /* TTextarea */]; });
__webpack_require__.d(__webpack_exports__, "TSelect", function() { return /* reexport */ src_0["p" /* TSelect */]; });
__webpack_require__.d(__webpack_exports__, "TRadio", function() { return /* reexport */ src_0["m" /* TRadio */]; });
__webpack_require__.d(__webpack_exports__, "TCheckbox", function() { return /* reexport */ src_0["d" /* TCheckbox */]; });
__webpack_require__.d(__webpack_exports__, "TButton", function() { return /* reexport */ src_0["b" /* TButton */]; });
__webpack_require__.d(__webpack_exports__, "TInputGroup", function() { return /* reexport */ src_0["j" /* TInputGroup */]; });
__webpack_require__.d(__webpack_exports__, "TCard", function() { return /* reexport */ src_0["c" /* TCard */]; });
__webpack_require__.d(__webpack_exports__, "TAlert", function() { return /* reexport */ src_0["a" /* TAlert */]; });
__webpack_require__.d(__webpack_exports__, "TModal", function() { return /* reexport */ src_0["k" /* TModal */]; });
__webpack_require__.d(__webpack_exports__, "TDropdown", function() { return /* reexport */ src_0["h" /* TDropdown */]; });
__webpack_require__.d(__webpack_exports__, "TRichSelect", function() { return /* reexport */ src_0["o" /* TRichSelect */]; });
__webpack_require__.d(__webpack_exports__, "TPagination", function() { return /* reexport */ src_0["l" /* TPagination */]; });
__webpack_require__.d(__webpack_exports__, "TTag", function() { return /* reexport */ src_0["r" /* TTag */]; });
__webpack_require__.d(__webpack_exports__, "TRadioGroup", function() { return /* reexport */ src_0["n" /* TRadioGroup */]; });
__webpack_require__.d(__webpack_exports__, "TCheckboxGroup", function() { return /* reexport */ src_0["e" /* TCheckboxGroup */]; });
__webpack_require__.d(__webpack_exports__, "TTable", function() { return /* reexport */ src_0["q" /* TTable */]; });
__webpack_require__.d(__webpack_exports__, "TDatepicker", function() { return /* reexport */ src_0["f" /* TDatepicker */]; });
__webpack_require__.d(__webpack_exports__, "TToggle", function() { return /* reexport */ src_0["t" /* TToggle */]; });
__webpack_require__.d(__webpack_exports__, "TDialog", function() { return /* reexport */ src_0["g" /* TDialog */]; });

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./src/index.ts
var src_0 = __webpack_require__("ffb4");

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src_0["u" /* default */]);



/***/ }),

/***/ "fb6a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var toAbsoluteIndex = __webpack_require__("23cb");
var toLength = __webpack_require__("50c4");
var toIndexedObject = __webpack_require__("fc6a");
var createProperty = __webpack_require__("8418");
var wellKnownSymbol = __webpack_require__("b622");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var arrayMethodUsesToLength = __webpack_require__("ae40");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
var USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "fba5":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),

/***/ "fc6a":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("44ad");
var requireObjectCoercible = __webpack_require__("1d80");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "fdbc":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "fdbf":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__("4930");

module.exports = NATIVE_SYMBOL
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "fea9":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global.Promise;


/***/ }),

/***/ "ffb4":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4160");
/* harmony import */ var core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_for_each__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_entries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("4fad");
/* harmony import */ var core_js_modules_es_object_entries__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_entries__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("159b");
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_extractPropsFromSettings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("f11b");
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("7994");
/* harmony import */ var _utils_configureDialogGlobals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("32fa");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TAlert"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "b", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TButton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "c", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TCard"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "d", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TCheckbox"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "e", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TCheckboxGroup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "f", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TDatepicker"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "g", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TDialog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "h", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TDropdown"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "i", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TInput"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "j", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TInputGroup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "k", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TModal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "l", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TPagination"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "m", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TRadio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "n", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TRadioGroup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "o", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TRichSelect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "p", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TSelect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "q", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "r", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "s", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TTextarea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "t", function() { return _components__WEBPACK_IMPORTED_MODULE_4__["TToggle"]; });







var entries = Object.entries(_components__WEBPACK_IMPORTED_MODULE_4__); // install function executed by Vue.use()
// eslint-disable-next-line max-len

var install = function installVueTailwind(Vue, options) {
  if (install.installed) return;
  install.installed = true; // eslint-disable-next-line no-param-reassign

  Vue.prototype.$vueTailwind = true;
  entries.forEach(function (_a) {
    var componentName = _a[0],
        component = _a[1];
    var settings = options && options[componentName] ? options[componentName] : {};
    var customProps = Object(_utils_extractPropsFromSettings__WEBPACK_IMPORTED_MODULE_3__[/* extractPropsFromComponentSettings */ "a"])(settings, component);

    if (customProps) {
      var componentWithCustomVariants = component.extend({
        props: customProps
      });
      Vue.component(componentName, componentWithCustomVariants);
    } else {
      Vue.component(componentName, component);
    }

    if (componentName === 'TModal') {
      // eslint-disable-next-line no-param-reassign
      Vue.prototype.$modal = new Vue({
        methods: {
          show: function show(name, params) {
            if (params === void 0) {
              params = undefined;
            }

            this.$emit("show-" + name, params);
          },
          hide: function hide(name) {
            this.$emit("hide-" + name);
          }
        }
      });
    } else if (componentName === 'TDialog') {
      Object(_utils_configureDialogGlobals__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])(Vue, settings);
    }
  });
}; // Create module definition for Vue.use()


var plugin = {
  install: install
}; // To auto-install on non-es builds, when vue is found
// eslint-disable-next-line no-redeclare

/* global window, global */

if (Object({"NODE_ENV":"production","BASE_URL":"/"}).ES_BUILD === 'false') {
  var GlobalVue = null;

  if (typeof window !== 'undefined') {
    GlobalVue = window.Vue;
  } else if (typeof global !== 'undefined') {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    GlobalVue = global.Vue;
  }

  if (GlobalVue) {
    GlobalVue.use(plugin);
  }
} // Default export is library as a whole, registered via Vue.use()


/* harmony default export */ __webpack_exports__["u"] = (plugin); // To allow individual component use, export components
// each can be registered via Vue.component()


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "ffd6":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ })

/******/ });
});
//# sourceMappingURL=vue-tailwind.umd.js.map